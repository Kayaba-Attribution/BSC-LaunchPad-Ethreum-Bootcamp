{"ast":null,"code":"var commonjsGlobal = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\n\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, \"default\") ? x[\"default\"] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, \"default\") ? n[\"default\"] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, \"default\") && Object.keys(n).length === 1 ? n[\"default\"] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var a = Object.defineProperty({}, \"__esModule\", {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\n\nfunction commonjsRequire() {\n  throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n}\n\nvar bn = createCommonjsModule(function (module) {\n  (function (module, exports) {\n    \"use strict\";\n\n    function assert(val, msg) {\n      if (!val) throw new Error(msg || \"Assertion failed\");\n    }\n\n    function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n\n    function BN(number, base, endian) {\n      if (BN.isBN(number)) {\n        return number;\n      }\n\n      this.negative = 0;\n      this.words = null;\n      this.length = 0;\n      this.red = null;\n\n      if (number !== null) {\n        if (base === \"le\" || base === \"be\") {\n          endian = base;\n          base = 10;\n        }\n\n        this._init(number || 0, base || 10, endian || \"be\");\n      }\n    }\n\n    if (typeof module === \"object\") {\n      module.exports = BN;\n    } else {\n      exports.BN = BN;\n    }\n\n    BN.BN = BN;\n    BN.wordSize = 26;\n    var Buffer;\n\n    try {\n      if (typeof window !== \"undefined\" && typeof window.Buffer !== \"undefined\") {\n        Buffer = window.Buffer;\n      } else {\n        Buffer = null.Buffer;\n      }\n    } catch (e) {}\n\n    BN.isBN = function isBN(num) {\n      if (num instanceof BN) {\n        return true;\n      }\n\n      return num !== null && typeof num === \"object\" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n    };\n\n    BN.max = function max(left, right) {\n      if (left.cmp(right) > 0) return left;\n      return right;\n    };\n\n    BN.min = function min(left, right) {\n      if (left.cmp(right) < 0) return left;\n      return right;\n    };\n\n    BN.prototype._init = function init(number, base, endian) {\n      if (typeof number === \"number\") {\n        return this._initNumber(number, base, endian);\n      }\n\n      if (typeof number === \"object\") {\n        return this._initArray(number, base, endian);\n      }\n\n      if (base === \"hex\") {\n        base = 16;\n      }\n\n      assert(base === (base | 0) && base >= 2 && base <= 36);\n      number = number.toString().replace(/\\s+/g, \"\");\n      var start = 0;\n\n      if (number[0] === \"-\") {\n        start++;\n        this.negative = 1;\n      }\n\n      if (start < number.length) {\n        if (base === 16) {\n          this._parseHex(number, start, endian);\n        } else {\n          this._parseBase(number, base, start);\n\n          if (endian === \"le\") {\n            this._initArray(this.toArray(), base, endian);\n          }\n        }\n      }\n    };\n\n    BN.prototype._initNumber = function _initNumber(number, base, endian) {\n      if (number < 0) {\n        this.negative = 1;\n        number = -number;\n      }\n\n      if (number < 67108864) {\n        this.words = [number & 67108863];\n        this.length = 1;\n      } else if (number < 4503599627370496) {\n        this.words = [number & 67108863, number / 67108864 & 67108863];\n        this.length = 2;\n      } else {\n        assert(number < 9007199254740992);\n        this.words = [number & 67108863, number / 67108864 & 67108863, 1];\n        this.length = 3;\n      }\n\n      if (endian !== \"le\") return;\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initArray = function _initArray(number, base, endian) {\n      assert(typeof number.length === \"number\");\n\n      if (number.length <= 0) {\n        this.words = [0];\n        this.length = 1;\n        return this;\n      }\n\n      this.length = Math.ceil(number.length / 3);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w;\n      var off = 0;\n\n      if (endian === \"be\") {\n        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n          this.words[j] |= w << off & 67108863;\n          this.words[j + 1] = w >>> 26 - off & 67108863;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      } else if (endian === \"le\") {\n        for (i = 0, j = 0; i < number.length; i += 3) {\n          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n          this.words[j] |= w << off & 67108863;\n          this.words[j + 1] = w >>> 26 - off & 67108863;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      }\n\n      return this.strip();\n    };\n\n    function parseHex4Bits(string, index) {\n      var c = string.charCodeAt(index);\n\n      if (c >= 65 && c <= 70) {\n        return c - 55;\n      } else if (c >= 97 && c <= 102) {\n        return c - 87;\n      } else {\n        return c - 48 & 15;\n      }\n    }\n\n    function parseHexByte(string, lowerBound, index) {\n      var r = parseHex4Bits(string, index);\n\n      if (index - 1 >= lowerBound) {\n        r |= parseHex4Bits(string, index - 1) << 4;\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseHex = function _parseHex(number, start, endian) {\n      this.length = Math.ceil((number.length - start) / 6);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var off = 0;\n      var j = 0;\n      var w;\n\n      if (endian === \"be\") {\n        for (i = number.length - 1; i >= start; i -= 2) {\n          w = parseHexByte(number, start, i) << off;\n          this.words[j] |= w & 67108863;\n\n          if (off >= 18) {\n            off -= 18;\n            j += 1;\n            this.words[j] |= w >>> 26;\n          } else {\n            off += 8;\n          }\n        }\n      } else {\n        var parseLength = number.length - start;\n\n        for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n          w = parseHexByte(number, start, i) << off;\n          this.words[j] |= w & 67108863;\n\n          if (off >= 18) {\n            off -= 18;\n            j += 1;\n            this.words[j] |= w >>> 26;\n          } else {\n            off += 8;\n          }\n        }\n      }\n\n      this.strip();\n    };\n\n    function parseBase(str, start, end, mul) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r *= mul;\n\n        if (c >= 49) {\n          r += c - 49 + 10;\n        } else if (c >= 17) {\n          r += c - 17 + 10;\n        } else {\n          r += c;\n        }\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseBase = function _parseBase(number, base, start) {\n      this.words = [0];\n      this.length = 1;\n\n      for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {\n        limbLen++;\n      }\n\n      limbLen--;\n      limbPow = limbPow / base | 0;\n      var total = number.length - start;\n      var mod = total % limbLen;\n      var end = Math.min(total, total - mod) + start;\n      var word = 0;\n\n      for (var i = start; i < end; i += limbLen) {\n        word = parseBase(number, i, i + limbLen, base);\n        this.imuln(limbPow);\n\n        if (this.words[0] + word < 67108864) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      if (mod !== 0) {\n        var pow = 1;\n        word = parseBase(number, i, number.length, base);\n\n        for (i = 0; i < mod; i++) {\n          pow *= base;\n        }\n\n        this.imuln(pow);\n\n        if (this.words[0] + word < 67108864) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      this.strip();\n    };\n\n    BN.prototype.copy = function copy(dest) {\n      dest.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        dest.words[i] = this.words[i];\n      }\n\n      dest.length = this.length;\n      dest.negative = this.negative;\n      dest.red = this.red;\n    };\n\n    BN.prototype.clone = function clone() {\n      var r = new BN(null);\n      this.copy(r);\n      return r;\n    };\n\n    BN.prototype._expand = function _expand(size) {\n      while (this.length < size) {\n        this.words[this.length++] = 0;\n      }\n\n      return this;\n    };\n\n    BN.prototype.strip = function strip() {\n      while (this.length > 1 && this.words[this.length - 1] === 0) {\n        this.length--;\n      }\n\n      return this._normSign();\n    };\n\n    BN.prototype._normSign = function _normSign() {\n      if (this.length === 1 && this.words[0] === 0) {\n        this.negative = 0;\n      }\n\n      return this;\n    };\n\n    BN.prototype.inspect = function inspect() {\n      return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n    };\n\n    var zeros = [\"\", \"0\", \"00\", \"000\", \"0000\", \"00000\", \"000000\", \"0000000\", \"00000000\", \"000000000\", \"0000000000\", \"00000000000\", \"000000000000\", \"0000000000000\", \"00000000000000\", \"000000000000000\", \"0000000000000000\", \"00000000000000000\", \"000000000000000000\", \"0000000000000000000\", \"00000000000000000000\", \"000000000000000000000\", \"0000000000000000000000\", \"00000000000000000000000\", \"000000000000000000000000\", \"0000000000000000000000000\"];\n    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n    BN.prototype.toString = function toString(base, padding) {\n      base = base || 10;\n      padding = padding | 0 || 1;\n      var out;\n\n      if (base === 16 || base === \"hex\") {\n        out = \"\";\n        var off = 0;\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var w = this.words[i];\n          var word = ((w << off | carry) & 16777215).toString(16);\n          carry = w >>> 24 - off & 16777215;\n\n          if (carry !== 0 || i !== this.length - 1) {\n            out = zeros[6 - word.length] + word + out;\n          } else {\n            out = word + out;\n          }\n\n          off += 2;\n\n          if (off >= 26) {\n            off -= 26;\n            i--;\n          }\n        }\n\n        if (carry !== 0) {\n          out = carry.toString(16) + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = \"0\" + out;\n        }\n\n        if (this.negative !== 0) {\n          out = \"-\" + out;\n        }\n\n        return out;\n      }\n\n      if (base === (base | 0) && base >= 2 && base <= 36) {\n        var groupSize = groupSizes[base];\n        var groupBase = groupBases[base];\n        out = \"\";\n        var c = this.clone();\n        c.negative = 0;\n\n        while (!c.isZero()) {\n          var r = c.modn(groupBase).toString(base);\n          c = c.idivn(groupBase);\n\n          if (!c.isZero()) {\n            out = zeros[groupSize - r.length] + r + out;\n          } else {\n            out = r + out;\n          }\n        }\n\n        if (this.isZero()) {\n          out = \"0\" + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = \"0\" + out;\n        }\n\n        if (this.negative !== 0) {\n          out = \"-\" + out;\n        }\n\n        return out;\n      }\n\n      assert(false, \"Base should be between 2 and 36\");\n    };\n\n    BN.prototype.toNumber = function toNumber() {\n      var ret = this.words[0];\n\n      if (this.length === 2) {\n        ret += this.words[1] * 67108864;\n      } else if (this.length === 3 && this.words[2] === 1) {\n        ret += 4503599627370496 + this.words[1] * 67108864;\n      } else if (this.length > 2) {\n        assert(false, \"Number can only safely store up to 53 bits\");\n      }\n\n      return this.negative !== 0 ? -ret : ret;\n    };\n\n    BN.prototype.toJSON = function toJSON() {\n      return this.toString(16);\n    };\n\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      assert(typeof Buffer !== \"undefined\");\n      return this.toArrayLike(Buffer, endian, length);\n    };\n\n    BN.prototype.toArray = function toArray(endian, length) {\n      return this.toArrayLike(Array, endian, length);\n    };\n\n    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n      var byteLength = this.byteLength();\n      var reqLength = length || Math.max(1, byteLength);\n      assert(byteLength <= reqLength, \"byte array longer than desired length\");\n      assert(reqLength > 0, \"Requested array length <= 0\");\n      this.strip();\n      var littleEndian = endian === \"le\";\n      var res = new ArrayType(reqLength);\n      var b, i;\n      var q = this.clone();\n\n      if (!littleEndian) {\n        for (i = 0; i < reqLength - byteLength; i++) {\n          res[i] = 0;\n        }\n\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(255);\n          q.iushrn(8);\n          res[reqLength - i - 1] = b;\n        }\n      } else {\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(255);\n          q.iushrn(8);\n          res[i] = b;\n        }\n\n        for (; i < reqLength; i++) {\n          res[i] = 0;\n        }\n      }\n\n      return res;\n    };\n\n    if (Math.clz32) {\n      BN.prototype._countBits = function _countBits(w) {\n        return 32 - Math.clz32(w);\n      };\n    } else {\n      BN.prototype._countBits = function _countBits(w) {\n        var t = w;\n        var r = 0;\n\n        if (t >= 4096) {\n          r += 13;\n          t >>>= 13;\n        }\n\n        if (t >= 64) {\n          r += 7;\n          t >>>= 7;\n        }\n\n        if (t >= 8) {\n          r += 4;\n          t >>>= 4;\n        }\n\n        if (t >= 2) {\n          r += 2;\n          t >>>= 2;\n        }\n\n        return r + t;\n      };\n    }\n\n    BN.prototype._zeroBits = function _zeroBits(w) {\n      if (w === 0) return 26;\n      var t = w;\n      var r = 0;\n\n      if ((t & 8191) === 0) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if ((t & 127) === 0) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if ((t & 15) === 0) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if ((t & 3) === 0) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      if ((t & 1) === 0) {\n        r++;\n      }\n\n      return r;\n    };\n\n    BN.prototype.bitLength = function bitLength() {\n      var w = this.words[this.length - 1];\n\n      var hi = this._countBits(w);\n\n      return (this.length - 1) * 26 + hi;\n    };\n\n    function toBitArray(num) {\n      var w = new Array(num.bitLength());\n\n      for (var bit = 0; bit < w.length; bit++) {\n        var off = bit / 26 | 0;\n        var wbit = bit % 26;\n        w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n      }\n\n      return w;\n    }\n\n    BN.prototype.zeroBits = function zeroBits() {\n      if (this.isZero()) return 0;\n      var r = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var b = this._zeroBits(this.words[i]);\n\n        r += b;\n        if (b !== 26) break;\n      }\n\n      return r;\n    };\n\n    BN.prototype.byteLength = function byteLength() {\n      return Math.ceil(this.bitLength() / 8);\n    };\n\n    BN.prototype.toTwos = function toTwos(width) {\n      if (this.negative !== 0) {\n        return this.abs().inotn(width).iaddn(1);\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.fromTwos = function fromTwos(width) {\n      if (this.testn(width - 1)) {\n        return this.notn(width).iaddn(1).ineg();\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.isNeg = function isNeg() {\n      return this.negative !== 0;\n    };\n\n    BN.prototype.neg = function neg() {\n      return this.clone().ineg();\n    };\n\n    BN.prototype.ineg = function ineg() {\n      if (!this.isZero()) {\n        this.negative ^= 1;\n      }\n\n      return this;\n    };\n\n    BN.prototype.iuor = function iuor(num) {\n      while (this.length < num.length) {\n        this.words[this.length++] = 0;\n      }\n\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] = this.words[i] | num.words[i];\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ior = function ior(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuor(num);\n    };\n\n    BN.prototype.or = function or(num) {\n      if (this.length > num.length) return this.clone().ior(num);\n      return num.clone().ior(this);\n    };\n\n    BN.prototype.uor = function uor(num) {\n      if (this.length > num.length) return this.clone().iuor(num);\n      return num.clone().iuor(this);\n    };\n\n    BN.prototype.iuand = function iuand(num) {\n      var b;\n\n      if (this.length > num.length) {\n        b = num;\n      } else {\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = this.words[i] & num.words[i];\n      }\n\n      this.length = b.length;\n      return this.strip();\n    };\n\n    BN.prototype.iand = function iand(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuand(num);\n    };\n\n    BN.prototype.and = function and(num) {\n      if (this.length > num.length) return this.clone().iand(num);\n      return num.clone().iand(this);\n    };\n\n    BN.prototype.uand = function uand(num) {\n      if (this.length > num.length) return this.clone().iuand(num);\n      return num.clone().iuand(this);\n    };\n\n    BN.prototype.iuxor = function iuxor(num) {\n      var a;\n      var b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = a.words[i] ^ b.words[i];\n      }\n\n      if (this !== a) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = a.length;\n      return this.strip();\n    };\n\n    BN.prototype.ixor = function ixor(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuxor(num);\n    };\n\n    BN.prototype.xor = function xor(num) {\n      if (this.length > num.length) return this.clone().ixor(num);\n      return num.clone().ixor(this);\n    };\n\n    BN.prototype.uxor = function uxor(num) {\n      if (this.length > num.length) return this.clone().iuxor(num);\n      return num.clone().iuxor(this);\n    };\n\n    BN.prototype.inotn = function inotn(width) {\n      assert(typeof width === \"number\" && width >= 0);\n      var bytesNeeded = Math.ceil(width / 26) | 0;\n      var bitsLeft = width % 26;\n\n      this._expand(bytesNeeded);\n\n      if (bitsLeft > 0) {\n        bytesNeeded--;\n      }\n\n      for (var i = 0; i < bytesNeeded; i++) {\n        this.words[i] = ~this.words[i] & 67108863;\n      }\n\n      if (bitsLeft > 0) {\n        this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.notn = function notn(width) {\n      return this.clone().inotn(width);\n    };\n\n    BN.prototype.setn = function setn(bit, val) {\n      assert(typeof bit === \"number\" && bit >= 0);\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n\n      this._expand(off + 1);\n\n      if (val) {\n        this.words[off] = this.words[off] | 1 << wbit;\n      } else {\n        this.words[off] = this.words[off] & ~(1 << wbit);\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.iadd = function iadd(num) {\n      var r;\n\n      if (this.negative !== 0 && num.negative === 0) {\n        this.negative = 0;\n        r = this.isub(num);\n        this.negative ^= 1;\n        return this._normSign();\n      } else if (this.negative === 0 && num.negative !== 0) {\n        num.negative = 0;\n        r = this.isub(num);\n        num.negative = 1;\n        return r._normSign();\n      }\n\n      var a, b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n        this.words[i] = r & 67108863;\n        carry = r >>> 26;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        this.words[i] = r & 67108863;\n        carry = r >>> 26;\n      }\n\n      this.length = a.length;\n\n      if (carry !== 0) {\n        this.words[this.length] = carry;\n        this.length++;\n      } else if (a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      return this;\n    };\n\n    BN.prototype.add = function add(num) {\n      var res;\n\n      if (num.negative !== 0 && this.negative === 0) {\n        num.negative = 0;\n        res = this.sub(num);\n        num.negative ^= 1;\n        return res;\n      } else if (num.negative === 0 && this.negative !== 0) {\n        this.negative = 0;\n        res = num.sub(this);\n        this.negative = 1;\n        return res;\n      }\n\n      if (this.length > num.length) return this.clone().iadd(num);\n      return num.clone().iadd(this);\n    };\n\n    BN.prototype.isub = function isub(num) {\n      if (num.negative !== 0) {\n        num.negative = 0;\n        var r = this.iadd(num);\n        num.negative = 1;\n        return r._normSign();\n      } else if (this.negative !== 0) {\n        this.negative = 0;\n        this.iadd(num);\n        this.negative = 1;\n        return this._normSign();\n      }\n\n      var cmp = this.cmp(num);\n\n      if (cmp === 0) {\n        this.negative = 0;\n        this.length = 1;\n        this.words[0] = 0;\n        return this;\n      }\n\n      var a, b;\n\n      if (cmp > 0) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 67108863;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 67108863;\n      }\n\n      if (carry === 0 && i < a.length && a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = Math.max(this.length, i);\n\n      if (a !== this) {\n        this.negative = 1;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.sub = function sub(num) {\n      return this.clone().isub(num);\n    };\n\n    function smallMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      var len = self.length + num.length | 0;\n      out.length = len;\n      len = len - 1 | 0;\n      var a = self.words[0] | 0;\n      var b = num.words[0] | 0;\n      var r = a * b;\n      var lo = r & 67108863;\n      var carry = r / 67108864 | 0;\n      out.words[0] = lo;\n\n      for (var k = 1; k < len; k++) {\n        var ncarry = carry >>> 26;\n        var rword = carry & 67108863;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j | 0;\n          a = self.words[i] | 0;\n          b = num.words[j] | 0;\n          r = a * b + rword;\n          ncarry += r / 67108864 | 0;\n          rword = r & 67108863;\n        }\n\n        out.words[k] = rword | 0;\n        carry = ncarry | 0;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry | 0;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    }\n\n    var comb10MulTo = function comb10MulTo(self, num, out) {\n      var a = self.words;\n      var b = num.words;\n      var o = out.words;\n      var c = 0;\n      var lo;\n      var mid;\n      var hi;\n      var a0 = a[0] | 0;\n      var al0 = a0 & 8191;\n      var ah0 = a0 >>> 13;\n      var a1 = a[1] | 0;\n      var al1 = a1 & 8191;\n      var ah1 = a1 >>> 13;\n      var a2 = a[2] | 0;\n      var al2 = a2 & 8191;\n      var ah2 = a2 >>> 13;\n      var a3 = a[3] | 0;\n      var al3 = a3 & 8191;\n      var ah3 = a3 >>> 13;\n      var a4 = a[4] | 0;\n      var al4 = a4 & 8191;\n      var ah4 = a4 >>> 13;\n      var a5 = a[5] | 0;\n      var al5 = a5 & 8191;\n      var ah5 = a5 >>> 13;\n      var a6 = a[6] | 0;\n      var al6 = a6 & 8191;\n      var ah6 = a6 >>> 13;\n      var a7 = a[7] | 0;\n      var al7 = a7 & 8191;\n      var ah7 = a7 >>> 13;\n      var a8 = a[8] | 0;\n      var al8 = a8 & 8191;\n      var ah8 = a8 >>> 13;\n      var a9 = a[9] | 0;\n      var al9 = a9 & 8191;\n      var ah9 = a9 >>> 13;\n      var b0 = b[0] | 0;\n      var bl0 = b0 & 8191;\n      var bh0 = b0 >>> 13;\n      var b1 = b[1] | 0;\n      var bl1 = b1 & 8191;\n      var bh1 = b1 >>> 13;\n      var b2 = b[2] | 0;\n      var bl2 = b2 & 8191;\n      var bh2 = b2 >>> 13;\n      var b3 = b[3] | 0;\n      var bl3 = b3 & 8191;\n      var bh3 = b3 >>> 13;\n      var b4 = b[4] | 0;\n      var bl4 = b4 & 8191;\n      var bh4 = b4 >>> 13;\n      var b5 = b[5] | 0;\n      var bl5 = b5 & 8191;\n      var bh5 = b5 >>> 13;\n      var b6 = b[6] | 0;\n      var bl6 = b6 & 8191;\n      var bh6 = b6 >>> 13;\n      var b7 = b[7] | 0;\n      var bl7 = b7 & 8191;\n      var bh7 = b7 >>> 13;\n      var b8 = b[8] | 0;\n      var bl8 = b8 & 8191;\n      var bh8 = b8 >>> 13;\n      var b9 = b[9] | 0;\n      var bl9 = b9 & 8191;\n      var bh9 = b9 >>> 13;\n      out.negative = self.negative ^ num.negative;\n      out.length = 19;\n      lo = Math.imul(al0, bl0);\n      mid = Math.imul(al0, bh0);\n      mid = mid + Math.imul(ah0, bl0) | 0;\n      hi = Math.imul(ah0, bh0);\n      var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n      w0 &= 67108863;\n      lo = Math.imul(al1, bl0);\n      mid = Math.imul(al1, bh0);\n      mid = mid + Math.imul(ah1, bl0) | 0;\n      hi = Math.imul(ah1, bh0);\n      lo = lo + Math.imul(al0, bl1) | 0;\n      mid = mid + Math.imul(al0, bh1) | 0;\n      mid = mid + Math.imul(ah0, bl1) | 0;\n      hi = hi + Math.imul(ah0, bh1) | 0;\n      var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n      w1 &= 67108863;\n      lo = Math.imul(al2, bl0);\n      mid = Math.imul(al2, bh0);\n      mid = mid + Math.imul(ah2, bl0) | 0;\n      hi = Math.imul(ah2, bh0);\n      lo = lo + Math.imul(al1, bl1) | 0;\n      mid = mid + Math.imul(al1, bh1) | 0;\n      mid = mid + Math.imul(ah1, bl1) | 0;\n      hi = hi + Math.imul(ah1, bh1) | 0;\n      lo = lo + Math.imul(al0, bl2) | 0;\n      mid = mid + Math.imul(al0, bh2) | 0;\n      mid = mid + Math.imul(ah0, bl2) | 0;\n      hi = hi + Math.imul(ah0, bh2) | 0;\n      var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n      w2 &= 67108863;\n      lo = Math.imul(al3, bl0);\n      mid = Math.imul(al3, bh0);\n      mid = mid + Math.imul(ah3, bl0) | 0;\n      hi = Math.imul(ah3, bh0);\n      lo = lo + Math.imul(al2, bl1) | 0;\n      mid = mid + Math.imul(al2, bh1) | 0;\n      mid = mid + Math.imul(ah2, bl1) | 0;\n      hi = hi + Math.imul(ah2, bh1) | 0;\n      lo = lo + Math.imul(al1, bl2) | 0;\n      mid = mid + Math.imul(al1, bh2) | 0;\n      mid = mid + Math.imul(ah1, bl2) | 0;\n      hi = hi + Math.imul(ah1, bh2) | 0;\n      lo = lo + Math.imul(al0, bl3) | 0;\n      mid = mid + Math.imul(al0, bh3) | 0;\n      mid = mid + Math.imul(ah0, bl3) | 0;\n      hi = hi + Math.imul(ah0, bh3) | 0;\n      var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n      w3 &= 67108863;\n      lo = Math.imul(al4, bl0);\n      mid = Math.imul(al4, bh0);\n      mid = mid + Math.imul(ah4, bl0) | 0;\n      hi = Math.imul(ah4, bh0);\n      lo = lo + Math.imul(al3, bl1) | 0;\n      mid = mid + Math.imul(al3, bh1) | 0;\n      mid = mid + Math.imul(ah3, bl1) | 0;\n      hi = hi + Math.imul(ah3, bh1) | 0;\n      lo = lo + Math.imul(al2, bl2) | 0;\n      mid = mid + Math.imul(al2, bh2) | 0;\n      mid = mid + Math.imul(ah2, bl2) | 0;\n      hi = hi + Math.imul(ah2, bh2) | 0;\n      lo = lo + Math.imul(al1, bl3) | 0;\n      mid = mid + Math.imul(al1, bh3) | 0;\n      mid = mid + Math.imul(ah1, bl3) | 0;\n      hi = hi + Math.imul(ah1, bh3) | 0;\n      lo = lo + Math.imul(al0, bl4) | 0;\n      mid = mid + Math.imul(al0, bh4) | 0;\n      mid = mid + Math.imul(ah0, bl4) | 0;\n      hi = hi + Math.imul(ah0, bh4) | 0;\n      var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n      w4 &= 67108863;\n      lo = Math.imul(al5, bl0);\n      mid = Math.imul(al5, bh0);\n      mid = mid + Math.imul(ah5, bl0) | 0;\n      hi = Math.imul(ah5, bh0);\n      lo = lo + Math.imul(al4, bl1) | 0;\n      mid = mid + Math.imul(al4, bh1) | 0;\n      mid = mid + Math.imul(ah4, bl1) | 0;\n      hi = hi + Math.imul(ah4, bh1) | 0;\n      lo = lo + Math.imul(al3, bl2) | 0;\n      mid = mid + Math.imul(al3, bh2) | 0;\n      mid = mid + Math.imul(ah3, bl2) | 0;\n      hi = hi + Math.imul(ah3, bh2) | 0;\n      lo = lo + Math.imul(al2, bl3) | 0;\n      mid = mid + Math.imul(al2, bh3) | 0;\n      mid = mid + Math.imul(ah2, bl3) | 0;\n      hi = hi + Math.imul(ah2, bh3) | 0;\n      lo = lo + Math.imul(al1, bl4) | 0;\n      mid = mid + Math.imul(al1, bh4) | 0;\n      mid = mid + Math.imul(ah1, bl4) | 0;\n      hi = hi + Math.imul(ah1, bh4) | 0;\n      lo = lo + Math.imul(al0, bl5) | 0;\n      mid = mid + Math.imul(al0, bh5) | 0;\n      mid = mid + Math.imul(ah0, bl5) | 0;\n      hi = hi + Math.imul(ah0, bh5) | 0;\n      var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n      w5 &= 67108863;\n      lo = Math.imul(al6, bl0);\n      mid = Math.imul(al6, bh0);\n      mid = mid + Math.imul(ah6, bl0) | 0;\n      hi = Math.imul(ah6, bh0);\n      lo = lo + Math.imul(al5, bl1) | 0;\n      mid = mid + Math.imul(al5, bh1) | 0;\n      mid = mid + Math.imul(ah5, bl1) | 0;\n      hi = hi + Math.imul(ah5, bh1) | 0;\n      lo = lo + Math.imul(al4, bl2) | 0;\n      mid = mid + Math.imul(al4, bh2) | 0;\n      mid = mid + Math.imul(ah4, bl2) | 0;\n      hi = hi + Math.imul(ah4, bh2) | 0;\n      lo = lo + Math.imul(al3, bl3) | 0;\n      mid = mid + Math.imul(al3, bh3) | 0;\n      mid = mid + Math.imul(ah3, bl3) | 0;\n      hi = hi + Math.imul(ah3, bh3) | 0;\n      lo = lo + Math.imul(al2, bl4) | 0;\n      mid = mid + Math.imul(al2, bh4) | 0;\n      mid = mid + Math.imul(ah2, bl4) | 0;\n      hi = hi + Math.imul(ah2, bh4) | 0;\n      lo = lo + Math.imul(al1, bl5) | 0;\n      mid = mid + Math.imul(al1, bh5) | 0;\n      mid = mid + Math.imul(ah1, bl5) | 0;\n      hi = hi + Math.imul(ah1, bh5) | 0;\n      lo = lo + Math.imul(al0, bl6) | 0;\n      mid = mid + Math.imul(al0, bh6) | 0;\n      mid = mid + Math.imul(ah0, bl6) | 0;\n      hi = hi + Math.imul(ah0, bh6) | 0;\n      var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n      w6 &= 67108863;\n      lo = Math.imul(al7, bl0);\n      mid = Math.imul(al7, bh0);\n      mid = mid + Math.imul(ah7, bl0) | 0;\n      hi = Math.imul(ah7, bh0);\n      lo = lo + Math.imul(al6, bl1) | 0;\n      mid = mid + Math.imul(al6, bh1) | 0;\n      mid = mid + Math.imul(ah6, bl1) | 0;\n      hi = hi + Math.imul(ah6, bh1) | 0;\n      lo = lo + Math.imul(al5, bl2) | 0;\n      mid = mid + Math.imul(al5, bh2) | 0;\n      mid = mid + Math.imul(ah5, bl2) | 0;\n      hi = hi + Math.imul(ah5, bh2) | 0;\n      lo = lo + Math.imul(al4, bl3) | 0;\n      mid = mid + Math.imul(al4, bh3) | 0;\n      mid = mid + Math.imul(ah4, bl3) | 0;\n      hi = hi + Math.imul(ah4, bh3) | 0;\n      lo = lo + Math.imul(al3, bl4) | 0;\n      mid = mid + Math.imul(al3, bh4) | 0;\n      mid = mid + Math.imul(ah3, bl4) | 0;\n      hi = hi + Math.imul(ah3, bh4) | 0;\n      lo = lo + Math.imul(al2, bl5) | 0;\n      mid = mid + Math.imul(al2, bh5) | 0;\n      mid = mid + Math.imul(ah2, bl5) | 0;\n      hi = hi + Math.imul(ah2, bh5) | 0;\n      lo = lo + Math.imul(al1, bl6) | 0;\n      mid = mid + Math.imul(al1, bh6) | 0;\n      mid = mid + Math.imul(ah1, bl6) | 0;\n      hi = hi + Math.imul(ah1, bh6) | 0;\n      lo = lo + Math.imul(al0, bl7) | 0;\n      mid = mid + Math.imul(al0, bh7) | 0;\n      mid = mid + Math.imul(ah0, bl7) | 0;\n      hi = hi + Math.imul(ah0, bh7) | 0;\n      var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n      w7 &= 67108863;\n      lo = Math.imul(al8, bl0);\n      mid = Math.imul(al8, bh0);\n      mid = mid + Math.imul(ah8, bl0) | 0;\n      hi = Math.imul(ah8, bh0);\n      lo = lo + Math.imul(al7, bl1) | 0;\n      mid = mid + Math.imul(al7, bh1) | 0;\n      mid = mid + Math.imul(ah7, bl1) | 0;\n      hi = hi + Math.imul(ah7, bh1) | 0;\n      lo = lo + Math.imul(al6, bl2) | 0;\n      mid = mid + Math.imul(al6, bh2) | 0;\n      mid = mid + Math.imul(ah6, bl2) | 0;\n      hi = hi + Math.imul(ah6, bh2) | 0;\n      lo = lo + Math.imul(al5, bl3) | 0;\n      mid = mid + Math.imul(al5, bh3) | 0;\n      mid = mid + Math.imul(ah5, bl3) | 0;\n      hi = hi + Math.imul(ah5, bh3) | 0;\n      lo = lo + Math.imul(al4, bl4) | 0;\n      mid = mid + Math.imul(al4, bh4) | 0;\n      mid = mid + Math.imul(ah4, bl4) | 0;\n      hi = hi + Math.imul(ah4, bh4) | 0;\n      lo = lo + Math.imul(al3, bl5) | 0;\n      mid = mid + Math.imul(al3, bh5) | 0;\n      mid = mid + Math.imul(ah3, bl5) | 0;\n      hi = hi + Math.imul(ah3, bh5) | 0;\n      lo = lo + Math.imul(al2, bl6) | 0;\n      mid = mid + Math.imul(al2, bh6) | 0;\n      mid = mid + Math.imul(ah2, bl6) | 0;\n      hi = hi + Math.imul(ah2, bh6) | 0;\n      lo = lo + Math.imul(al1, bl7) | 0;\n      mid = mid + Math.imul(al1, bh7) | 0;\n      mid = mid + Math.imul(ah1, bl7) | 0;\n      hi = hi + Math.imul(ah1, bh7) | 0;\n      lo = lo + Math.imul(al0, bl8) | 0;\n      mid = mid + Math.imul(al0, bh8) | 0;\n      mid = mid + Math.imul(ah0, bl8) | 0;\n      hi = hi + Math.imul(ah0, bh8) | 0;\n      var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n      w8 &= 67108863;\n      lo = Math.imul(al9, bl0);\n      mid = Math.imul(al9, bh0);\n      mid = mid + Math.imul(ah9, bl0) | 0;\n      hi = Math.imul(ah9, bh0);\n      lo = lo + Math.imul(al8, bl1) | 0;\n      mid = mid + Math.imul(al8, bh1) | 0;\n      mid = mid + Math.imul(ah8, bl1) | 0;\n      hi = hi + Math.imul(ah8, bh1) | 0;\n      lo = lo + Math.imul(al7, bl2) | 0;\n      mid = mid + Math.imul(al7, bh2) | 0;\n      mid = mid + Math.imul(ah7, bl2) | 0;\n      hi = hi + Math.imul(ah7, bh2) | 0;\n      lo = lo + Math.imul(al6, bl3) | 0;\n      mid = mid + Math.imul(al6, bh3) | 0;\n      mid = mid + Math.imul(ah6, bl3) | 0;\n      hi = hi + Math.imul(ah6, bh3) | 0;\n      lo = lo + Math.imul(al5, bl4) | 0;\n      mid = mid + Math.imul(al5, bh4) | 0;\n      mid = mid + Math.imul(ah5, bl4) | 0;\n      hi = hi + Math.imul(ah5, bh4) | 0;\n      lo = lo + Math.imul(al4, bl5) | 0;\n      mid = mid + Math.imul(al4, bh5) | 0;\n      mid = mid + Math.imul(ah4, bl5) | 0;\n      hi = hi + Math.imul(ah4, bh5) | 0;\n      lo = lo + Math.imul(al3, bl6) | 0;\n      mid = mid + Math.imul(al3, bh6) | 0;\n      mid = mid + Math.imul(ah3, bl6) | 0;\n      hi = hi + Math.imul(ah3, bh6) | 0;\n      lo = lo + Math.imul(al2, bl7) | 0;\n      mid = mid + Math.imul(al2, bh7) | 0;\n      mid = mid + Math.imul(ah2, bl7) | 0;\n      hi = hi + Math.imul(ah2, bh7) | 0;\n      lo = lo + Math.imul(al1, bl8) | 0;\n      mid = mid + Math.imul(al1, bh8) | 0;\n      mid = mid + Math.imul(ah1, bl8) | 0;\n      hi = hi + Math.imul(ah1, bh8) | 0;\n      lo = lo + Math.imul(al0, bl9) | 0;\n      mid = mid + Math.imul(al0, bh9) | 0;\n      mid = mid + Math.imul(ah0, bl9) | 0;\n      hi = hi + Math.imul(ah0, bh9) | 0;\n      var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n      w9 &= 67108863;\n      lo = Math.imul(al9, bl1);\n      mid = Math.imul(al9, bh1);\n      mid = mid + Math.imul(ah9, bl1) | 0;\n      hi = Math.imul(ah9, bh1);\n      lo = lo + Math.imul(al8, bl2) | 0;\n      mid = mid + Math.imul(al8, bh2) | 0;\n      mid = mid + Math.imul(ah8, bl2) | 0;\n      hi = hi + Math.imul(ah8, bh2) | 0;\n      lo = lo + Math.imul(al7, bl3) | 0;\n      mid = mid + Math.imul(al7, bh3) | 0;\n      mid = mid + Math.imul(ah7, bl3) | 0;\n      hi = hi + Math.imul(ah7, bh3) | 0;\n      lo = lo + Math.imul(al6, bl4) | 0;\n      mid = mid + Math.imul(al6, bh4) | 0;\n      mid = mid + Math.imul(ah6, bl4) | 0;\n      hi = hi + Math.imul(ah6, bh4) | 0;\n      lo = lo + Math.imul(al5, bl5) | 0;\n      mid = mid + Math.imul(al5, bh5) | 0;\n      mid = mid + Math.imul(ah5, bl5) | 0;\n      hi = hi + Math.imul(ah5, bh5) | 0;\n      lo = lo + Math.imul(al4, bl6) | 0;\n      mid = mid + Math.imul(al4, bh6) | 0;\n      mid = mid + Math.imul(ah4, bl6) | 0;\n      hi = hi + Math.imul(ah4, bh6) | 0;\n      lo = lo + Math.imul(al3, bl7) | 0;\n      mid = mid + Math.imul(al3, bh7) | 0;\n      mid = mid + Math.imul(ah3, bl7) | 0;\n      hi = hi + Math.imul(ah3, bh7) | 0;\n      lo = lo + Math.imul(al2, bl8) | 0;\n      mid = mid + Math.imul(al2, bh8) | 0;\n      mid = mid + Math.imul(ah2, bl8) | 0;\n      hi = hi + Math.imul(ah2, bh8) | 0;\n      lo = lo + Math.imul(al1, bl9) | 0;\n      mid = mid + Math.imul(al1, bh9) | 0;\n      mid = mid + Math.imul(ah1, bl9) | 0;\n      hi = hi + Math.imul(ah1, bh9) | 0;\n      var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n      w10 &= 67108863;\n      lo = Math.imul(al9, bl2);\n      mid = Math.imul(al9, bh2);\n      mid = mid + Math.imul(ah9, bl2) | 0;\n      hi = Math.imul(ah9, bh2);\n      lo = lo + Math.imul(al8, bl3) | 0;\n      mid = mid + Math.imul(al8, bh3) | 0;\n      mid = mid + Math.imul(ah8, bl3) | 0;\n      hi = hi + Math.imul(ah8, bh3) | 0;\n      lo = lo + Math.imul(al7, bl4) | 0;\n      mid = mid + Math.imul(al7, bh4) | 0;\n      mid = mid + Math.imul(ah7, bl4) | 0;\n      hi = hi + Math.imul(ah7, bh4) | 0;\n      lo = lo + Math.imul(al6, bl5) | 0;\n      mid = mid + Math.imul(al6, bh5) | 0;\n      mid = mid + Math.imul(ah6, bl5) | 0;\n      hi = hi + Math.imul(ah6, bh5) | 0;\n      lo = lo + Math.imul(al5, bl6) | 0;\n      mid = mid + Math.imul(al5, bh6) | 0;\n      mid = mid + Math.imul(ah5, bl6) | 0;\n      hi = hi + Math.imul(ah5, bh6) | 0;\n      lo = lo + Math.imul(al4, bl7) | 0;\n      mid = mid + Math.imul(al4, bh7) | 0;\n      mid = mid + Math.imul(ah4, bl7) | 0;\n      hi = hi + Math.imul(ah4, bh7) | 0;\n      lo = lo + Math.imul(al3, bl8) | 0;\n      mid = mid + Math.imul(al3, bh8) | 0;\n      mid = mid + Math.imul(ah3, bl8) | 0;\n      hi = hi + Math.imul(ah3, bh8) | 0;\n      lo = lo + Math.imul(al2, bl9) | 0;\n      mid = mid + Math.imul(al2, bh9) | 0;\n      mid = mid + Math.imul(ah2, bl9) | 0;\n      hi = hi + Math.imul(ah2, bh9) | 0;\n      var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n      w11 &= 67108863;\n      lo = Math.imul(al9, bl3);\n      mid = Math.imul(al9, bh3);\n      mid = mid + Math.imul(ah9, bl3) | 0;\n      hi = Math.imul(ah9, bh3);\n      lo = lo + Math.imul(al8, bl4) | 0;\n      mid = mid + Math.imul(al8, bh4) | 0;\n      mid = mid + Math.imul(ah8, bl4) | 0;\n      hi = hi + Math.imul(ah8, bh4) | 0;\n      lo = lo + Math.imul(al7, bl5) | 0;\n      mid = mid + Math.imul(al7, bh5) | 0;\n      mid = mid + Math.imul(ah7, bl5) | 0;\n      hi = hi + Math.imul(ah7, bh5) | 0;\n      lo = lo + Math.imul(al6, bl6) | 0;\n      mid = mid + Math.imul(al6, bh6) | 0;\n      mid = mid + Math.imul(ah6, bl6) | 0;\n      hi = hi + Math.imul(ah6, bh6) | 0;\n      lo = lo + Math.imul(al5, bl7) | 0;\n      mid = mid + Math.imul(al5, bh7) | 0;\n      mid = mid + Math.imul(ah5, bl7) | 0;\n      hi = hi + Math.imul(ah5, bh7) | 0;\n      lo = lo + Math.imul(al4, bl8) | 0;\n      mid = mid + Math.imul(al4, bh8) | 0;\n      mid = mid + Math.imul(ah4, bl8) | 0;\n      hi = hi + Math.imul(ah4, bh8) | 0;\n      lo = lo + Math.imul(al3, bl9) | 0;\n      mid = mid + Math.imul(al3, bh9) | 0;\n      mid = mid + Math.imul(ah3, bl9) | 0;\n      hi = hi + Math.imul(ah3, bh9) | 0;\n      var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n      w12 &= 67108863;\n      lo = Math.imul(al9, bl4);\n      mid = Math.imul(al9, bh4);\n      mid = mid + Math.imul(ah9, bl4) | 0;\n      hi = Math.imul(ah9, bh4);\n      lo = lo + Math.imul(al8, bl5) | 0;\n      mid = mid + Math.imul(al8, bh5) | 0;\n      mid = mid + Math.imul(ah8, bl5) | 0;\n      hi = hi + Math.imul(ah8, bh5) | 0;\n      lo = lo + Math.imul(al7, bl6) | 0;\n      mid = mid + Math.imul(al7, bh6) | 0;\n      mid = mid + Math.imul(ah7, bl6) | 0;\n      hi = hi + Math.imul(ah7, bh6) | 0;\n      lo = lo + Math.imul(al6, bl7) | 0;\n      mid = mid + Math.imul(al6, bh7) | 0;\n      mid = mid + Math.imul(ah6, bl7) | 0;\n      hi = hi + Math.imul(ah6, bh7) | 0;\n      lo = lo + Math.imul(al5, bl8) | 0;\n      mid = mid + Math.imul(al5, bh8) | 0;\n      mid = mid + Math.imul(ah5, bl8) | 0;\n      hi = hi + Math.imul(ah5, bh8) | 0;\n      lo = lo + Math.imul(al4, bl9) | 0;\n      mid = mid + Math.imul(al4, bh9) | 0;\n      mid = mid + Math.imul(ah4, bl9) | 0;\n      hi = hi + Math.imul(ah4, bh9) | 0;\n      var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n      w13 &= 67108863;\n      lo = Math.imul(al9, bl5);\n      mid = Math.imul(al9, bh5);\n      mid = mid + Math.imul(ah9, bl5) | 0;\n      hi = Math.imul(ah9, bh5);\n      lo = lo + Math.imul(al8, bl6) | 0;\n      mid = mid + Math.imul(al8, bh6) | 0;\n      mid = mid + Math.imul(ah8, bl6) | 0;\n      hi = hi + Math.imul(ah8, bh6) | 0;\n      lo = lo + Math.imul(al7, bl7) | 0;\n      mid = mid + Math.imul(al7, bh7) | 0;\n      mid = mid + Math.imul(ah7, bl7) | 0;\n      hi = hi + Math.imul(ah7, bh7) | 0;\n      lo = lo + Math.imul(al6, bl8) | 0;\n      mid = mid + Math.imul(al6, bh8) | 0;\n      mid = mid + Math.imul(ah6, bl8) | 0;\n      hi = hi + Math.imul(ah6, bh8) | 0;\n      lo = lo + Math.imul(al5, bl9) | 0;\n      mid = mid + Math.imul(al5, bh9) | 0;\n      mid = mid + Math.imul(ah5, bl9) | 0;\n      hi = hi + Math.imul(ah5, bh9) | 0;\n      var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n      w14 &= 67108863;\n      lo = Math.imul(al9, bl6);\n      mid = Math.imul(al9, bh6);\n      mid = mid + Math.imul(ah9, bl6) | 0;\n      hi = Math.imul(ah9, bh6);\n      lo = lo + Math.imul(al8, bl7) | 0;\n      mid = mid + Math.imul(al8, bh7) | 0;\n      mid = mid + Math.imul(ah8, bl7) | 0;\n      hi = hi + Math.imul(ah8, bh7) | 0;\n      lo = lo + Math.imul(al7, bl8) | 0;\n      mid = mid + Math.imul(al7, bh8) | 0;\n      mid = mid + Math.imul(ah7, bl8) | 0;\n      hi = hi + Math.imul(ah7, bh8) | 0;\n      lo = lo + Math.imul(al6, bl9) | 0;\n      mid = mid + Math.imul(al6, bh9) | 0;\n      mid = mid + Math.imul(ah6, bl9) | 0;\n      hi = hi + Math.imul(ah6, bh9) | 0;\n      var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n      w15 &= 67108863;\n      lo = Math.imul(al9, bl7);\n      mid = Math.imul(al9, bh7);\n      mid = mid + Math.imul(ah9, bl7) | 0;\n      hi = Math.imul(ah9, bh7);\n      lo = lo + Math.imul(al8, bl8) | 0;\n      mid = mid + Math.imul(al8, bh8) | 0;\n      mid = mid + Math.imul(ah8, bl8) | 0;\n      hi = hi + Math.imul(ah8, bh8) | 0;\n      lo = lo + Math.imul(al7, bl9) | 0;\n      mid = mid + Math.imul(al7, bh9) | 0;\n      mid = mid + Math.imul(ah7, bl9) | 0;\n      hi = hi + Math.imul(ah7, bh9) | 0;\n      var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n      w16 &= 67108863;\n      lo = Math.imul(al9, bl8);\n      mid = Math.imul(al9, bh8);\n      mid = mid + Math.imul(ah9, bl8) | 0;\n      hi = Math.imul(ah9, bh8);\n      lo = lo + Math.imul(al8, bl9) | 0;\n      mid = mid + Math.imul(al8, bh9) | 0;\n      mid = mid + Math.imul(ah8, bl9) | 0;\n      hi = hi + Math.imul(ah8, bh9) | 0;\n      var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n      w17 &= 67108863;\n      lo = Math.imul(al9, bl9);\n      mid = Math.imul(al9, bh9);\n      mid = mid + Math.imul(ah9, bl9) | 0;\n      hi = Math.imul(ah9, bh9);\n      var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n      w18 &= 67108863;\n      o[0] = w0;\n      o[1] = w1;\n      o[2] = w2;\n      o[3] = w3;\n      o[4] = w4;\n      o[5] = w5;\n      o[6] = w6;\n      o[7] = w7;\n      o[8] = w8;\n      o[9] = w9;\n      o[10] = w10;\n      o[11] = w11;\n      o[12] = w12;\n      o[13] = w13;\n      o[14] = w14;\n      o[15] = w15;\n      o[16] = w16;\n      o[17] = w17;\n      o[18] = w18;\n\n      if (c !== 0) {\n        o[19] = c;\n        out.length++;\n      }\n\n      return out;\n    };\n\n    if (!Math.imul) {\n      comb10MulTo = smallMulTo;\n    }\n\n    function bigMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      out.length = self.length + num.length;\n      var carry = 0;\n      var hncarry = 0;\n\n      for (var k = 0; k < out.length - 1; k++) {\n        var ncarry = hncarry;\n        hncarry = 0;\n        var rword = carry & 67108863;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j;\n          var a = self.words[i] | 0;\n          var b = num.words[j] | 0;\n          var r = a * b;\n          var lo = r & 67108863;\n          ncarry = ncarry + (r / 67108864 | 0) | 0;\n          lo = lo + rword | 0;\n          rword = lo & 67108863;\n          ncarry = ncarry + (lo >>> 26) | 0;\n          hncarry += ncarry >>> 26;\n          ncarry &= 67108863;\n        }\n\n        out.words[k] = rword;\n        carry = ncarry;\n        ncarry = hncarry;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    }\n\n    function jumboMulTo(self, num, out) {\n      var fftm = new FFTM();\n      return fftm.mulp(self, num, out);\n    }\n\n    BN.prototype.mulTo = function mulTo(num, out) {\n      var res;\n      var len = this.length + num.length;\n\n      if (this.length === 10 && num.length === 10) {\n        res = comb10MulTo(this, num, out);\n      } else if (len < 63) {\n        res = smallMulTo(this, num, out);\n      } else if (len < 1024) {\n        res = bigMulTo(this, num, out);\n      } else {\n        res = jumboMulTo(this, num, out);\n      }\n\n      return res;\n    };\n\n    function FFTM(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n    FFTM.prototype.makeRBT = function makeRBT(N) {\n      var t = new Array(N);\n      var l = BN.prototype._countBits(N) - 1;\n\n      for (var i = 0; i < N; i++) {\n        t[i] = this.revBin(i, l, N);\n      }\n\n      return t;\n    };\n\n    FFTM.prototype.revBin = function revBin(x, l, N) {\n      if (x === 0 || x === N - 1) return x;\n      var rb = 0;\n\n      for (var i = 0; i < l; i++) {\n        rb |= (x & 1) << l - i - 1;\n        x >>= 1;\n      }\n\n      return rb;\n    };\n\n    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n      for (var i = 0; i < N; i++) {\n        rtws[i] = rws[rbt[i]];\n        itws[i] = iws[rbt[i]];\n      }\n    };\n\n    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n      this.permute(rbt, rws, iws, rtws, itws, N);\n\n      for (var s = 1; s < N; s <<= 1) {\n        var l = s << 1;\n        var rtwdf = Math.cos(2 * Math.PI / l);\n        var itwdf = Math.sin(2 * Math.PI / l);\n\n        for (var p = 0; p < N; p += l) {\n          var rtwdf_ = rtwdf;\n          var itwdf_ = itwdf;\n\n          for (var j = 0; j < s; j++) {\n            var re = rtws[p + j];\n            var ie = itws[p + j];\n            var ro = rtws[p + j + s];\n            var io = itws[p + j + s];\n            var rx = rtwdf_ * ro - itwdf_ * io;\n            io = rtwdf_ * io + itwdf_ * ro;\n            ro = rx;\n            rtws[p + j] = re + ro;\n            itws[p + j] = ie + io;\n            rtws[p + j + s] = re - ro;\n            itws[p + j + s] = ie - io;\n\n            if (j !== l) {\n              rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n              itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n              rtwdf_ = rx;\n            }\n          }\n        }\n      }\n    };\n\n    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n      var N = Math.max(m, n) | 1;\n      var odd = N & 1;\n      var i = 0;\n\n      for (N = N / 2 | 0; N; N = N >>> 1) {\n        i++;\n      }\n\n      return 1 << i + 1 + odd;\n    };\n\n    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n      if (N <= 1) return;\n\n      for (var i = 0; i < N / 2; i++) {\n        var t = rws[i];\n        rws[i] = rws[N - i - 1];\n        rws[N - i - 1] = t;\n        t = iws[i];\n        iws[i] = -iws[N - i - 1];\n        iws[N - i - 1] = -t;\n      }\n    };\n\n    FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < N / 2; i++) {\n        var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;\n        ws[i] = w & 67108863;\n\n        if (w < 67108864) {\n          carry = 0;\n        } else {\n          carry = w / 67108864 | 0;\n        }\n      }\n\n      return ws;\n    };\n\n    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < len; i++) {\n        carry = carry + (ws[i] | 0);\n        rws[2 * i] = carry & 8191;\n        carry = carry >>> 13;\n        rws[2 * i + 1] = carry & 8191;\n        carry = carry >>> 13;\n      }\n\n      for (i = 2 * len; i < N; ++i) {\n        rws[i] = 0;\n      }\n\n      assert(carry === 0);\n      assert((carry & ~8191) === 0);\n    };\n\n    FFTM.prototype.stub = function stub(N) {\n      var ph = new Array(N);\n\n      for (var i = 0; i < N; i++) {\n        ph[i] = 0;\n      }\n\n      return ph;\n    };\n\n    FFTM.prototype.mulp = function mulp(x, y, out) {\n      var N = 2 * this.guessLen13b(x.length, y.length);\n      var rbt = this.makeRBT(N);\n\n      var _ = this.stub(N);\n\n      var rws = new Array(N);\n      var rwst = new Array(N);\n      var iwst = new Array(N);\n      var nrws = new Array(N);\n      var nrwst = new Array(N);\n      var niwst = new Array(N);\n      var rmws = out.words;\n      rmws.length = N;\n      this.convert13b(x.words, x.length, rws, N);\n      this.convert13b(y.words, y.length, nrws, N);\n      this.transform(rws, _, rwst, iwst, N, rbt);\n      this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n      for (var i = 0; i < N; i++) {\n        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n        rwst[i] = rx;\n      }\n\n      this.conjugate(rwst, iwst, N);\n      this.transform(rwst, iwst, rmws, _, N, rbt);\n      this.conjugate(rmws, _, N);\n      this.normalize13b(rmws, N);\n      out.negative = x.negative ^ y.negative;\n      out.length = x.length + y.length;\n      return out.strip();\n    };\n\n    BN.prototype.mul = function mul(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return this.mulTo(num, out);\n    };\n\n    BN.prototype.mulf = function mulf(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return jumboMulTo(this, num, out);\n    };\n\n    BN.prototype.imul = function imul(num) {\n      return this.clone().mulTo(num, this);\n    };\n\n    BN.prototype.imuln = function imuln(num) {\n      assert(typeof num === \"number\");\n      assert(num < 67108864);\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = (this.words[i] | 0) * num;\n        var lo = (w & 67108863) + (carry & 67108863);\n        carry >>= 26;\n        carry += w / 67108864 | 0;\n        carry += lo >>> 26;\n        this.words[i] = lo & 67108863;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.muln = function muln(num) {\n      return this.clone().imuln(num);\n    };\n\n    BN.prototype.sqr = function sqr() {\n      return this.mul(this);\n    };\n\n    BN.prototype.isqr = function isqr() {\n      return this.imul(this.clone());\n    };\n\n    BN.prototype.pow = function pow(num) {\n      var w = toBitArray(num);\n      if (w.length === 0) return new BN(1);\n      var res = this;\n\n      for (var i = 0; i < w.length; i++, res = res.sqr()) {\n        if (w[i] !== 0) break;\n      }\n\n      if (++i < w.length) {\n        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n          if (w[i] === 0) continue;\n          res = res.mul(q);\n        }\n      }\n\n      return res;\n    };\n\n    BN.prototype.iushln = function iushln(bits) {\n      assert(typeof bits === \"number\" && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      var carryMask = 67108863 >>> 26 - r << 26 - r;\n      var i;\n\n      if (r !== 0) {\n        var carry = 0;\n\n        for (i = 0; i < this.length; i++) {\n          var newCarry = this.words[i] & carryMask;\n          var c = (this.words[i] | 0) - newCarry << r;\n          this.words[i] = c | carry;\n          carry = newCarry >>> 26 - r;\n        }\n\n        if (carry) {\n          this.words[i] = carry;\n          this.length++;\n        }\n      }\n\n      if (s !== 0) {\n        for (i = this.length - 1; i >= 0; i--) {\n          this.words[i + s] = this.words[i];\n        }\n\n        for (i = 0; i < s; i++) {\n          this.words[i] = 0;\n        }\n\n        this.length += s;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishln = function ishln(bits) {\n      assert(this.negative === 0);\n      return this.iushln(bits);\n    };\n\n    BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n      assert(typeof bits === \"number\" && bits >= 0);\n      var h;\n\n      if (hint) {\n        h = (hint - hint % 26) / 26;\n      } else {\n        h = 0;\n      }\n\n      var r = bits % 26;\n      var s = Math.min((bits - r) / 26, this.length);\n      var mask = 67108863 ^ 67108863 >>> r << r;\n      var maskedWords = extended;\n      h -= s;\n      h = Math.max(0, h);\n\n      if (maskedWords) {\n        for (var i = 0; i < s; i++) {\n          maskedWords.words[i] = this.words[i];\n        }\n\n        maskedWords.length = s;\n      }\n\n      if (s === 0) {} else if (this.length > s) {\n        this.length -= s;\n\n        for (i = 0; i < this.length; i++) {\n          this.words[i] = this.words[i + s];\n        }\n      } else {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n\n      var carry = 0;\n\n      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n        var word = this.words[i] | 0;\n        this.words[i] = carry << 26 - r | word >>> r;\n        carry = word & mask;\n      }\n\n      if (maskedWords && carry !== 0) {\n        maskedWords.words[maskedWords.length++] = carry;\n      }\n\n      if (this.length === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n      assert(this.negative === 0);\n      return this.iushrn(bits, hint, extended);\n    };\n\n    BN.prototype.shln = function shln(bits) {\n      return this.clone().ishln(bits);\n    };\n\n    BN.prototype.ushln = function ushln(bits) {\n      return this.clone().iushln(bits);\n    };\n\n    BN.prototype.shrn = function shrn(bits) {\n      return this.clone().ishrn(bits);\n    };\n\n    BN.prototype.ushrn = function ushrn(bits) {\n      return this.clone().iushrn(bits);\n    };\n\n    BN.prototype.testn = function testn(bit) {\n      assert(typeof bit === \"number\" && bit >= 0);\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r;\n      if (this.length <= s) return false;\n      var w = this.words[s];\n      return !!(w & q);\n    };\n\n    BN.prototype.imaskn = function imaskn(bits) {\n      assert(typeof bits === \"number\" && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      assert(this.negative === 0, \"imaskn works only with positive numbers\");\n\n      if (this.length <= s) {\n        return this;\n      }\n\n      if (r !== 0) {\n        s++;\n      }\n\n      this.length = Math.min(s, this.length);\n\n      if (r !== 0) {\n        var mask = 67108863 ^ 67108863 >>> r << r;\n        this.words[this.length - 1] &= mask;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.maskn = function maskn(bits) {\n      return this.clone().imaskn(bits);\n    };\n\n    BN.prototype.iaddn = function iaddn(num) {\n      assert(typeof num === \"number\");\n      assert(num < 67108864);\n      if (num < 0) return this.isubn(-num);\n\n      if (this.negative !== 0) {\n        if (this.length === 1 && (this.words[0] | 0) < num) {\n          this.words[0] = num - (this.words[0] | 0);\n          this.negative = 0;\n          return this;\n        }\n\n        this.negative = 0;\n        this.isubn(num);\n        this.negative = 1;\n        return this;\n      }\n\n      return this._iaddn(num);\n    };\n\n    BN.prototype._iaddn = function _iaddn(num) {\n      this.words[0] += num;\n\n      for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {\n        this.words[i] -= 67108864;\n\n        if (i === this.length - 1) {\n          this.words[i + 1] = 1;\n        } else {\n          this.words[i + 1]++;\n        }\n      }\n\n      this.length = Math.max(this.length, i + 1);\n      return this;\n    };\n\n    BN.prototype.isubn = function isubn(num) {\n      assert(typeof num === \"number\");\n      assert(num < 67108864);\n      if (num < 0) return this.iaddn(-num);\n\n      if (this.negative !== 0) {\n        this.negative = 0;\n        this.iaddn(num);\n        this.negative = 1;\n        return this;\n      }\n\n      this.words[0] -= num;\n\n      if (this.length === 1 && this.words[0] < 0) {\n        this.words[0] = -this.words[0];\n        this.negative = 1;\n      } else {\n        for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n          this.words[i] += 67108864;\n          this.words[i + 1] -= 1;\n        }\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.addn = function addn(num) {\n      return this.clone().iaddn(num);\n    };\n\n    BN.prototype.subn = function subn(num) {\n      return this.clone().isubn(num);\n    };\n\n    BN.prototype.iabs = function iabs() {\n      this.negative = 0;\n      return this;\n    };\n\n    BN.prototype.abs = function abs() {\n      return this.clone().iabs();\n    };\n\n    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n      var len = num.length + shift;\n      var i;\n\n      this._expand(len);\n\n      var w;\n      var carry = 0;\n\n      for (i = 0; i < num.length; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        var right = (num.words[i] | 0) * mul;\n        w -= right & 67108863;\n        carry = (w >> 26) - (right / 67108864 | 0);\n        this.words[i + shift] = w & 67108863;\n      }\n\n      for (; i < this.length - shift; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        carry = w >> 26;\n        this.words[i + shift] = w & 67108863;\n      }\n\n      if (carry === 0) return this.strip();\n      assert(carry === -1);\n      carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        w = -(this.words[i] | 0) + carry;\n        carry = w >> 26;\n        this.words[i] = w & 67108863;\n      }\n\n      this.negative = 1;\n      return this.strip();\n    };\n\n    BN.prototype._wordDiv = function _wordDiv(num, mode) {\n      var shift = this.length - num.length;\n      var a = this.clone();\n      var b = num;\n      var bhi = b.words[b.length - 1] | 0;\n\n      var bhiBits = this._countBits(bhi);\n\n      shift = 26 - bhiBits;\n\n      if (shift !== 0) {\n        b = b.ushln(shift);\n        a.iushln(shift);\n        bhi = b.words[b.length - 1] | 0;\n      }\n\n      var m = a.length - b.length;\n      var q;\n\n      if (mode !== \"mod\") {\n        q = new BN(null);\n        q.length = m + 1;\n        q.words = new Array(q.length);\n\n        for (var i = 0; i < q.length; i++) {\n          q.words[i] = 0;\n        }\n      }\n\n      var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n      if (diff.negative === 0) {\n        a = diff;\n\n        if (q) {\n          q.words[m] = 1;\n        }\n      }\n\n      for (var j = m - 1; j >= 0; j--) {\n        var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);\n        qj = Math.min(qj / bhi | 0, 67108863);\n\n        a._ishlnsubmul(b, qj, j);\n\n        while (a.negative !== 0) {\n          qj--;\n          a.negative = 0;\n\n          a._ishlnsubmul(b, 1, j);\n\n          if (!a.isZero()) {\n            a.negative ^= 1;\n          }\n        }\n\n        if (q) {\n          q.words[j] = qj;\n        }\n      }\n\n      if (q) {\n        q.strip();\n      }\n\n      a.strip();\n\n      if (mode !== \"div\" && shift !== 0) {\n        a.iushrn(shift);\n      }\n\n      return {\n        div: q || null,\n        mod: a\n      };\n    };\n\n    BN.prototype.divmod = function divmod(num, mode, positive) {\n      assert(!num.isZero());\n\n      if (this.isZero()) {\n        return {\n          div: new BN(0),\n          mod: new BN(0)\n        };\n      }\n\n      var div, mod, res;\n\n      if (this.negative !== 0 && num.negative === 0) {\n        res = this.neg().divmod(num, mode);\n\n        if (mode !== \"mod\") {\n          div = res.div.neg();\n        }\n\n        if (mode !== \"div\") {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.iadd(num);\n          }\n        }\n\n        return {\n          div: div,\n          mod: mod\n        };\n      }\n\n      if (this.negative === 0 && num.negative !== 0) {\n        res = this.divmod(num.neg(), mode);\n\n        if (mode !== \"mod\") {\n          div = res.div.neg();\n        }\n\n        return {\n          div: div,\n          mod: res.mod\n        };\n      }\n\n      if ((this.negative & num.negative) !== 0) {\n        res = this.neg().divmod(num.neg(), mode);\n\n        if (mode !== \"div\") {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.isub(num);\n          }\n        }\n\n        return {\n          div: res.div,\n          mod: mod\n        };\n      }\n\n      if (num.length > this.length || this.cmp(num) < 0) {\n        return {\n          div: new BN(0),\n          mod: this\n        };\n      }\n\n      if (num.length === 1) {\n        if (mode === \"div\") {\n          return {\n            div: this.divn(num.words[0]),\n            mod: null\n          };\n        }\n\n        if (mode === \"mod\") {\n          return {\n            div: null,\n            mod: new BN(this.modn(num.words[0]))\n          };\n        }\n\n        return {\n          div: this.divn(num.words[0]),\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return this._wordDiv(num, mode);\n    };\n\n    BN.prototype.div = function div(num) {\n      return this.divmod(num, \"div\", false).div;\n    };\n\n    BN.prototype.mod = function mod(num) {\n      return this.divmod(num, \"mod\", false).mod;\n    };\n\n    BN.prototype.umod = function umod(num) {\n      return this.divmod(num, \"mod\", true).mod;\n    };\n\n    BN.prototype.divRound = function divRound(num) {\n      var dm = this.divmod(num);\n      if (dm.mod.isZero()) return dm.div;\n      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n      var half = num.ushrn(1);\n      var r2 = num.andln(1);\n      var cmp = mod.cmp(half);\n      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n    };\n\n    BN.prototype.modn = function modn(num) {\n      assert(num <= 67108863);\n      var p = (1 << 26) % num;\n      var acc = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        acc = (p * acc + (this.words[i] | 0)) % num;\n      }\n\n      return acc;\n    };\n\n    BN.prototype.idivn = function idivn(num) {\n      assert(num <= 67108863);\n      var carry = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var w = (this.words[i] | 0) + carry * 67108864;\n        this.words[i] = w / num | 0;\n        carry = w % num;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.divn = function divn(num) {\n      return this.clone().idivn(num);\n    };\n\n    BN.prototype.egcd = function egcd(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var x = this;\n      var y = p.clone();\n\n      if (x.negative !== 0) {\n        x = x.umod(p);\n      } else {\n        x = x.clone();\n      }\n\n      var A = new BN(1);\n      var B = new BN(0);\n      var C = new BN(0);\n      var D = new BN(1);\n      var g = 0;\n\n      while (x.isEven() && y.isEven()) {\n        x.iushrn(1);\n        y.iushrn(1);\n        ++g;\n      }\n\n      var yp = y.clone();\n      var xp = x.clone();\n\n      while (!x.isZero()) {\n        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          x.iushrn(i);\n\n          while (i-- > 0) {\n            if (A.isOdd() || B.isOdd()) {\n              A.iadd(yp);\n              B.isub(xp);\n            }\n\n            A.iushrn(1);\n            B.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          y.iushrn(j);\n\n          while (j-- > 0) {\n            if (C.isOdd() || D.isOdd()) {\n              C.iadd(yp);\n              D.isub(xp);\n            }\n\n            C.iushrn(1);\n            D.iushrn(1);\n          }\n        }\n\n        if (x.cmp(y) >= 0) {\n          x.isub(y);\n          A.isub(C);\n          B.isub(D);\n        } else {\n          y.isub(x);\n          C.isub(A);\n          D.isub(B);\n        }\n      }\n\n      return {\n        a: C,\n        b: D,\n        gcd: y.iushln(g)\n      };\n    };\n\n    BN.prototype._invmp = function _invmp(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var a = this;\n      var b = p.clone();\n\n      if (a.negative !== 0) {\n        a = a.umod(p);\n      } else {\n        a = a.clone();\n      }\n\n      var x1 = new BN(1);\n      var x2 = new BN(0);\n      var delta = b.clone();\n\n      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          a.iushrn(i);\n\n          while (i-- > 0) {\n            if (x1.isOdd()) {\n              x1.iadd(delta);\n            }\n\n            x1.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          b.iushrn(j);\n\n          while (j-- > 0) {\n            if (x2.isOdd()) {\n              x2.iadd(delta);\n            }\n\n            x2.iushrn(1);\n          }\n        }\n\n        if (a.cmp(b) >= 0) {\n          a.isub(b);\n          x1.isub(x2);\n        } else {\n          b.isub(a);\n          x2.isub(x1);\n        }\n      }\n\n      var res;\n\n      if (a.cmpn(1) === 0) {\n        res = x1;\n      } else {\n        res = x2;\n      }\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(p);\n      }\n\n      return res;\n    };\n\n    BN.prototype.gcd = function gcd(num) {\n      if (this.isZero()) return num.abs();\n      if (num.isZero()) return this.abs();\n      var a = this.clone();\n      var b = num.clone();\n      a.negative = 0;\n      b.negative = 0;\n\n      for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n        a.iushrn(1);\n        b.iushrn(1);\n      }\n\n      do {\n        while (a.isEven()) {\n          a.iushrn(1);\n        }\n\n        while (b.isEven()) {\n          b.iushrn(1);\n        }\n\n        var r = a.cmp(b);\n\n        if (r < 0) {\n          var t = a;\n          a = b;\n          b = t;\n        } else if (r === 0 || b.cmpn(1) === 0) {\n          break;\n        }\n\n        a.isub(b);\n      } while (true);\n\n      return b.iushln(shift);\n    };\n\n    BN.prototype.invm = function invm(num) {\n      return this.egcd(num).a.umod(num);\n    };\n\n    BN.prototype.isEven = function isEven() {\n      return (this.words[0] & 1) === 0;\n    };\n\n    BN.prototype.isOdd = function isOdd() {\n      return (this.words[0] & 1) === 1;\n    };\n\n    BN.prototype.andln = function andln(num) {\n      return this.words[0] & num;\n    };\n\n    BN.prototype.bincn = function bincn(bit) {\n      assert(typeof bit === \"number\");\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r;\n\n      if (this.length <= s) {\n        this._expand(s + 1);\n\n        this.words[s] |= q;\n        return this;\n      }\n\n      var carry = q;\n\n      for (var i = s; carry !== 0 && i < this.length; i++) {\n        var w = this.words[i] | 0;\n        w += carry;\n        carry = w >>> 26;\n        w &= 67108863;\n        this.words[i] = w;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.isZero = function isZero() {\n      return this.length === 1 && this.words[0] === 0;\n    };\n\n    BN.prototype.cmpn = function cmpn(num) {\n      var negative = num < 0;\n      if (this.negative !== 0 && !negative) return -1;\n      if (this.negative === 0 && negative) return 1;\n      this.strip();\n      var res;\n\n      if (this.length > 1) {\n        res = 1;\n      } else {\n        if (negative) {\n          num = -num;\n        }\n\n        assert(num <= 67108863, \"Number is too big\");\n        var w = this.words[0] | 0;\n        res = w === num ? 0 : w < num ? -1 : 1;\n      }\n\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    };\n\n    BN.prototype.cmp = function cmp(num) {\n      if (this.negative !== 0 && num.negative === 0) return -1;\n      if (this.negative === 0 && num.negative !== 0) return 1;\n      var res = this.ucmp(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    };\n\n    BN.prototype.ucmp = function ucmp(num) {\n      if (this.length > num.length) return 1;\n      if (this.length < num.length) return -1;\n      var res = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var a = this.words[i] | 0;\n        var b = num.words[i] | 0;\n        if (a === b) continue;\n\n        if (a < b) {\n          res = -1;\n        } else if (a > b) {\n          res = 1;\n        }\n\n        break;\n      }\n\n      return res;\n    };\n\n    BN.prototype.gtn = function gtn(num) {\n      return this.cmpn(num) === 1;\n    };\n\n    BN.prototype.gt = function gt(num) {\n      return this.cmp(num) === 1;\n    };\n\n    BN.prototype.gten = function gten(num) {\n      return this.cmpn(num) >= 0;\n    };\n\n    BN.prototype.gte = function gte(num) {\n      return this.cmp(num) >= 0;\n    };\n\n    BN.prototype.ltn = function ltn(num) {\n      return this.cmpn(num) === -1;\n    };\n\n    BN.prototype.lt = function lt(num) {\n      return this.cmp(num) === -1;\n    };\n\n    BN.prototype.lten = function lten(num) {\n      return this.cmpn(num) <= 0;\n    };\n\n    BN.prototype.lte = function lte(num) {\n      return this.cmp(num) <= 0;\n    };\n\n    BN.prototype.eqn = function eqn(num) {\n      return this.cmpn(num) === 0;\n    };\n\n    BN.prototype.eq = function eq(num) {\n      return this.cmp(num) === 0;\n    };\n\n    BN.red = function red(num) {\n      return new Red(num);\n    };\n\n    BN.prototype.toRed = function toRed(ctx) {\n      assert(!this.red, \"Already a number in reduction context\");\n      assert(this.negative === 0, \"red works only with positives\");\n      return ctx.convertTo(this)._forceRed(ctx);\n    };\n\n    BN.prototype.fromRed = function fromRed() {\n      assert(this.red, \"fromRed works only with numbers in reduction context\");\n      return this.red.convertFrom(this);\n    };\n\n    BN.prototype._forceRed = function _forceRed(ctx) {\n      this.red = ctx;\n      return this;\n    };\n\n    BN.prototype.forceRed = function forceRed(ctx) {\n      assert(!this.red, \"Already a number in reduction context\");\n      return this._forceRed(ctx);\n    };\n\n    BN.prototype.redAdd = function redAdd(num) {\n      assert(this.red, \"redAdd works only with red numbers\");\n      return this.red.add(this, num);\n    };\n\n    BN.prototype.redIAdd = function redIAdd(num) {\n      assert(this.red, \"redIAdd works only with red numbers\");\n      return this.red.iadd(this, num);\n    };\n\n    BN.prototype.redSub = function redSub(num) {\n      assert(this.red, \"redSub works only with red numbers\");\n      return this.red.sub(this, num);\n    };\n\n    BN.prototype.redISub = function redISub(num) {\n      assert(this.red, \"redISub works only with red numbers\");\n      return this.red.isub(this, num);\n    };\n\n    BN.prototype.redShl = function redShl(num) {\n      assert(this.red, \"redShl works only with red numbers\");\n      return this.red.shl(this, num);\n    };\n\n    BN.prototype.redMul = function redMul(num) {\n      assert(this.red, \"redMul works only with red numbers\");\n\n      this.red._verify2(this, num);\n\n      return this.red.mul(this, num);\n    };\n\n    BN.prototype.redIMul = function redIMul(num) {\n      assert(this.red, \"redMul works only with red numbers\");\n\n      this.red._verify2(this, num);\n\n      return this.red.imul(this, num);\n    };\n\n    BN.prototype.redSqr = function redSqr() {\n      assert(this.red, \"redSqr works only with red numbers\");\n\n      this.red._verify1(this);\n\n      return this.red.sqr(this);\n    };\n\n    BN.prototype.redISqr = function redISqr() {\n      assert(this.red, \"redISqr works only with red numbers\");\n\n      this.red._verify1(this);\n\n      return this.red.isqr(this);\n    };\n\n    BN.prototype.redSqrt = function redSqrt() {\n      assert(this.red, \"redSqrt works only with red numbers\");\n\n      this.red._verify1(this);\n\n      return this.red.sqrt(this);\n    };\n\n    BN.prototype.redInvm = function redInvm() {\n      assert(this.red, \"redInvm works only with red numbers\");\n\n      this.red._verify1(this);\n\n      return this.red.invm(this);\n    };\n\n    BN.prototype.redNeg = function redNeg() {\n      assert(this.red, \"redNeg works only with red numbers\");\n\n      this.red._verify1(this);\n\n      return this.red.neg(this);\n    };\n\n    BN.prototype.redPow = function redPow(num) {\n      assert(this.red && !num.red, \"redPow(normalNum)\");\n\n      this.red._verify1(this);\n\n      return this.red.pow(this, num);\n    };\n\n    var primes = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    };\n\n    function MPrime(name, p) {\n      this.name = name;\n      this.p = new BN(p, 16);\n      this.n = this.p.bitLength();\n      this.k = new BN(1).iushln(this.n).isub(this.p);\n      this.tmp = this._tmp();\n    }\n\n    MPrime.prototype._tmp = function _tmp() {\n      var tmp = new BN(null);\n      tmp.words = new Array(Math.ceil(this.n / 13));\n      return tmp;\n    };\n\n    MPrime.prototype.ireduce = function ireduce(num) {\n      var r = num;\n      var rlen;\n\n      do {\n        this.split(r, this.tmp);\n        r = this.imulK(r);\n        r = r.iadd(this.tmp);\n        rlen = r.bitLength();\n      } while (rlen > this.n);\n\n      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n      if (cmp === 0) {\n        r.words[0] = 0;\n        r.length = 1;\n      } else if (cmp > 0) {\n        r.isub(this.p);\n      } else {\n        if (r.strip !== undefined) {\n          r.strip();\n        } else {\n          r._strip();\n        }\n      }\n\n      return r;\n    };\n\n    MPrime.prototype.split = function split(input, out) {\n      input.iushrn(this.n, 0, out);\n    };\n\n    MPrime.prototype.imulK = function imulK(num) {\n      return num.imul(this.k);\n    };\n\n    function K256() {\n      MPrime.call(this, \"k256\", \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\");\n    }\n\n    inherits(K256, MPrime);\n\n    K256.prototype.split = function split(input, output) {\n      var mask = 4194303;\n      var outLen = Math.min(input.length, 9);\n\n      for (var i = 0; i < outLen; i++) {\n        output.words[i] = input.words[i];\n      }\n\n      output.length = outLen;\n\n      if (input.length <= 9) {\n        input.words[0] = 0;\n        input.length = 1;\n        return;\n      }\n\n      var prev = input.words[9];\n      output.words[output.length++] = prev & mask;\n\n      for (i = 10; i < input.length; i++) {\n        var next = input.words[i] | 0;\n        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n        prev = next;\n      }\n\n      prev >>>= 22;\n      input.words[i - 10] = prev;\n\n      if (prev === 0 && input.length > 10) {\n        input.length -= 10;\n      } else {\n        input.length -= 9;\n      }\n    };\n\n    K256.prototype.imulK = function imulK(num) {\n      num.words[num.length] = 0;\n      num.words[num.length + 1] = 0;\n      num.length += 2;\n      var lo = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i] | 0;\n        lo += w * 977;\n        num.words[i] = lo & 67108863;\n        lo = w * 64 + (lo / 67108864 | 0);\n      }\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n\n        if (num.words[num.length - 1] === 0) {\n          num.length--;\n        }\n      }\n\n      return num;\n    };\n\n    function P224() {\n      MPrime.call(this, \"p224\", \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\");\n    }\n\n    inherits(P224, MPrime);\n\n    function P192() {\n      MPrime.call(this, \"p192\", \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\");\n    }\n\n    inherits(P192, MPrime);\n\n    function P25519() {\n      MPrime.call(this, \"25519\", \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\");\n    }\n\n    inherits(P25519, MPrime);\n\n    P25519.prototype.imulK = function imulK(num) {\n      var carry = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var hi = (num.words[i] | 0) * 19 + carry;\n        var lo = hi & 67108863;\n        hi >>>= 26;\n        num.words[i] = lo;\n        carry = hi;\n      }\n\n      if (carry !== 0) {\n        num.words[num.length++] = carry;\n      }\n\n      return num;\n    };\n\n    BN._prime = function prime(name) {\n      if (primes[name]) return primes[name];\n      var prime;\n\n      if (name === \"k256\") {\n        prime = new K256();\n      } else if (name === \"p224\") {\n        prime = new P224();\n      } else if (name === \"p192\") {\n        prime = new P192();\n      } else if (name === \"p25519\") {\n        prime = new P25519();\n      } else {\n        throw new Error(\"Unknown prime \" + name);\n      }\n\n      primes[name] = prime;\n      return prime;\n    };\n\n    function Red(m) {\n      if (typeof m === \"string\") {\n        var prime = BN._prime(m);\n\n        this.m = prime.p;\n        this.prime = prime;\n      } else {\n        assert(m.gtn(1), \"modulus must be greater than 1\");\n        this.m = m;\n        this.prime = null;\n      }\n    }\n\n    Red.prototype._verify1 = function _verify1(a) {\n      assert(a.negative === 0, \"red works only with positives\");\n      assert(a.red, \"red works only with red numbers\");\n    };\n\n    Red.prototype._verify2 = function _verify2(a, b) {\n      assert((a.negative | b.negative) === 0, \"red works only with positives\");\n      assert(a.red && a.red === b.red, \"red works only with red numbers\");\n    };\n\n    Red.prototype.imod = function imod(a) {\n      if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n      return a.umod(this.m)._forceRed(this);\n    };\n\n    Red.prototype.neg = function neg(a) {\n      if (a.isZero()) {\n        return a.clone();\n      }\n\n      return this.m.sub(a)._forceRed(this);\n    };\n\n    Red.prototype.add = function add(a, b) {\n      this._verify2(a, b);\n\n      var res = a.add(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.iadd = function iadd(a, b) {\n      this._verify2(a, b);\n\n      var res = a.iadd(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.sub = function sub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.sub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.isub = function isub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.isub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.shl = function shl(a, num) {\n      this._verify1(a);\n\n      return this.imod(a.ushln(num));\n    };\n\n    Red.prototype.imul = function imul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.imul(b));\n    };\n\n    Red.prototype.mul = function mul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.mul(b));\n    };\n\n    Red.prototype.isqr = function isqr(a) {\n      return this.imul(a, a.clone());\n    };\n\n    Red.prototype.sqr = function sqr(a) {\n      return this.mul(a, a);\n    };\n\n    Red.prototype.sqrt = function sqrt(a) {\n      if (a.isZero()) return a.clone();\n      var mod3 = this.m.andln(3);\n      assert(mod3 % 2 === 1);\n\n      if (mod3 === 3) {\n        var pow = this.m.add(new BN(1)).iushrn(2);\n        return this.pow(a, pow);\n      }\n\n      var q = this.m.subn(1);\n      var s = 0;\n\n      while (!q.isZero() && q.andln(1) === 0) {\n        s++;\n        q.iushrn(1);\n      }\n\n      assert(!q.isZero());\n      var one = new BN(1).toRed(this);\n      var nOne = one.redNeg();\n      var lpow = this.m.subn(1).iushrn(1);\n      var z = this.m.bitLength();\n      z = new BN(2 * z * z).toRed(this);\n\n      while (this.pow(z, lpow).cmp(nOne) !== 0) {\n        z.redIAdd(nOne);\n      }\n\n      var c = this.pow(z, q);\n      var r = this.pow(a, q.addn(1).iushrn(1));\n      var t = this.pow(a, q);\n      var m = s;\n\n      while (t.cmp(one) !== 0) {\n        var tmp = t;\n\n        for (var i = 0; tmp.cmp(one) !== 0; i++) {\n          tmp = tmp.redSqr();\n        }\n\n        assert(i < m);\n        var b = this.pow(c, new BN(1).iushln(m - i - 1));\n        r = r.redMul(b);\n        c = b.redSqr();\n        t = t.redMul(c);\n        m = i;\n      }\n\n      return r;\n    };\n\n    Red.prototype.invm = function invm(a) {\n      var inv = a._invmp(this.m);\n\n      if (inv.negative !== 0) {\n        inv.negative = 0;\n        return this.imod(inv).redNeg();\n      } else {\n        return this.imod(inv);\n      }\n    };\n\n    Red.prototype.pow = function pow(a, num) {\n      if (num.isZero()) return new BN(1).toRed(this);\n      if (num.cmpn(1) === 0) return a.clone();\n      var windowSize = 4;\n      var wnd = new Array(1 << windowSize);\n      wnd[0] = new BN(1).toRed(this);\n      wnd[1] = a;\n\n      for (var i = 2; i < wnd.length; i++) {\n        wnd[i] = this.mul(wnd[i - 1], a);\n      }\n\n      var res = wnd[0];\n      var current = 0;\n      var currentLen = 0;\n      var start = num.bitLength() % 26;\n\n      if (start === 0) {\n        start = 26;\n      }\n\n      for (i = num.length - 1; i >= 0; i--) {\n        var word = num.words[i];\n\n        for (var j = start - 1; j >= 0; j--) {\n          var bit = word >> j & 1;\n\n          if (res !== wnd[0]) {\n            res = this.sqr(res);\n          }\n\n          if (bit === 0 && current === 0) {\n            currentLen = 0;\n            continue;\n          }\n\n          current <<= 1;\n          current |= bit;\n          currentLen++;\n          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n          res = this.mul(res, wnd[current]);\n          currentLen = 0;\n          current = 0;\n        }\n\n        start = 26;\n      }\n\n      return res;\n    };\n\n    Red.prototype.convertTo = function convertTo(num) {\n      var r = num.umod(this.m);\n      return r === num ? r.clone() : r;\n    };\n\n    Red.prototype.convertFrom = function convertFrom(num) {\n      var res = num.clone();\n      res.red = null;\n      return res;\n    };\n\n    BN.mont = function mont(num) {\n      return new Mont(num);\n    };\n\n    function Mont(m) {\n      Red.call(this, m);\n      this.shift = this.m.bitLength();\n\n      if (this.shift % 26 !== 0) {\n        this.shift += 26 - this.shift % 26;\n      }\n\n      this.r = new BN(1).iushln(this.shift);\n      this.r2 = this.imod(this.r.sqr());\n      this.rinv = this.r._invmp(this.m);\n      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n      this.minv = this.minv.umod(this.r);\n      this.minv = this.r.sub(this.minv);\n    }\n\n    inherits(Mont, Red);\n\n    Mont.prototype.convertTo = function convertTo(num) {\n      return this.imod(num.ushln(this.shift));\n    };\n\n    Mont.prototype.convertFrom = function convertFrom(num) {\n      var r = this.imod(num.mul(this.rinv));\n      r.red = null;\n      return r;\n    };\n\n    Mont.prototype.imul = function imul(a, b) {\n      if (a.isZero() || b.isZero()) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      var t = a.imul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.mul = function mul(a, b) {\n      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n      var t = a.mul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.invm = function invm(a) {\n      var res = this.imod(a._invmp(this.m).mul(this.r2));\n      return res._forceRed(this);\n    };\n  })(\"object\" === \"undefined\" || module, commonjsGlobal);\n});\nconst version = \"logger/5.1.0\";\n\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  default: 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    const missing = [];\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(233).normalize(\"NFD\") !== String.fromCharCode(101, 769)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n\nclass Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n\n    console.log.apply(console, args);\n  }\n\n  debug(...args) {\n    this._log(Logger.levels.DEBUG, args);\n  }\n\n  info(...args) {\n    this._log(Logger.levels.INFO, args);\n  }\n\n  warn(...args) {\n    this._log(Logger.levels.WARNING, args);\n  }\n\n  makeError(message, code, params) {\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      try {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    }\n\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message) {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 9007199254740991) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n\n    _logLevel = level;\n  }\n\n  static from(version) {\n    return new Logger(version);\n  }\n\n}\n\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\nconst version$1 = \"bytes/5.1.0\";\n\"use strict\";\n\nconst logger = new Logger(version$1);\n\nfunction isHexable(value) {\n  return !!value.toHexString;\n}\n\nfunction addSlice(array) {\n  if (array.slice) {\n    return array;\n  }\n\n  array.slice = function () {\n    const args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n  };\n\n  return array;\n}\n\nfunction isBytesLike(value) {\n  return isHexString(value) && !(value.length % 2) || isBytes(value);\n}\n\nfunction isBytes(value) {\n  if (value == null) {\n    return false;\n  }\n\n  if (value.constructor === Uint8Array) {\n    return true;\n  }\n\n  if (typeof value === \"string\") {\n    return false;\n  }\n\n  if (value.length == null) {\n    return false;\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i];\n\n    if (typeof v !== \"number\" || v < 0 || v >= 256 || v % 1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction arrayify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid arrayify value\");\n    const result = [];\n\n    while (value) {\n      result.unshift(value & 255);\n      value = parseInt(String(value / 256));\n    }\n\n    if (result.length === 0) {\n      result.push(0);\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    let hex = value.substring(2);\n\n    if (hex.length % 2) {\n      if (options.hexPad === \"left\") {\n        hex = \"0x0\" + hex.substring(2);\n      } else if (options.hexPad === \"right\") {\n        hex += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    const result = [];\n\n    for (let i = 0; i < hex.length; i += 2) {\n      result.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (isBytes(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nfunction concat(items) {\n  const objects = items.map(item => arrayify(item));\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result = new Uint8Array(length);\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n  return addSlice(result);\n}\n\nfunction stripZeros(value) {\n  let result = arrayify(value);\n\n  if (result.length === 0) {\n    return result;\n  }\n\n  let start = 0;\n\n  while (start < result.length && result[start] === 0) {\n    start++;\n  }\n\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\n\nfunction zeroPad(value, length) {\n  value = arrayify(value);\n\n  if (value.length > length) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n  }\n\n  const result = new Uint8Array(length);\n  result.set(value, length - value.length);\n  return addSlice(result);\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nconst HexCharacters = \"0123456789abcdef\";\n\nfunction hexlify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid hexlify value\");\n    let hex = \"\";\n\n    while (value) {\n      hex = HexCharacters[value & 15] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = \"0\" + hex;\n      }\n\n      return \"0x\" + hex;\n    }\n\n    return \"0x00\";\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    if (value.length % 2) {\n      if (options.hexPad === \"left\") {\n        value = \"0x0\" + value.substring(2);\n      } else if (options.hexPad === \"right\") {\n        value += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    return value.toLowerCase();\n  }\n\n  if (isBytes(value)) {\n    let result = \"0x\";\n\n    for (let i = 0; i < value.length; i++) {\n      let v = value[i];\n      result += HexCharacters[(v & 240) >> 4] + HexCharacters[v & 15];\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\nfunction hexDataLength(data) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    return null;\n  }\n\n  return (data.length - 2) / 2;\n}\n\nfunction hexDataSlice(data, offset, endOffset) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n  }\n\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return \"0x\" + data.substring(offset);\n}\n\nfunction hexConcat(items) {\n  let result = \"0x\";\n  items.forEach(item => {\n    result += hexlify(item).substring(2);\n  });\n  return result;\n}\n\nfunction hexValue(value) {\n  const trimmed = hexStripZeros(hexlify(value, {\n    hexPad: \"left\"\n  }));\n\n  if (trimmed === \"0x\") {\n    return \"0x0\";\n  }\n\n  return trimmed;\n}\n\nfunction hexStripZeros(value) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  }\n\n  if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  value = value.substring(2);\n  let offset = 0;\n\n  while (offset < value.length && value[offset] === \"0\") {\n    offset++;\n  }\n\n  return \"0x\" + value.substring(offset);\n}\n\nfunction hexZeroPad(value, length) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  } else if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  if (value.length > 2 * length + 2) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = \"0x0\" + value.substring(2);\n  }\n\n  return value;\n}\n\nfunction splitSignature(signature) {\n  const result = {\n    r: \"0x\",\n    s: \"0x\",\n    _vs: \"0x\",\n    recoveryParam: 0,\n    v: 0\n  };\n\n  if (isBytesLike(signature)) {\n    const bytes = arrayify(signature);\n\n    if (bytes.length !== 65) {\n      logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n    }\n\n    result.r = hexlify(bytes.slice(0, 32));\n    result.s = hexlify(bytes.slice(32, 64));\n    result.v = bytes[64];\n\n    if (result.v < 27) {\n      if (result.v === 0 || result.v === 1) {\n        result.v += 27;\n      } else {\n        logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n      }\n    }\n\n    result.recoveryParam = 1 - result.v % 2;\n\n    if (result.recoveryParam) {\n      bytes[32] |= 128;\n    }\n\n    result._vs = hexlify(bytes.slice(32, 64));\n  } else {\n    result.r = signature.r;\n    result.s = signature.s;\n    result.v = signature.v;\n    result.recoveryParam = signature.recoveryParam;\n    result._vs = signature._vs;\n\n    if (result._vs != null) {\n      const vs = zeroPad(arrayify(result._vs), 32);\n      result._vs = hexlify(vs);\n      const recoveryParam = vs[0] >= 128 ? 1 : 0;\n\n      if (result.recoveryParam == null) {\n        result.recoveryParam = recoveryParam;\n      } else if (result.recoveryParam !== recoveryParam) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n      }\n\n      vs[0] &= 127;\n      const s = hexlify(vs);\n\n      if (result.s == null) {\n        result.s = s;\n      } else if (result.s !== s) {\n        logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n      }\n    }\n\n    if (result.recoveryParam == null) {\n      if (result.v == null) {\n        logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n      } else if (result.v === 0 || result.v === 1) {\n        result.recoveryParam = result.v;\n      } else {\n        result.recoveryParam = 1 - result.v % 2;\n      }\n    } else {\n      if (result.v == null) {\n        result.v = 27 + result.recoveryParam;\n      } else if (result.recoveryParam !== 1 - result.v % 2) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n      }\n    }\n\n    if (result.r == null || !isHexString(result.r)) {\n      logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n    } else {\n      result.r = hexZeroPad(result.r, 32);\n    }\n\n    if (result.s == null || !isHexString(result.s)) {\n      logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n    } else {\n      result.s = hexZeroPad(result.s, 32);\n    }\n\n    const vs = arrayify(result.s);\n\n    if (vs[0] >= 128) {\n      logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n    }\n\n    if (result.recoveryParam) {\n      vs[0] |= 128;\n    }\n\n    const _vs = hexlify(vs);\n\n    if (result._vs) {\n      if (!isHexString(result._vs)) {\n        logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n      }\n\n      result._vs = hexZeroPad(result._vs, 32);\n    }\n\n    if (result._vs == null) {\n      result._vs = _vs;\n    } else if (result._vs !== _vs) {\n      logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n    }\n  }\n\n  return result;\n}\n\nfunction joinSignature(signature) {\n  signature = splitSignature(signature);\n  return hexlify(concat([signature.r, signature.s, signature.recoveryParam ? \"0x1c\" : \"0x1b\"]));\n}\n\nconst version$2 = \"bignumber/5.1.1\";\n\"use strict\";\n\nvar BN = bn.BN;\nconst logger$1 = new Logger(version$2);\nconst _constructorGuard = {};\nconst MAX_SAFE = 9007199254740991;\n\nfunction isBigNumberish(value) {\n  return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === \"bigint\" || isBytes(value));\n}\n\nlet _warnedToStringRadix = false;\n\nclass BigNumber {\n  constructor(constructorGuard, hex) {\n    logger$1.checkNew(new.target, BigNumber);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger$1.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new (BigNumber)\"\n      });\n    }\n\n    this._hex = hex;\n    this._isBigNumber = true;\n    Object.freeze(this);\n  }\n\n  fromTwos(value) {\n    return toBigNumber(toBN(this).fromTwos(value));\n  }\n\n  toTwos(value) {\n    return toBigNumber(toBN(this).toTwos(value));\n  }\n\n  abs() {\n    if (this._hex[0] === \"-\") {\n      return BigNumber.from(this._hex.substring(1));\n    }\n\n    return this;\n  }\n\n  add(other) {\n    return toBigNumber(toBN(this).add(toBN(other)));\n  }\n\n  sub(other) {\n    return toBigNumber(toBN(this).sub(toBN(other)));\n  }\n\n  div(other) {\n    const o = BigNumber.from(other);\n\n    if (o.isZero()) {\n      throwFault(\"division by zero\", \"div\");\n    }\n\n    return toBigNumber(toBN(this).div(toBN(other)));\n  }\n\n  mul(other) {\n    return toBigNumber(toBN(this).mul(toBN(other)));\n  }\n\n  mod(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot modulo negative values\", \"mod\");\n    }\n\n    return toBigNumber(toBN(this).umod(value));\n  }\n\n  pow(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot raise to negative values\", \"pow\");\n    }\n\n    return toBigNumber(toBN(this).pow(value));\n  }\n\n  and(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'and' negative values\", \"and\");\n    }\n\n    return toBigNumber(toBN(this).and(value));\n  }\n\n  or(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'or' negative values\", \"or\");\n    }\n\n    return toBigNumber(toBN(this).or(value));\n  }\n\n  xor(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'xor' negative values\", \"xor\");\n    }\n\n    return toBigNumber(toBN(this).xor(value));\n  }\n\n  mask(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot mask negative values\", \"mask\");\n    }\n\n    return toBigNumber(toBN(this).maskn(value));\n  }\n\n  shl(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shl\");\n    }\n\n    return toBigNumber(toBN(this).shln(value));\n  }\n\n  shr(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shr\");\n    }\n\n    return toBigNumber(toBN(this).shrn(value));\n  }\n\n  eq(other) {\n    return toBN(this).eq(toBN(other));\n  }\n\n  lt(other) {\n    return toBN(this).lt(toBN(other));\n  }\n\n  lte(other) {\n    return toBN(this).lte(toBN(other));\n  }\n\n  gt(other) {\n    return toBN(this).gt(toBN(other));\n  }\n\n  gte(other) {\n    return toBN(this).gte(toBN(other));\n  }\n\n  isNegative() {\n    return this._hex[0] === \"-\";\n  }\n\n  isZero() {\n    return toBN(this).isZero();\n  }\n\n  toNumber() {\n    try {\n      return toBN(this).toNumber();\n    } catch (error) {\n      throwFault(\"overflow\", \"toNumber\", this.toString());\n    }\n\n    return null;\n  }\n\n  toBigInt() {\n    try {\n      return BigInt(this.toString());\n    } catch (e) {}\n\n    return logger$1.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n      value: this.toString()\n    });\n  }\n\n  toString() {\n    if (arguments.length > 0) {\n      if (arguments[0] === 10) {\n        if (!_warnedToStringRadix) {\n          _warnedToStringRadix = true;\n          logger$1.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n        }\n      } else if (arguments[0] === 16) {\n        logger$1.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n      } else {\n        logger$1.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n      }\n    }\n\n    return toBN(this).toString(10);\n  }\n\n  toHexString() {\n    return this._hex;\n  }\n\n  toJSON(key) {\n    return {\n      type: \"BigNumber\",\n      hex: this.toHexString()\n    };\n  }\n\n  static from(value) {\n    if (value instanceof BigNumber) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      if (value.match(/^-?0x[0-9a-f]+$/i)) {\n        return new BigNumber(_constructorGuard, toHex(value));\n      }\n\n      if (value.match(/^-?[0-9]+$/)) {\n        return new BigNumber(_constructorGuard, toHex(new BN(value)));\n      }\n\n      return logger$1.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n    }\n\n    if (typeof value === \"number\") {\n      if (value % 1) {\n        throwFault(\"underflow\", \"BigNumber.from\", value);\n      }\n\n      if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n        throwFault(\"overflow\", \"BigNumber.from\", value);\n      }\n\n      return BigNumber.from(String(value));\n    }\n\n    const anyValue = value;\n\n    if (typeof anyValue === \"bigint\") {\n      return BigNumber.from(anyValue.toString());\n    }\n\n    if (isBytes(anyValue)) {\n      return BigNumber.from(hexlify(anyValue));\n    }\n\n    if (anyValue) {\n      if (anyValue.toHexString) {\n        const hex = anyValue.toHexString();\n\n        if (typeof hex === \"string\") {\n          return BigNumber.from(hex);\n        }\n      } else {\n        let hex = anyValue._hex;\n\n        if (hex == null && anyValue.type === \"BigNumber\") {\n          hex = anyValue.hex;\n        }\n\n        if (typeof hex === \"string\") {\n          if (isHexString(hex) || hex[0] === \"-\" && isHexString(hex.substring(1))) {\n            return BigNumber.from(hex);\n          }\n        }\n      }\n    }\n\n    return logger$1.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n  }\n\n  static isBigNumber(value) {\n    return !!(value && value._isBigNumber);\n  }\n\n}\n\nfunction toHex(value) {\n  if (typeof value !== \"string\") {\n    return toHex(value.toString(16));\n  }\n\n  if (value[0] === \"-\") {\n    value = value.substring(1);\n\n    if (value[0] === \"-\") {\n      logger$1.throwArgumentError(\"invalid hex\", \"value\", value);\n    }\n\n    value = toHex(value);\n\n    if (value === \"0x00\") {\n      return value;\n    }\n\n    return \"-\" + value;\n  }\n\n  if (value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (value === \"0x\") {\n    return \"0x00\";\n  }\n\n  if (value.length % 2) {\n    value = \"0x0\" + value.substring(2);\n  }\n\n  while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n    value = \"0x\" + value.substring(4);\n  }\n\n  return value;\n}\n\nfunction toBigNumber(value) {\n  return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value) {\n  const hex = BigNumber.from(value).toHexString();\n\n  if (hex[0] === \"-\") {\n    return new BN(\"-\" + hex.substring(3), 16);\n  }\n\n  return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value != null) {\n    params.value = value;\n  }\n\n  return logger$1.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\nfunction _base36To16(value) {\n  return new BN(value, 36).toString(16);\n}\n\nfunction _base16To36(value) {\n  return new BN(value, 16).toString(36);\n}\n\n\"use strict\";\n\nconst logger$2 = new Logger(version$2);\nconst _constructorGuard$1 = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault$1(message, fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value !== undefined) {\n    params.value = value;\n  }\n\n  return logger$2.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\nlet zeros = \"0\";\n\nwhile (zeros.length < 256) {\n  zeros += zeros;\n}\n\nfunction getMultiplier(decimals) {\n  if (typeof decimals !== \"number\") {\n    try {\n      decimals = BigNumber.from(decimals).toNumber();\n    } catch (e) {}\n  }\n\n  if (typeof decimals === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n    return \"1\" + zeros.substring(0, decimals);\n  }\n\n  return logger$2.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nfunction formatFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  const multiplier = getMultiplier(decimals);\n  value = BigNumber.from(value);\n  const negative = value.lt(Zero);\n\n  if (negative) {\n    value = value.mul(NegativeOne);\n  }\n\n  let fraction = value.mod(multiplier).toString();\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction = \"0\" + fraction;\n  }\n\n  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  const whole = value.div(multiplier).toString();\n  value = whole + \".\" + fraction;\n\n  if (negative) {\n    value = \"-\" + value;\n  }\n\n  return value;\n}\n\nfunction parseFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  const multiplier = getMultiplier(decimals);\n\n  if (typeof value !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n    logger$2.throwArgumentError(\"invalid decimal value\", \"value\", value);\n  }\n\n  if (multiplier.length - 1 === 0) {\n    return BigNumber.from(value);\n  }\n\n  const negative = value.substring(0, 1) === \"-\";\n\n  if (negative) {\n    value = value.substring(1);\n  }\n\n  if (value === \".\") {\n    logger$2.throwArgumentError(\"missing value\", \"value\", value);\n  }\n\n  const comps = value.split(\".\");\n\n  if (comps.length > 2) {\n    logger$2.throwArgumentError(\"too many decimal points\", \"value\", value);\n  }\n\n  let whole = comps[0],\n      fraction = comps[1];\n\n  if (!whole) {\n    whole = \"0\";\n  }\n\n  if (!fraction) {\n    fraction = \"0\";\n  }\n\n  if (fraction.length > multiplier.length - 1) {\n    throwFault$1(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n  }\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction += \"0\";\n  }\n\n  const wholeValue = BigNumber.from(whole);\n  const fractionValue = BigNumber.from(fraction);\n  let wei = wholeValue.mul(multiplier).add(fractionValue);\n\n  if (negative) {\n    wei = wei.mul(NegativeOne);\n  }\n\n  return wei;\n}\n\nclass FixedFormat {\n  constructor(constructorGuard, signed, width, decimals) {\n    if (constructorGuard !== _constructorGuard$1) {\n      logger$2.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new FixedFormat\"\n      });\n    }\n\n    this.signed = signed;\n    this.width = width;\n    this.decimals = decimals;\n    this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n    this._multiplier = getMultiplier(decimals);\n    Object.freeze(this);\n  }\n\n  static from(value) {\n    if (value instanceof FixedFormat) {\n      return value;\n    }\n\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n\n    if (typeof value === \"string\") {\n      if (value === \"fixed\") {} else if (value === \"ufixed\") {\n        signed = false;\n      } else if (value != null) {\n        const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n\n        if (!match) {\n          logger$2.throwArgumentError(\"invalid fixed format\", \"format\", value);\n        }\n\n        signed = match[1] !== \"u\";\n        width = parseInt(match[2]);\n        decimals = parseInt(match[3]);\n      }\n    } else if (value) {\n      const check = (key, type, defaultValue) => {\n        if (value[key] == null) {\n          return defaultValue;\n        }\n\n        if (typeof value[key] !== type) {\n          logger$2.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n        }\n\n        return value[key];\n      };\n\n      signed = check(\"signed\", \"boolean\", signed);\n      width = check(\"width\", \"number\", width);\n      decimals = check(\"decimals\", \"number\", decimals);\n    }\n\n    if (width % 8) {\n      logger$2.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n    }\n\n    if (decimals > 80) {\n      logger$2.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n    }\n\n    return new FixedFormat(_constructorGuard$1, signed, width, decimals);\n  }\n\n}\n\nclass FixedNumber {\n  constructor(constructorGuard, hex, value, format) {\n    logger$2.checkNew(new.target, FixedNumber);\n\n    if (constructorGuard !== _constructorGuard$1) {\n      logger$2.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new FixedFormat\"\n      });\n    }\n\n    this.format = format;\n    this._hex = hex;\n    this._value = value;\n    this._isFixedNumber = true;\n    Object.freeze(this);\n  }\n\n  _checkFormat(other) {\n    if (this.format.name !== other.format.name) {\n      logger$2.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n    }\n  }\n\n  addUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n  }\n\n  subUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n  }\n\n  mulUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n  }\n\n  divUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n  }\n\n  floor() {\n    let comps = this.toString().split(\".\");\n    let result = FixedNumber.from(comps[0], this.format);\n    const hasFraction = !comps[1].match(/^(0*)$/);\n\n    if (this.isNegative() && hasFraction) {\n      result = result.subUnsafe(ONE);\n    }\n\n    return result;\n  }\n\n  ceiling() {\n    let comps = this.toString().split(\".\");\n    let result = FixedNumber.from(comps[0], this.format);\n    const hasFraction = !comps[1].match(/^(0*)$/);\n\n    if (!this.isNegative() && hasFraction) {\n      result = result.addUnsafe(ONE);\n    }\n\n    return result;\n  }\n\n  round(decimals) {\n    if (decimals == null) {\n      decimals = 0;\n    }\n\n    let comps = this.toString().split(\".\");\n\n    if (decimals < 0 || decimals > 80 || decimals % 1) {\n      logger$2.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n    }\n\n    if (comps[1].length <= decimals) {\n      return this;\n    }\n\n    const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals));\n    return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor);\n  }\n\n  isZero() {\n    return this._value === \"0.0\";\n  }\n\n  isNegative() {\n    return this._value[0] === \"-\";\n  }\n\n  toString() {\n    return this._value;\n  }\n\n  toHexString(width) {\n    if (width == null) {\n      return this._hex;\n    }\n\n    if (width % 8) {\n      logger$2.throwArgumentError(\"invalid byte width\", \"width\", width);\n    }\n\n    const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n    return hexZeroPad(hex, width / 8);\n  }\n\n  toUnsafeFloat() {\n    return parseFloat(this.toString());\n  }\n\n  toFormat(format) {\n    return FixedNumber.fromString(this._value, format);\n  }\n\n  static fromValue(value, decimals, format) {\n    if (format == null && decimals != null && !isBigNumberish(decimals)) {\n      format = decimals;\n      decimals = null;\n    }\n\n    if (decimals == null) {\n      decimals = 0;\n    }\n\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n  }\n\n  static fromString(value, format) {\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    const fixedFormat = FixedFormat.from(format);\n    const numeric = parseFixed(value, fixedFormat.decimals);\n\n    if (!fixedFormat.signed && numeric.lt(Zero)) {\n      throwFault$1(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n    }\n\n    let hex = null;\n\n    if (fixedFormat.signed) {\n      hex = numeric.toTwos(fixedFormat.width).toHexString();\n    } else {\n      hex = numeric.toHexString();\n      hex = hexZeroPad(hex, fixedFormat.width / 8);\n    }\n\n    const decimal = formatFixed(numeric, fixedFormat.decimals);\n    return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);\n  }\n\n  static fromBytes(value, format) {\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    const fixedFormat = FixedFormat.from(format);\n\n    if (arrayify(value).length > fixedFormat.width / 8) {\n      throw new Error(\"overflow\");\n    }\n\n    let numeric = BigNumber.from(value);\n\n    if (fixedFormat.signed) {\n      numeric = numeric.fromTwos(fixedFormat.width);\n    }\n\n    const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n    const decimal = formatFixed(numeric, fixedFormat.decimals);\n    return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);\n  }\n\n  static from(value, format) {\n    if (typeof value === \"string\") {\n      return FixedNumber.fromString(value, format);\n    }\n\n    if (isBytes(value)) {\n      return FixedNumber.fromBytes(value, format);\n    }\n\n    try {\n      return FixedNumber.fromValue(value, 0, format);\n    } catch (error) {\n      if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n        throw error;\n      }\n    }\n\n    return logger$2.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n  }\n\n  static isFixedNumber(value) {\n    return !!(value && value._isFixedNumber);\n  }\n\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\nconst version$3 = \"properties/5.1.0\";\n\"use strict\";\n\nvar __awaiter = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$3 = new Logger(version$3);\n\nfunction defineReadOnly(object, name, value) {\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n}\n\nfunction getStatic(ctor, key) {\n  for (let i = 0; i < 32; i++) {\n    if (ctor[key]) {\n      return ctor[key];\n    }\n\n    if (!ctor.prototype || typeof ctor.prototype !== \"object\") {\n      break;\n    }\n\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n\n  return null;\n}\n\nfunction resolveProperties(object) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const promises = Object.keys(object).map(key => {\n      const value = object[key];\n      return Promise.resolve(value).then(v => ({\n        key: key,\n        value: v\n      }));\n    });\n    const results = yield Promise.all(promises);\n    return results.reduce((accum, result) => {\n      accum[result.key] = result.value;\n      return accum;\n    }, {});\n  });\n}\n\nfunction checkProperties(object, properties) {\n  if (!object || typeof object !== \"object\") {\n    logger$3.throwArgumentError(\"invalid object\", \"object\", object);\n  }\n\n  Object.keys(object).forEach(key => {\n    if (!properties[key]) {\n      logger$3.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n    }\n  });\n}\n\nfunction shallowCopy(object) {\n  const result = {};\n\n  for (const key in object) {\n    result[key] = object[key];\n  }\n\n  return result;\n}\n\nconst opaque = {\n  bigint: true,\n  boolean: true,\n  function: true,\n  number: true,\n  string: true\n};\n\nfunction _isFrozen(object) {\n  if (object === undefined || object === null || opaque[typeof object]) {\n    return true;\n  }\n\n  if (Array.isArray(object) || typeof object === \"object\") {\n    if (!Object.isFrozen(object)) {\n      return false;\n    }\n\n    const keys = Object.keys(object);\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!_isFrozen(object[keys[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return logger$3.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n}\n\nfunction _deepCopy(object) {\n  if (_isFrozen(object)) {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    return Object.freeze(object.map(item => deepCopy(item)));\n  }\n\n  if (typeof object === \"object\") {\n    const result = {};\n\n    for (const key in object) {\n      const value = object[key];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      defineReadOnly(result, key, deepCopy(value));\n    }\n\n    return result;\n  }\n\n  return logger$3.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n}\n\nfunction deepCopy(object) {\n  return _deepCopy(object);\n}\n\nclass Description {\n  constructor(info) {\n    for (const key in info) {\n      this[key] = deepCopy(info[key]);\n    }\n  }\n\n}\n\nconst version$4 = \"abi/5.1.2\";\n\"use strict\";\n\nconst logger$4 = new Logger(version$4);\nconst _constructorGuard$2 = {};\nlet ModifiersBytes = {\n  calldata: true,\n  memory: true,\n  storage: true\n};\nlet ModifiersNest = {\n  calldata: true,\n  memory: true\n};\n\nfunction checkModifier(type, name) {\n  if (type === \"bytes\" || type === \"string\") {\n    if (ModifiersBytes[name]) {\n      return true;\n    }\n  } else if (type === \"address\") {\n    if (name === \"payable\") {\n      return true;\n    }\n  } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n    if (ModifiersNest[name]) {\n      return true;\n    }\n  }\n\n  if (ModifiersBytes[name] || name === \"payable\") {\n    logger$4.throwArgumentError(\"invalid modifier\", \"name\", name);\n  }\n\n  return false;\n}\n\nfunction parseParamType(param, allowIndexed) {\n  let originalParam = param;\n\n  function throwError(i) {\n    logger$4.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n  }\n\n  param = param.replace(/\\s/g, \" \");\n\n  function newNode(parent) {\n    let node = {\n      type: \"\",\n      name: \"\",\n      parent: parent,\n      state: {\n        allowType: true\n      }\n    };\n\n    if (allowIndexed) {\n      node.indexed = false;\n    }\n\n    return node;\n  }\n\n  let parent = {\n    type: \"\",\n    name: \"\",\n    state: {\n      allowType: true\n    }\n  };\n  let node = parent;\n\n  for (let i = 0; i < param.length; i++) {\n    let c = param[i];\n\n    switch (c) {\n      case \"(\":\n        if (node.state.allowType && node.type === \"\") {\n          node.type = \"tuple\";\n        } else if (!node.state.allowParams) {\n          throwError(i);\n        }\n\n        node.state.allowType = false;\n        node.type = verifyType(node.type);\n        node.components = [newNode(node)];\n        node = node.components[0];\n        break;\n\n      case \")\":\n        delete node.state;\n\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError(i);\n          }\n\n          node.indexed = true;\n          node.name = \"\";\n        }\n\n        if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n\n        node.type = verifyType(node.type);\n        let child = node;\n        node = node.parent;\n\n        if (!node) {\n          throwError(i);\n        }\n\n        delete child.parent;\n        node.state.allowParams = false;\n        node.state.allowName = true;\n        node.state.allowArray = true;\n        break;\n\n      case \",\":\n        delete node.state;\n\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError(i);\n          }\n\n          node.indexed = true;\n          node.name = \"\";\n        }\n\n        if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n\n        node.type = verifyType(node.type);\n        let sibling = newNode(node.parent);\n        node.parent.components.push(sibling);\n        delete node.parent;\n        node = sibling;\n        break;\n\n      case \" \":\n        if (node.state.allowType) {\n          if (node.type !== \"\") {\n            node.type = verifyType(node.type);\n            delete node.state.allowType;\n            node.state.allowName = true;\n            node.state.allowParams = true;\n          }\n        }\n\n        if (node.state.allowName) {\n          if (node.name !== \"\") {\n            if (node.name === \"indexed\") {\n              if (!allowIndexed) {\n                throwError(i);\n              }\n\n              if (node.indexed) {\n                throwError(i);\n              }\n\n              node.indexed = true;\n              node.name = \"\";\n            } else if (checkModifier(node.type, node.name)) {\n              node.name = \"\";\n            } else {\n              node.state.allowName = false;\n            }\n          }\n        }\n\n        break;\n\n      case \"[\":\n        if (!node.state.allowArray) {\n          throwError(i);\n        }\n\n        node.type += c;\n        node.state.allowArray = false;\n        node.state.allowName = false;\n        node.state.readArray = true;\n        break;\n\n      case \"]\":\n        if (!node.state.readArray) {\n          throwError(i);\n        }\n\n        node.type += c;\n        node.state.readArray = false;\n        node.state.allowArray = true;\n        node.state.allowName = true;\n        break;\n\n      default:\n        if (node.state.allowType) {\n          node.type += c;\n          node.state.allowParams = true;\n          node.state.allowArray = true;\n        } else if (node.state.allowName) {\n          node.name += c;\n          delete node.state.allowArray;\n        } else if (node.state.readArray) {\n          node.type += c;\n        } else {\n          throwError(i);\n        }\n\n    }\n  }\n\n  if (node.parent) {\n    logger$4.throwArgumentError(\"unexpected eof\", \"param\", param);\n  }\n\n  delete parent.state;\n\n  if (node.name === \"indexed\") {\n    if (!allowIndexed) {\n      throwError(originalParam.length - 7);\n    }\n\n    if (node.indexed) {\n      throwError(originalParam.length - 7);\n    }\n\n    node.indexed = true;\n    node.name = \"\";\n  } else if (checkModifier(node.type, node.name)) {\n    node.name = \"\";\n  }\n\n  parent.type = verifyType(parent.type);\n  return parent;\n}\n\nfunction populate(object, params) {\n  for (let key in params) {\n    defineReadOnly(object, key, params[key]);\n  }\n}\n\nconst FormatTypes = Object.freeze({\n  sighash: \"sighash\",\n  minimal: \"minimal\",\n  full: \"full\",\n  json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nclass ParamType {\n  constructor(constructorGuard, params) {\n    if (constructorGuard !== _constructorGuard$2) {\n      logger$4.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new ParamType()\"\n      });\n    }\n\n    populate(this, params);\n    let match = this.type.match(paramTypeArray);\n\n    if (match) {\n      populate(this, {\n        arrayLength: parseInt(match[2] || \"-1\"),\n        arrayChildren: ParamType.fromObject({\n          type: match[1],\n          components: this.components\n        }),\n        baseType: \"array\"\n      });\n    } else {\n      populate(this, {\n        arrayLength: null,\n        arrayChildren: null,\n        baseType: this.components != null ? \"tuple\" : this.type\n      });\n    }\n\n    this._isParamType = true;\n    Object.freeze(this);\n  }\n\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      let result = {\n        type: this.baseType === \"tuple\" ? \"tuple\" : this.type,\n        name: this.name || undefined\n      };\n\n      if (typeof this.indexed === \"boolean\") {\n        result.indexed = this.indexed;\n      }\n\n      if (this.components) {\n        result.components = this.components.map(comp => JSON.parse(comp.format(format)));\n      }\n\n      return JSON.stringify(result);\n    }\n\n    let result = \"\";\n\n    if (this.baseType === \"array\") {\n      result += this.arrayChildren.format(format);\n      result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n    } else {\n      if (this.baseType === \"tuple\") {\n        if (format !== FormatTypes.sighash) {\n          result += this.type;\n        }\n\n        result += \"(\" + this.components.map(comp => comp.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \")\";\n      } else {\n        result += this.type;\n      }\n    }\n\n    if (format !== FormatTypes.sighash) {\n      if (this.indexed === true) {\n        result += \" indexed\";\n      }\n\n      if (format === FormatTypes.full && this.name) {\n        result += \" \" + this.name;\n      }\n    }\n\n    return result;\n  }\n\n  static from(value, allowIndexed) {\n    if (typeof value === \"string\") {\n      return ParamType.fromString(value, allowIndexed);\n    }\n\n    return ParamType.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ParamType.isParamType(value)) {\n      return value;\n    }\n\n    return new ParamType(_constructorGuard$2, {\n      name: value.name || null,\n      type: verifyType(value.type),\n      indexed: value.indexed == null ? null : !!value.indexed,\n      components: value.components ? value.components.map(ParamType.fromObject) : null\n    });\n  }\n\n  static fromString(value, allowIndexed) {\n    function ParamTypify(node) {\n      return ParamType.fromObject({\n        name: node.name,\n        type: node.type,\n        indexed: node.indexed,\n        components: node.components\n      });\n    }\n\n    return ParamTypify(parseParamType(value, !!allowIndexed));\n  }\n\n  static isParamType(value) {\n    return !!(value != null && value._isParamType);\n  }\n\n}\n\nfunction parseParams(value, allowIndex) {\n  return splitNesting(value).map(param => ParamType.fromString(param, allowIndex));\n}\n\nclass Fragment {\n  constructor(constructorGuard, params) {\n    if (constructorGuard !== _constructorGuard$2) {\n      logger$4.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new Fragment()\"\n      });\n    }\n\n    populate(this, params);\n    this._isFragment = true;\n    Object.freeze(this);\n  }\n\n  static from(value) {\n    if (Fragment.isFragment(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return Fragment.fromString(value);\n    }\n\n    return Fragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (Fragment.isFragment(value)) {\n      return value;\n    }\n\n    switch (value.type) {\n      case \"function\":\n        return FunctionFragment.fromObject(value);\n\n      case \"event\":\n        return EventFragment.fromObject(value);\n\n      case \"constructor\":\n        return ConstructorFragment.fromObject(value);\n\n      case \"error\":\n      case \"fallback\":\n      case \"receive\":\n        return null;\n    }\n\n    return logger$4.throwArgumentError(\"invalid fragment object\", \"value\", value);\n  }\n\n  static fromString(value) {\n    value = value.replace(/\\s/g, \" \");\n    value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n    value = value.trim();\n\n    if (value.split(\" \")[0] === \"event\") {\n      return EventFragment.fromString(value.substring(5).trim());\n    } else if (value.split(\" \")[0] === \"function\") {\n      return FunctionFragment.fromString(value.substring(8).trim());\n    } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n      return ConstructorFragment.fromString(value.trim());\n    }\n\n    return logger$4.throwArgumentError(\"unsupported fragment\", \"value\", value);\n  }\n\n  static isFragment(value) {\n    return !!(value && value._isFragment);\n  }\n\n}\n\nclass EventFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"event\",\n        anonymous: this.anonymous,\n        name: this.name,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"event \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (format !== FormatTypes.sighash) {\n      if (this.anonymous) {\n        result += \"anonymous \";\n      }\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return EventFragment.fromString(value);\n    }\n\n    return EventFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (EventFragment.isEventFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"event\") {\n      logger$4.throwArgumentError(\"invalid event object\", \"value\", value);\n    }\n\n    const params = {\n      name: verifyIdentifier(value.name),\n      anonymous: value.anonymous,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      type: \"event\"\n    };\n    return new EventFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let match = value.match(regexParen);\n\n    if (!match) {\n      logger$4.throwArgumentError(\"invalid event string\", \"value\", value);\n    }\n\n    let anonymous = false;\n    match[3].split(\" \").forEach(modifier => {\n      switch (modifier.trim()) {\n        case \"anonymous\":\n          anonymous = true;\n          break;\n\n        case \"\":\n          break;\n\n        default:\n          logger$4.warn(\"unknown modifier: \" + modifier);\n      }\n    });\n    return EventFragment.fromObject({\n      name: match[1].trim(),\n      anonymous: anonymous,\n      inputs: parseParams(match[2], true),\n      type: \"event\"\n    });\n  }\n\n  static isEventFragment(value) {\n    return value && value._isFragment && value.type === \"event\";\n  }\n\n}\n\nfunction parseGas(value, params) {\n  params.gas = null;\n  let comps = value.split(\"@\");\n\n  if (comps.length !== 1) {\n    if (comps.length > 2) {\n      logger$4.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n    }\n\n    if (!comps[1].match(/^[0-9]+$/)) {\n      logger$4.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n    }\n\n    params.gas = BigNumber.from(comps[1]);\n    return comps[0];\n  }\n\n  return value;\n}\n\nfunction parseModifiers(value, params) {\n  params.constant = false;\n  params.payable = false;\n  params.stateMutability = \"nonpayable\";\n  value.split(\" \").forEach(modifier => {\n    switch (modifier.trim()) {\n      case \"constant\":\n        params.constant = true;\n        break;\n\n      case \"payable\":\n        params.payable = true;\n        params.stateMutability = \"payable\";\n        break;\n\n      case \"nonpayable\":\n        params.payable = false;\n        params.stateMutability = \"nonpayable\";\n        break;\n\n      case \"pure\":\n        params.constant = true;\n        params.stateMutability = \"pure\";\n        break;\n\n      case \"view\":\n        params.constant = true;\n        params.stateMutability = \"view\";\n        break;\n\n      case \"external\":\n      case \"public\":\n      case \"\":\n        break;\n\n      default:\n        console.log(\"unknown modifier: \" + modifier);\n    }\n  });\n}\n\nfunction verifyState(value) {\n  let result = {\n    constant: false,\n    payable: true,\n    stateMutability: \"payable\"\n  };\n\n  if (value.stateMutability != null) {\n    result.stateMutability = value.stateMutability;\n    result.constant = result.stateMutability === \"view\" || result.stateMutability === \"pure\";\n\n    if (value.constant != null) {\n      if (!!value.constant !== result.constant) {\n        logger$4.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n      }\n    }\n\n    result.payable = result.stateMutability === \"payable\";\n\n    if (value.payable != null) {\n      if (!!value.payable !== result.payable) {\n        logger$4.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n      }\n    }\n  } else if (value.payable != null) {\n    result.payable = !!value.payable;\n\n    if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n      logger$4.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    result.constant = !!value.constant;\n\n    if (result.constant) {\n      result.stateMutability = \"view\";\n    } else {\n      result.stateMutability = result.payable ? \"payable\" : \"nonpayable\";\n    }\n\n    if (result.payable && result.constant) {\n      logger$4.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n    }\n  } else if (value.constant != null) {\n    result.constant = !!value.constant;\n    result.payable = !result.constant;\n    result.stateMutability = result.constant ? \"view\" : \"payable\";\n  } else if (value.type !== \"constructor\") {\n    logger$4.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n  }\n\n  return result;\n}\n\nclass ConstructorFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"constructor\",\n        stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : undefined,\n        payable: this.payable,\n        gas: this.gas ? this.gas.toNumber() : undefined,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    if (format === FormatTypes.sighash) {\n      logger$4.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"format(sighash)\"\n      });\n    }\n\n    let result = \"constructor(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n      result += this.stateMutability + \" \";\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return ConstructorFragment.fromString(value);\n    }\n\n    return ConstructorFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ConstructorFragment.isConstructorFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"constructor\") {\n      logger$4.throwArgumentError(\"invalid constructor object\", \"value\", value);\n    }\n\n    let state = verifyState(value);\n\n    if (state.constant) {\n      logger$4.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n    }\n\n    const params = {\n      name: null,\n      type: value.type,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      payable: state.payable,\n      stateMutability: state.stateMutability,\n      gas: value.gas ? BigNumber.from(value.gas) : null\n    };\n    return new ConstructorFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"constructor\"\n    };\n    value = parseGas(value, params);\n    let parens = value.match(regexParen);\n\n    if (!parens || parens[1].trim() !== \"constructor\") {\n      logger$4.throwArgumentError(\"invalid constructor string\", \"value\", value);\n    }\n\n    params.inputs = parseParams(parens[2].trim(), false);\n    parseModifiers(parens[3].trim(), params);\n    return ConstructorFragment.fromObject(params);\n  }\n\n  static isConstructorFragment(value) {\n    return value && value._isFragment && value.type === \"constructor\";\n  }\n\n}\n\nclass FunctionFragment extends ConstructorFragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"function\",\n        name: this.name,\n        constant: this.constant,\n        stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : undefined,\n        payable: this.payable,\n        gas: this.gas ? this.gas.toNumber() : undefined,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format))),\n        outputs: this.outputs.map(output => JSON.parse(output.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"function \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (format !== FormatTypes.sighash) {\n      if (this.stateMutability) {\n        if (this.stateMutability !== \"nonpayable\") {\n          result += this.stateMutability + \" \";\n        }\n      } else if (this.constant) {\n        result += \"view \";\n      }\n\n      if (this.outputs && this.outputs.length) {\n        result += \"returns (\" + this.outputs.map(output => output.format(format)).join(\", \") + \") \";\n      }\n\n      if (this.gas != null) {\n        result += \"@\" + this.gas.toString() + \" \";\n      }\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return FunctionFragment.fromString(value);\n    }\n\n    return FunctionFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (FunctionFragment.isFunctionFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"function\") {\n      logger$4.throwArgumentError(\"invalid function object\", \"value\", value);\n    }\n\n    let state = verifyState(value);\n    const params = {\n      type: value.type,\n      name: verifyIdentifier(value.name),\n      constant: state.constant,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      outputs: value.outputs ? value.outputs.map(ParamType.fromObject) : [],\n      payable: state.payable,\n      stateMutability: state.stateMutability,\n      gas: value.gas ? BigNumber.from(value.gas) : null\n    };\n    return new FunctionFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"function\"\n    };\n    value = parseGas(value, params);\n    let comps = value.split(\" returns \");\n\n    if (comps.length > 2) {\n      logger$4.throwArgumentError(\"invalid function string\", \"value\", value);\n    }\n\n    let parens = comps[0].match(regexParen);\n\n    if (!parens) {\n      logger$4.throwArgumentError(\"invalid function signature\", \"value\", value);\n    }\n\n    params.name = parens[1].trim();\n\n    if (params.name) {\n      verifyIdentifier(params.name);\n    }\n\n    params.inputs = parseParams(parens[2], false);\n    parseModifiers(parens[3].trim(), params);\n\n    if (comps.length > 1) {\n      let returns = comps[1].match(regexParen);\n\n      if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n        logger$4.throwArgumentError(\"unexpected tokens\", \"value\", value);\n      }\n\n      params.outputs = parseParams(returns[2], false);\n    } else {\n      params.outputs = [];\n    }\n\n    return FunctionFragment.fromObject(params);\n  }\n\n  static isFunctionFragment(value) {\n    return value && value._isFragment && value.type === \"function\";\n  }\n\n}\n\nfunction verifyType(type) {\n  if (type.match(/^uint($|[^1-9])/)) {\n    type = \"uint256\" + type.substring(4);\n  } else if (type.match(/^int($|[^1-9])/)) {\n    type = \"int256\" + type.substring(3);\n  }\n\n  return type;\n}\n\nconst regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\n\nfunction verifyIdentifier(value) {\n  if (!value || !value.match(regexIdentifier)) {\n    logger$4.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n  }\n\n  return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value) {\n  value = value.trim();\n  let result = [];\n  let accum = \"\";\n  let depth = 0;\n\n  for (let offset = 0; offset < value.length; offset++) {\n    let c = value[offset];\n\n    if (c === \",\" && depth === 0) {\n      result.push(accum);\n      accum = \"\";\n    } else {\n      accum += c;\n\n      if (c === \"(\") {\n        depth++;\n      } else if (c === \")\") {\n        depth--;\n\n        if (depth === -1) {\n          logger$4.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n        }\n      }\n    }\n  }\n\n  if (accum) {\n    result.push(accum);\n  }\n\n  return result;\n}\n\n\"use strict\";\n\nconst logger$5 = new Logger(version$4);\n\nfunction checkResultErrors(result) {\n  const errors = [];\n\n  const checkErrors = function (path, object) {\n    if (!Array.isArray(object)) {\n      return;\n    }\n\n    for (let key in object) {\n      const childPath = path.slice();\n      childPath.push(key);\n\n      try {\n        checkErrors(childPath, object[key]);\n      } catch (error) {\n        errors.push({\n          path: childPath,\n          error: error\n        });\n      }\n    }\n  };\n\n  checkErrors([], result);\n  return errors;\n}\n\nclass Coder {\n  constructor(name, type, localName, dynamic) {\n    this.name = name;\n    this.type = type;\n    this.localName = localName;\n    this.dynamic = dynamic;\n  }\n\n  _throwError(message, value) {\n    logger$5.throwArgumentError(message, this.localName, value);\n  }\n\n}\n\nclass Writer {\n  constructor(wordSize) {\n    defineReadOnly(this, \"wordSize\", wordSize || 32);\n    this._data = [];\n    this._dataLength = 0;\n    this._padding = new Uint8Array(wordSize);\n  }\n\n  get data() {\n    return hexConcat(this._data);\n  }\n\n  get length() {\n    return this._dataLength;\n  }\n\n  _writeData(data) {\n    this._data.push(data);\n\n    this._dataLength += data.length;\n    return data.length;\n  }\n\n  appendWriter(writer) {\n    return this._writeData(concat(writer._data));\n  }\n\n  writeBytes(value) {\n    let bytes = arrayify(value);\n    const paddingOffset = bytes.length % this.wordSize;\n\n    if (paddingOffset) {\n      bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n    }\n\n    return this._writeData(bytes);\n  }\n\n  _getValue(value) {\n    let bytes = arrayify(BigNumber.from(value));\n\n    if (bytes.length > this.wordSize) {\n      logger$5.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n        length: this.wordSize,\n        offset: bytes.length\n      });\n    }\n\n    if (bytes.length % this.wordSize) {\n      bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n    }\n\n    return bytes;\n  }\n\n  writeValue(value) {\n    return this._writeData(this._getValue(value));\n  }\n\n  writeUpdatableValue() {\n    const offset = this._data.length;\n\n    this._data.push(this._padding);\n\n    this._dataLength += this.wordSize;\n    return value => {\n      this._data[offset] = this._getValue(value);\n    };\n  }\n\n}\n\nclass Reader {\n  constructor(data, wordSize, coerceFunc, allowLoose) {\n    defineReadOnly(this, \"_data\", arrayify(data));\n    defineReadOnly(this, \"wordSize\", wordSize || 32);\n    defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n    defineReadOnly(this, \"allowLoose\", allowLoose);\n    this._offset = 0;\n  }\n\n  get data() {\n    return hexlify(this._data);\n  }\n\n  get consumed() {\n    return this._offset;\n  }\n\n  static coerce(name, value) {\n    let match = name.match(\"^u?int([0-9]+)$\");\n\n    if (match && parseInt(match[1]) <= 48) {\n      value = value.toNumber();\n    }\n\n    return value;\n  }\n\n  coerce(name, value) {\n    if (this._coerceFunc) {\n      return this._coerceFunc(name, value);\n    }\n\n    return Reader.coerce(name, value);\n  }\n\n  _peekBytes(offset, length, loose) {\n    let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n\n    if (this._offset + alignedLength > this._data.length) {\n      if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n        alignedLength = length;\n      } else {\n        logger$5.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n          length: this._data.length,\n          offset: this._offset + alignedLength\n        });\n      }\n    }\n\n    return this._data.slice(this._offset, this._offset + alignedLength);\n  }\n\n  subReader(offset) {\n    return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n  }\n\n  readBytes(length, loose) {\n    let bytes = this._peekBytes(0, length, !!loose);\n\n    this._offset += bytes.length;\n    return bytes.slice(0, length);\n  }\n\n  readValue() {\n    return BigNumber.from(this.readBytes(this.wordSize));\n  }\n\n}\n\nvar sha3 = createCommonjsModule(function (module) {\n  (function () {\n    \"use strict\";\n\n    var root = typeof window === \"object\" ? window : {};\n    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === \"object\" && process.versions && process.versions.node;\n\n    if (NODE_JS) {\n      root = commonjsGlobal;\n    }\n\n    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && \"object\" === \"object\" && module.exports;\n    var HEX_CHARS = \"0123456789abcdef\".split(\"\");\n    var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n    var KECCAK_PADDING = [1, 256, 65536, 16777216];\n    var PADDING = [6, 1536, 393216, 100663296];\n    var SHIFT = [0, 8, 16, 24];\n    var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n    var BITS = [224, 256, 384, 512];\n    var SHAKE_BITS = [128, 256];\n    var OUTPUT_TYPES = [\"hex\", \"buffer\", \"arrayBuffer\", \"array\"];\n\n    var createOutputMethod = function (bits, padding, outputType) {\n      return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n      };\n    };\n\n    var createShakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n      };\n    };\n\n    var createMethod = function (bits, padding) {\n      var method = createOutputMethod(bits, padding, \"hex\");\n\n      method.create = function () {\n        return new Keccak(bits, padding, bits);\n      };\n\n      method.update = function (message) {\n        return method.create().update(message);\n      };\n\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createOutputMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var createShakeMethod = function (bits, padding) {\n      var method = createShakeOutputMethod(bits, padding, \"hex\");\n\n      method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n      };\n\n      method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n      };\n\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createShakeOutputMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var algorithms = [{\n      name: \"keccak\",\n      padding: KECCAK_PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: \"sha3\",\n      padding: PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: \"shake\",\n      padding: SHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createShakeMethod\n    }];\n    var methods = {},\n        methodNames = [];\n\n    for (var i = 0; i < algorithms.length; ++i) {\n      var algorithm = algorithms[i];\n      var bits = algorithm.bits;\n\n      for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + \"_\" + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      }\n    }\n\n    function Keccak(bits, padding, outputBits) {\n      this.blocks = [];\n      this.s = [];\n      this.padding = padding;\n      this.outputBits = outputBits;\n      this.reset = true;\n      this.block = 0;\n      this.start = 0;\n      this.blockCount = 1600 - (bits << 1) >> 5;\n      this.byteCount = this.blockCount << 2;\n      this.outputBlocks = outputBits >> 5;\n      this.extraBytes = (outputBits & 31) >> 3;\n\n      for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n      }\n    }\n\n    Keccak.prototype.update = function (message) {\n      var notString = typeof message !== \"string\";\n\n      if (notString && message.constructor === ArrayBuffer) {\n        message = new Uint8Array(message);\n      }\n\n      var length = message.length,\n          blocks = this.blocks,\n          byteCount = this.byteCount,\n          blockCount = this.blockCount,\n          index = 0,\n          s = this.s,\n          i,\n          code;\n\n      while (index < length) {\n        if (this.reset) {\n          this.reset = false;\n          blocks[0] = this.block;\n\n          for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n          }\n        }\n\n        if (notString) {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        } else {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            code = message.charCodeAt(index);\n\n            if (code < 128) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 2048) {\n              blocks[i >> 2] |= (192 | code >> 6) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (128 | code & 63) << SHIFT[i++ & 3];\n            } else if (code < 55296 || code >= 57344) {\n              blocks[i >> 2] |= (224 | code >> 12) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (128 | code >> 6 & 63) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (128 | code & 63) << SHIFT[i++ & 3];\n            } else {\n              code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index) & 1023);\n              blocks[i >> 2] |= (240 | code >> 18) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (128 | code >> 12 & 63) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (128 | code >> 6 & 63) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (128 | code & 63) << SHIFT[i++ & 3];\n            }\n          }\n        }\n\n        this.lastByteIndex = i;\n\n        if (i >= byteCount) {\n          this.start = i - byteCount;\n          this.block = blocks[blockCount];\n\n          for (i = 0; i < blockCount; ++i) {\n            s[i] ^= blocks[i];\n          }\n\n          f(s);\n          this.reset = true;\n        } else {\n          this.start = i;\n        }\n      }\n\n      return this;\n    };\n\n    Keccak.prototype.finalize = function () {\n      var blocks = this.blocks,\n          i = this.lastByteIndex,\n          blockCount = this.blockCount,\n          s = this.s;\n      blocks[i >> 2] |= this.padding[i & 3];\n\n      if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      blocks[blockCount - 1] |= 2147483648;\n\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n\n      f(s);\n    };\n\n    Keccak.prototype.toString = Keccak.prototype.hex = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var hex = \"\",\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          block = s[i];\n          hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n          i = 0;\n        }\n      }\n\n      if (extraBytes) {\n        block = s[i];\n\n        if (extraBytes > 0) {\n          hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];\n        }\n\n        if (extraBytes > 1) {\n          hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];\n        }\n\n        if (extraBytes > 2) {\n          hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];\n        }\n      }\n\n      return hex;\n    };\n\n    Keccak.prototype.arrayBuffer = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var bytes = this.outputBits >> 3;\n      var buffer;\n\n      if (extraBytes) {\n        buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n      } else {\n        buffer = new ArrayBuffer(bytes);\n      }\n\n      var array = new Uint32Array(buffer);\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          array[j] = s[i];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n      }\n\n      return buffer;\n    };\n\n    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n    Keccak.prototype.digest = Keccak.prototype.array = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var array = [],\n          offset,\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          offset = j << 2;\n          block = s[i];\n          array[offset] = block & 255;\n          array[offset + 1] = block >> 8 & 255;\n          array[offset + 2] = block >> 16 & 255;\n          array[offset + 3] = block >> 24 & 255;\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n\n        if (extraBytes > 0) {\n          array[offset] = block & 255;\n        }\n\n        if (extraBytes > 1) {\n          array[offset + 1] = block >> 8 & 255;\n        }\n\n        if (extraBytes > 2) {\n          array[offset + 2] = block >> 16 & 255;\n        }\n      }\n\n      return array;\n    };\n\n    var f = function (s) {\n      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n      for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n        h = c8 ^ (c2 << 1 | c3 >>> 31);\n        l = c9 ^ (c3 << 1 | c2 >>> 31);\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ (c4 << 1 | c5 >>> 31);\n        l = c1 ^ (c5 << 1 | c4 >>> 31);\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ (c6 << 1 | c7 >>> 31);\n        l = c3 ^ (c7 << 1 | c6 >>> 31);\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ (c8 << 1 | c9 >>> 31);\n        l = c5 ^ (c9 << 1 | c8 >>> 31);\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ (c0 << 1 | c1 >>> 31);\n        l = c7 ^ (c1 << 1 | c0 >>> 31);\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n        b0 = s[0];\n        b1 = s[1];\n        b32 = s[11] << 4 | s[10] >>> 28;\n        b33 = s[10] << 4 | s[11] >>> 28;\n        b14 = s[20] << 3 | s[21] >>> 29;\n        b15 = s[21] << 3 | s[20] >>> 29;\n        b46 = s[31] << 9 | s[30] >>> 23;\n        b47 = s[30] << 9 | s[31] >>> 23;\n        b28 = s[40] << 18 | s[41] >>> 14;\n        b29 = s[41] << 18 | s[40] >>> 14;\n        b20 = s[2] << 1 | s[3] >>> 31;\n        b21 = s[3] << 1 | s[2] >>> 31;\n        b2 = s[13] << 12 | s[12] >>> 20;\n        b3 = s[12] << 12 | s[13] >>> 20;\n        b34 = s[22] << 10 | s[23] >>> 22;\n        b35 = s[23] << 10 | s[22] >>> 22;\n        b16 = s[33] << 13 | s[32] >>> 19;\n        b17 = s[32] << 13 | s[33] >>> 19;\n        b48 = s[42] << 2 | s[43] >>> 30;\n        b49 = s[43] << 2 | s[42] >>> 30;\n        b40 = s[5] << 30 | s[4] >>> 2;\n        b41 = s[4] << 30 | s[5] >>> 2;\n        b22 = s[14] << 6 | s[15] >>> 26;\n        b23 = s[15] << 6 | s[14] >>> 26;\n        b4 = s[25] << 11 | s[24] >>> 21;\n        b5 = s[24] << 11 | s[25] >>> 21;\n        b36 = s[34] << 15 | s[35] >>> 17;\n        b37 = s[35] << 15 | s[34] >>> 17;\n        b18 = s[45] << 29 | s[44] >>> 3;\n        b19 = s[44] << 29 | s[45] >>> 3;\n        b10 = s[6] << 28 | s[7] >>> 4;\n        b11 = s[7] << 28 | s[6] >>> 4;\n        b42 = s[17] << 23 | s[16] >>> 9;\n        b43 = s[16] << 23 | s[17] >>> 9;\n        b24 = s[26] << 25 | s[27] >>> 7;\n        b25 = s[27] << 25 | s[26] >>> 7;\n        b6 = s[36] << 21 | s[37] >>> 11;\n        b7 = s[37] << 21 | s[36] >>> 11;\n        b38 = s[47] << 24 | s[46] >>> 8;\n        b39 = s[46] << 24 | s[47] >>> 8;\n        b30 = s[8] << 27 | s[9] >>> 5;\n        b31 = s[9] << 27 | s[8] >>> 5;\n        b12 = s[18] << 20 | s[19] >>> 12;\n        b13 = s[19] << 20 | s[18] >>> 12;\n        b44 = s[29] << 7 | s[28] >>> 25;\n        b45 = s[28] << 7 | s[29] >>> 25;\n        b26 = s[38] << 8 | s[39] >>> 24;\n        b27 = s[39] << 8 | s[38] >>> 24;\n        b8 = s[48] << 14 | s[49] >>> 18;\n        b9 = s[49] << 14 | s[48] >>> 18;\n        s[0] = b0 ^ ~b2 & b4;\n        s[1] = b1 ^ ~b3 & b5;\n        s[10] = b10 ^ ~b12 & b14;\n        s[11] = b11 ^ ~b13 & b15;\n        s[20] = b20 ^ ~b22 & b24;\n        s[21] = b21 ^ ~b23 & b25;\n        s[30] = b30 ^ ~b32 & b34;\n        s[31] = b31 ^ ~b33 & b35;\n        s[40] = b40 ^ ~b42 & b44;\n        s[41] = b41 ^ ~b43 & b45;\n        s[2] = b2 ^ ~b4 & b6;\n        s[3] = b3 ^ ~b5 & b7;\n        s[12] = b12 ^ ~b14 & b16;\n        s[13] = b13 ^ ~b15 & b17;\n        s[22] = b22 ^ ~b24 & b26;\n        s[23] = b23 ^ ~b25 & b27;\n        s[32] = b32 ^ ~b34 & b36;\n        s[33] = b33 ^ ~b35 & b37;\n        s[42] = b42 ^ ~b44 & b46;\n        s[43] = b43 ^ ~b45 & b47;\n        s[4] = b4 ^ ~b6 & b8;\n        s[5] = b5 ^ ~b7 & b9;\n        s[14] = b14 ^ ~b16 & b18;\n        s[15] = b15 ^ ~b17 & b19;\n        s[24] = b24 ^ ~b26 & b28;\n        s[25] = b25 ^ ~b27 & b29;\n        s[34] = b34 ^ ~b36 & b38;\n        s[35] = b35 ^ ~b37 & b39;\n        s[44] = b44 ^ ~b46 & b48;\n        s[45] = b45 ^ ~b47 & b49;\n        s[6] = b6 ^ ~b8 & b0;\n        s[7] = b7 ^ ~b9 & b1;\n        s[16] = b16 ^ ~b18 & b10;\n        s[17] = b17 ^ ~b19 & b11;\n        s[26] = b26 ^ ~b28 & b20;\n        s[27] = b27 ^ ~b29 & b21;\n        s[36] = b36 ^ ~b38 & b30;\n        s[37] = b37 ^ ~b39 & b31;\n        s[46] = b46 ^ ~b48 & b40;\n        s[47] = b47 ^ ~b49 & b41;\n        s[8] = b8 ^ ~b0 & b2;\n        s[9] = b9 ^ ~b1 & b3;\n        s[18] = b18 ^ ~b10 & b12;\n        s[19] = b19 ^ ~b11 & b13;\n        s[28] = b28 ^ ~b20 & b22;\n        s[29] = b29 ^ ~b21 & b23;\n        s[38] = b38 ^ ~b30 & b32;\n        s[39] = b39 ^ ~b31 & b33;\n        s[48] = b48 ^ ~b40 & b42;\n        s[49] = b49 ^ ~b41 & b43;\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n      }\n    };\n\n    if (COMMON_JS) {\n      module.exports = methods;\n    } else {\n      for (var i = 0; i < methodNames.length; ++i) {\n        root[methodNames[i]] = methods[methodNames[i]];\n      }\n    }\n  })();\n});\n\"use strict\";\n\nfunction keccak256(data) {\n  return \"0x\" + sha3.keccak_256(arrayify(data));\n}\n\nconst version$5 = \"rlp/5.1.0\";\n\"use strict\";\n\nconst logger$6 = new Logger(version$5);\n\nfunction arrayifyInteger(value) {\n  const result = [];\n\n  while (value) {\n    result.unshift(value & 255);\n    value >>= 8;\n  }\n\n  return result;\n}\n\nfunction unarrayifyInteger(data, offset, length) {\n  let result = 0;\n\n  for (let i = 0; i < length; i++) {\n    result = result * 256 + data[offset + i];\n  }\n\n  return result;\n}\n\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    let payload = [];\n    object.forEach(function (child) {\n      payload = payload.concat(_encode(child));\n    });\n\n    if (payload.length <= 55) {\n      payload.unshift(192 + payload.length);\n      return payload;\n    }\n\n    const length = arrayifyInteger(payload.length);\n    length.unshift(247 + length.length);\n    return length.concat(payload);\n  }\n\n  if (!isBytesLike(object)) {\n    logger$6.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n  }\n\n  const data = Array.prototype.slice.call(arrayify(object));\n\n  if (data.length === 1 && data[0] <= 127) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(128 + data.length);\n    return data;\n  }\n\n  const length = arrayifyInteger(data.length);\n  length.unshift(183 + length.length);\n  return length.concat(data);\n}\n\nfunction encode(object) {\n  return hexlify(_encode(object));\n}\n\nfunction _decodeChildren(data, offset, childOffset, length) {\n  const result = [];\n\n  while (childOffset < offset + 1 + length) {\n    const decoded = _decode(data, childOffset);\n\n    result.push(decoded.result);\n    childOffset += decoded.consumed;\n\n    if (childOffset > offset + 1 + length) {\n      logger$6.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n  }\n\n  return {\n    consumed: 1 + length,\n    result: result\n  };\n}\n\nfunction _decode(data, offset) {\n  if (data.length === 0) {\n    logger$6.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n  }\n\n  if (data[offset] >= 248) {\n    const lengthLength = data[offset] - 247;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger$6.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger$6.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n  } else if (data[offset] >= 192) {\n    const length = data[offset] - 192;\n\n    if (offset + 1 + length > data.length) {\n      logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1, length);\n  } else if (data[offset] >= 184) {\n    const lengthLength = data[offset] - 183;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger$6.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n    return {\n      consumed: 1 + lengthLength + length,\n      result: result\n    };\n  } else if (data[offset] >= 128) {\n    const length = data[offset] - 128;\n\n    if (offset + 1 + length > data.length) {\n      logger$6.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n    return {\n      consumed: 1 + length,\n      result: result\n    };\n  }\n\n  return {\n    consumed: 1,\n    result: hexlify(data[offset])\n  };\n}\n\nfunction decode(data) {\n  const bytes = arrayify(data);\n\n  const decoded = _decode(bytes, 0);\n\n  if (decoded.consumed !== bytes.length) {\n    logger$6.throwArgumentError(\"invalid rlp data\", \"data\", data);\n  }\n\n  return decoded.result;\n}\n\nvar index = Object.freeze({\n  __proto__: null,\n  encode: encode,\n  decode: decode\n});\nconst version$6 = \"address/5.1.0\";\n\"use strict\";\n\nconst logger$7 = new Logger(version$6);\n\nfunction getChecksumAddress(address) {\n  if (!isHexString(address, 20)) {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  address = address.toLowerCase();\n  const chars = address.substring(2).split(\"\");\n  const expanded = new Uint8Array(40);\n\n  for (let i = 0; i < 40; i++) {\n    expanded[i] = chars[i].charCodeAt(0);\n  }\n\n  const hashed = arrayify(keccak256(expanded));\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n\n    if ((hashed[i >> 1] & 15) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n\n  return \"0x\" + chars.join(\"\");\n}\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\nfunction log10(x) {\n  if (Math.log10) {\n    return Math.log10(x);\n  }\n\n  return Math.log(x) / Math.LN10;\n}\n\nconst ibanLookup = {};\n\nfor (let i = 0; i < 10; i++) {\n  ibanLookup[String(i)] = String(i);\n}\n\nfor (let i = 0; i < 26; i++) {\n  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address) {\n  address = address.toUpperCase();\n  address = address.substring(4) + address.substring(0, 2) + \"00\";\n  let expanded = address.split(\"\").map(c => {\n    return ibanLookup[c];\n  }).join(\"\");\n\n  while (expanded.length >= safeDigits) {\n    let block = expanded.substring(0, safeDigits);\n    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n  }\n\n  let checksum = String(98 - parseInt(expanded, 10) % 97);\n\n  while (checksum.length < 2) {\n    checksum = \"0\" + checksum;\n  }\n\n  return checksum;\n}\n\nfunction getAddress(address) {\n  let result = null;\n\n  if (typeof address !== \"string\") {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    if (address.substring(0, 2) !== \"0x\") {\n      address = \"0x\" + address;\n    }\n\n    result = getChecksumAddress(address);\n\n    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n      logger$7.throwArgumentError(\"bad address checksum\", \"address\", address);\n    }\n  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n    if (address.substring(2, 4) !== ibanChecksum(address)) {\n      logger$7.throwArgumentError(\"bad icap checksum\", \"address\", address);\n    }\n\n    result = _base36To16(address.substring(4));\n\n    while (result.length < 40) {\n      result = \"0\" + result;\n    }\n\n    result = getChecksumAddress(\"0x\" + result);\n  } else {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  return result;\n}\n\nfunction isAddress(address) {\n  try {\n    getAddress(address);\n    return true;\n  } catch (error) {}\n\n  return false;\n}\n\nfunction getIcapAddress(address) {\n  let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n\n  while (base36.length < 30) {\n    base36 = \"0\" + base36;\n  }\n\n  return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\nfunction getContractAddress(transaction) {\n  let from = null;\n\n  try {\n    from = getAddress(transaction.from);\n  } catch (error) {\n    logger$7.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n  }\n\n  const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n  return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\n\nfunction getCreate2Address(from, salt, initCodeHash) {\n  if (hexDataLength(salt) !== 32) {\n    logger$7.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n  }\n\n  if (hexDataLength(initCodeHash) !== 32) {\n    logger$7.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n  }\n\n  return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n\n\"use strict\";\n\nclass AddressCoder extends Coder {\n  constructor(localName) {\n    super(\"address\", \"address\", localName, false);\n  }\n\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000\";\n  }\n\n  encode(writer, value) {\n    try {\n      getAddress(value);\n    } catch (error) {\n      this._throwError(error.message, value);\n    }\n\n    return writer.writeValue(value);\n  }\n\n  decode(reader) {\n    return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n  }\n\n}\n\n\"use strict\";\n\nclass AnonymousCoder extends Coder {\n  constructor(coder) {\n    super(coder.name, coder.type, undefined, coder.dynamic);\n    this.coder = coder;\n  }\n\n  defaultValue() {\n    return this.coder.defaultValue();\n  }\n\n  encode(writer, value) {\n    return this.coder.encode(writer, value);\n  }\n\n  decode(reader) {\n    return this.coder.decode(reader);\n  }\n\n}\n\n\"use strict\";\n\nconst logger$8 = new Logger(version$4);\n\nfunction pack(writer, coders, values) {\n  let arrayValues = null;\n\n  if (Array.isArray(values)) {\n    arrayValues = values;\n  } else if (values && typeof values === \"object\") {\n    let unique = {};\n    arrayValues = coders.map(coder => {\n      const name = coder.localName;\n\n      if (!name) {\n        logger$8.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"values\",\n          coder: coder,\n          value: values\n        });\n      }\n\n      if (unique[name]) {\n        logger$8.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"values\",\n          coder: coder,\n          value: values\n        });\n      }\n\n      unique[name] = true;\n      return values[name];\n    });\n  } else {\n    logger$8.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n  }\n\n  if (coders.length !== arrayValues.length) {\n    logger$8.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n  }\n\n  let staticWriter = new Writer(writer.wordSize);\n  let dynamicWriter = new Writer(writer.wordSize);\n  let updateFuncs = [];\n  coders.forEach((coder, index) => {\n    let value = arrayValues[index];\n\n    if (coder.dynamic) {\n      let dynamicOffset = dynamicWriter.length;\n      coder.encode(dynamicWriter, value);\n      let updateFunc = staticWriter.writeUpdatableValue();\n      updateFuncs.push(baseOffset => {\n        updateFunc(baseOffset + dynamicOffset);\n      });\n    } else {\n      coder.encode(staticWriter, value);\n    }\n  });\n  updateFuncs.forEach(func => {\n    func(staticWriter.length);\n  });\n  let length = writer.appendWriter(staticWriter);\n  length += writer.appendWriter(dynamicWriter);\n  return length;\n}\n\nfunction unpack(reader, coders) {\n  let values = [];\n  let baseReader = reader.subReader(0);\n  coders.forEach(coder => {\n    let value = null;\n\n    if (coder.dynamic) {\n      let offset = reader.readValue();\n      let offsetReader = baseReader.subReader(offset.toNumber());\n\n      try {\n        value = coder.decode(offsetReader);\n      } catch (error) {\n        if (error.code === Logger.errors.BUFFER_OVERRUN) {\n          throw error;\n        }\n\n        value = error;\n        value.baseType = coder.name;\n        value.name = coder.localName;\n        value.type = coder.type;\n      }\n    } else {\n      try {\n        value = coder.decode(reader);\n      } catch (error) {\n        if (error.code === Logger.errors.BUFFER_OVERRUN) {\n          throw error;\n        }\n\n        value = error;\n        value.baseType = coder.name;\n        value.name = coder.localName;\n        value.type = coder.type;\n      }\n    }\n\n    if (value != undefined) {\n      values.push(value);\n    }\n  });\n  const uniqueNames = coders.reduce((accum, coder) => {\n    const name = coder.localName;\n\n    if (name) {\n      if (!accum[name]) {\n        accum[name] = 0;\n      }\n\n      accum[name]++;\n    }\n\n    return accum;\n  }, {});\n  coders.forEach((coder, index) => {\n    let name = coder.localName;\n\n    if (!name || uniqueNames[name] !== 1) {\n      return;\n    }\n\n    if (name === \"length\") {\n      name = \"_length\";\n    }\n\n    if (values[name] != null) {\n      return;\n    }\n\n    const value = values[index];\n\n    if (value instanceof Error) {\n      Object.defineProperty(values, name, {\n        get: () => {\n          throw value;\n        }\n      });\n    } else {\n      values[name] = value;\n    }\n  });\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i];\n\n    if (value instanceof Error) {\n      Object.defineProperty(values, i, {\n        get: () => {\n          throw value;\n        }\n      });\n    }\n  }\n\n  return Object.freeze(values);\n}\n\nclass ArrayCoder extends Coder {\n  constructor(coder, length, localName) {\n    const type = coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\";\n    const dynamic = length === -1 || coder.dynamic;\n    super(\"array\", type, localName, dynamic);\n    this.coder = coder;\n    this.length = length;\n  }\n\n  defaultValue() {\n    const defaultChild = this.coder.defaultValue();\n    const result = [];\n\n    for (let i = 0; i < this.length; i++) {\n      result.push(defaultChild);\n    }\n\n    return result;\n  }\n\n  encode(writer, value) {\n    if (!Array.isArray(value)) {\n      this._throwError(\"expected array value\", value);\n    }\n\n    let count = this.length;\n\n    if (count === -1) {\n      count = value.length;\n      writer.writeValue(value.length);\n    }\n\n    logger$8.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? \" \" + this.localName : \"\"));\n    let coders = [];\n\n    for (let i = 0; i < value.length; i++) {\n      coders.push(this.coder);\n    }\n\n    return pack(writer, coders, value);\n  }\n\n  decode(reader) {\n    let count = this.length;\n\n    if (count === -1) {\n      count = reader.readValue().toNumber();\n\n      if (count * 32 > reader._data.length) {\n        logger$8.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n          length: reader._data.length,\n          count: count\n        });\n      }\n    }\n\n    let coders = [];\n\n    for (let i = 0; i < count; i++) {\n      coders.push(new AnonymousCoder(this.coder));\n    }\n\n    return reader.coerce(this.name, unpack(reader, coders));\n  }\n\n}\n\n\"use strict\";\n\nclass BooleanCoder extends Coder {\n  constructor(localName) {\n    super(\"bool\", \"bool\", localName, false);\n  }\n\n  defaultValue() {\n    return false;\n  }\n\n  encode(writer, value) {\n    return writer.writeValue(value ? 1 : 0);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.type, !reader.readValue().isZero());\n  }\n\n}\n\n\"use strict\";\n\nclass DynamicBytesCoder extends Coder {\n  constructor(type, localName) {\n    super(type, type, localName, true);\n  }\n\n  defaultValue() {\n    return \"0x\";\n  }\n\n  encode(writer, value) {\n    value = arrayify(value);\n    let length = writer.writeValue(value.length);\n    length += writer.writeBytes(value);\n    return length;\n  }\n\n  decode(reader) {\n    return reader.readBytes(reader.readValue().toNumber(), true);\n  }\n\n}\n\nclass BytesCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"bytes\", localName);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(super.decode(reader)));\n  }\n\n}\n\n\"use strict\";\n\nclass FixedBytesCoder extends Coder {\n  constructor(size, localName) {\n    let name = \"bytes\" + String(size);\n    super(name, name, localName, false);\n    this.size = size;\n  }\n\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0, 2 + this.size * 2);\n  }\n\n  encode(writer, value) {\n    let data = arrayify(value);\n\n    if (data.length !== this.size) {\n      this._throwError(\"incorrect data length\", value);\n    }\n\n    return writer.writeBytes(data);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n  }\n\n}\n\n\"use strict\";\n\nclass NullCoder extends Coder {\n  constructor(localName) {\n    super(\"null\", \"\", localName, false);\n  }\n\n  defaultValue() {\n    return null;\n  }\n\n  encode(writer, value) {\n    if (value != null) {\n      this._throwError(\"not null\", value);\n    }\n\n    return writer.writeBytes([]);\n  }\n\n  decode(reader) {\n    reader.readBytes(0);\n    return reader.coerce(this.name, null);\n  }\n\n}\n\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\nconst NegativeOne$1 = BigNumber.from(-1);\nconst Zero$1 = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst Two = BigNumber.from(2);\nconst WeiPerEther = BigNumber.from(\"1000000000000000000\");\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nconst EtherSymbol = \"Ξ\";\n\"use strict\";\n\nvar index$1 = Object.freeze({\n  __proto__: null,\n  AddressZero: AddressZero,\n  NegativeOne: NegativeOne$1,\n  Zero: Zero$1,\n  One: One,\n  Two: Two,\n  WeiPerEther: WeiPerEther,\n  MaxUint256: MaxUint256,\n  HashZero: HashZero,\n  EtherSymbol: EtherSymbol\n});\n\"use strict\";\n\nclass NumberCoder extends Coder {\n  constructor(size, signed, localName) {\n    const name = (signed ? \"int\" : \"uint\") + size * 8;\n    super(name, name, localName, false);\n    this.size = size;\n    this.signed = signed;\n  }\n\n  defaultValue() {\n    return 0;\n  }\n\n  encode(writer, value) {\n    let v = BigNumber.from(value);\n    let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n\n    if (this.signed) {\n      let bounds = maxUintValue.mask(this.size * 8 - 1);\n\n      if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne$1))) {\n        this._throwError(\"value out-of-bounds\", value);\n      }\n    } else if (v.lt(Zero$1) || v.gt(maxUintValue.mask(this.size * 8))) {\n      this._throwError(\"value out-of-bounds\", value);\n    }\n\n    v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n    if (this.signed) {\n      v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n    }\n\n    return writer.writeValue(v);\n  }\n\n  decode(reader) {\n    let value = reader.readValue().mask(this.size * 8);\n\n    if (this.signed) {\n      value = value.fromTwos(this.size * 8);\n    }\n\n    return reader.coerce(this.name, value);\n  }\n\n}\n\nconst version$7 = \"strings/5.1.0\";\n\"use strict\";\n\nconst logger$9 = new Logger(version$7);\nvar UnicodeNormalizationForm;\n\n(function (UnicodeNormalizationForm) {\n  UnicodeNormalizationForm[\"current\"] = \"\";\n  UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n  UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n  UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n  UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n\nvar Utf8ErrorReason;\n\n(function (Utf8ErrorReason) {\n  Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n  Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n  Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n  Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n  Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n  Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n  Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n  return logger$9.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n    let i = 0;\n\n    for (let o = offset + 1; o < bytes.length; o++) {\n      if (bytes[o] >> 6 !== 2) {\n        break;\n      }\n\n      i++;\n    }\n\n    return i;\n  }\n\n  if (reason === Utf8ErrorReason.OVERRUN) {\n    return bytes.length - offset - 1;\n  }\n\n  return 0;\n}\n\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n  if (reason === Utf8ErrorReason.OVERLONG) {\n    output.push(badCodepoint);\n    return 0;\n  }\n\n  output.push(65533);\n  return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\nconst Utf8ErrorFuncs = Object.freeze({\n  error: errorFunc,\n  ignore: ignoreFunc,\n  replace: replaceFunc\n});\n\nfunction getUtf8CodePoints(bytes, onError) {\n  if (onError == null) {\n    onError = Utf8ErrorFuncs.error;\n  }\n\n  bytes = arrayify(bytes);\n  const result = [];\n  let i = 0;\n\n  while (i < bytes.length) {\n    const c = bytes[i++];\n\n    if (c >> 7 === 0) {\n      result.push(c);\n      continue;\n    }\n\n    let extraLength = null;\n    let overlongMask = null;\n\n    if ((c & 224) === 192) {\n      extraLength = 1;\n      overlongMask = 127;\n    } else if ((c & 240) === 224) {\n      extraLength = 2;\n      overlongMask = 2047;\n    } else if ((c & 248) === 240) {\n      extraLength = 3;\n      overlongMask = 65535;\n    } else {\n      if ((c & 192) === 128) {\n        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n      } else {\n        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n      }\n\n      continue;\n    }\n\n    if (i - 1 + extraLength >= bytes.length) {\n      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n      continue;\n    }\n\n    let res = c & (1 << 8 - extraLength - 1) - 1;\n\n    for (let j = 0; j < extraLength; j++) {\n      let nextChar = bytes[i];\n\n      if ((nextChar & 192) != 128) {\n        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n        res = null;\n        break;\n      }\n\n      res = res << 6 | nextChar & 63;\n      i++;\n    }\n\n    if (res === null) {\n      continue;\n    }\n\n    if (res > 1114111) {\n      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    if (res >= 55296 && res <= 57343) {\n      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    if (res <= overlongMask) {\n      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    result.push(res);\n  }\n\n  return result;\n}\n\nfunction toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n  if (form != UnicodeNormalizationForm.current) {\n    logger$9.checkNormalize();\n    str = str.normalize(form);\n  }\n\n  let result = [];\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n\n    if (c < 128) {\n      result.push(c);\n    } else if (c < 2048) {\n      result.push(c >> 6 | 192);\n      result.push(c & 63 | 128);\n    } else if ((c & 64512) == 55296) {\n      i++;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 64512) !== 56320) {\n        throw new Error(\"invalid utf-8 string\");\n      }\n\n      const pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);\n      result.push(pair >> 18 | 240);\n      result.push(pair >> 12 & 63 | 128);\n      result.push(pair >> 6 & 63 | 128);\n      result.push(pair & 63 | 128);\n    } else {\n      result.push(c >> 12 | 224);\n      result.push(c >> 6 & 63 | 128);\n      result.push(c & 63 | 128);\n    }\n  }\n\n  return arrayify(result);\n}\n\nfunction escapeChar(value) {\n  const hex = \"0000\" + value.toString(16);\n  return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nfunction _toEscapedUtf8String(bytes, onError) {\n  return '\"' + getUtf8CodePoints(bytes, onError).map(codePoint => {\n    if (codePoint < 256) {\n      switch (codePoint) {\n        case 8:\n          return \"\\\\b\";\n\n        case 9:\n          return \"\\\\t\";\n\n        case 10:\n          return \"\\\\n\";\n\n        case 13:\n          return \"\\\\r\";\n\n        case 34:\n          return '\\\\\"';\n\n        case 92:\n          return \"\\\\\\\\\";\n      }\n\n      if (codePoint >= 32 && codePoint < 127) {\n        return String.fromCharCode(codePoint);\n      }\n    }\n\n    if (codePoint <= 65535) {\n      return escapeChar(codePoint);\n    }\n\n    codePoint -= 65536;\n    return escapeChar((codePoint >> 10 & 1023) + 55296) + escapeChar((codePoint & 1023) + 56320);\n  }).join(\"\") + '\"';\n}\n\nfunction _toUtf8String(codePoints) {\n  return codePoints.map(codePoint => {\n    if (codePoint <= 65535) {\n      return String.fromCharCode(codePoint);\n    }\n\n    codePoint -= 65536;\n    return String.fromCharCode((codePoint >> 10 & 1023) + 55296, (codePoint & 1023) + 56320);\n  }).join(\"\");\n}\n\nfunction toUtf8String(bytes, onError) {\n  return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nfunction toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n  return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n\"use strict\";\n\nfunction formatBytes32String(text) {\n  const bytes = toUtf8Bytes(text);\n\n  if (bytes.length > 31) {\n    throw new Error(\"bytes32 string must be less than 32 bytes\");\n  }\n\n  return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\n\nfunction parseBytes32String(bytes) {\n  const data = arrayify(bytes);\n\n  if (data.length !== 32) {\n    throw new Error(\"invalid bytes32 - not 32 bytes long\");\n  }\n\n  if (data[31] !== 0) {\n    throw new Error(\"invalid bytes32 string - no null terminator\");\n  }\n\n  let length = 31;\n\n  while (data[length - 1] === 0) {\n    length--;\n  }\n\n  return toUtf8String(data.slice(0, length));\n}\n\n\"use strict\";\n\nfunction bytes2(data) {\n  if (data.length % 4 !== 0) {\n    throw new Error(\"bad data\");\n  }\n\n  let result = [];\n\n  for (let i = 0; i < data.length; i += 4) {\n    result.push(parseInt(data.substring(i, i + 4), 16));\n  }\n\n  return result;\n}\n\nfunction createTable(data, func) {\n  if (!func) {\n    func = function (value) {\n      return [parseInt(value, 16)];\n    };\n  }\n\n  let lo = 0;\n  let result = {};\n  data.split(\",\").forEach(pair => {\n    let comps = pair.split(\":\");\n    lo += parseInt(comps[0], 16);\n    result[lo] = func(comps[1]);\n  });\n  return result;\n}\n\nfunction createRangeTable(data) {\n  let hi = 0;\n  return data.split(\",\").map(v => {\n    let comps = v.split(\"-\");\n\n    if (comps.length === 1) {\n      comps[1] = \"0\";\n    } else if (comps[1] === \"\") {\n      comps[1] = \"1\";\n    }\n\n    let lo = hi + parseInt(comps[0], 16);\n    hi = parseInt(comps[1], 16);\n    return {\n      l: lo,\n      h: hi\n    };\n  });\n}\n\nfunction matchMap(value, ranges) {\n  let lo = 0;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let range = ranges[i];\n    lo += range.l;\n\n    if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {\n      if (range.e && range.e.indexOf(value - lo) !== -1) {\n        continue;\n      }\n\n      return range;\n    }\n  }\n\n  return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(_c = v => parseInt(v, 16));\n_c2 = Table_B_1_flags;\nconst Table_B_2_ranges = [{\n  h: 25,\n  s: 32,\n  l: 65\n}, {\n  h: 30,\n  s: 32,\n  e: [23],\n  l: 127\n}, {\n  h: 54,\n  s: 1,\n  e: [48],\n  l: 64,\n  d: 2\n}, {\n  h: 14,\n  s: 1,\n  l: 57,\n  d: 2\n}, {\n  h: 44,\n  s: 1,\n  l: 17,\n  d: 2\n}, {\n  h: 10,\n  s: 1,\n  e: [2, 6, 8],\n  l: 61,\n  d: 2\n}, {\n  h: 16,\n  s: 1,\n  l: 68,\n  d: 2\n}, {\n  h: 84,\n  s: 1,\n  e: [18, 24, 66],\n  l: 19,\n  d: 2\n}, {\n  h: 26,\n  s: 32,\n  e: [17],\n  l: 435\n}, {\n  h: 22,\n  s: 1,\n  l: 71,\n  d: 2\n}, {\n  h: 15,\n  s: 80,\n  l: 40\n}, {\n  h: 31,\n  s: 32,\n  l: 16\n}, {\n  h: 32,\n  s: 1,\n  l: 80,\n  d: 2\n}, {\n  h: 52,\n  s: 1,\n  l: 42,\n  d: 2\n}, {\n  h: 12,\n  s: 1,\n  l: 55,\n  d: 2\n}, {\n  h: 40,\n  s: 1,\n  e: [38],\n  l: 15,\n  d: 2\n}, {\n  h: 14,\n  s: 1,\n  l: 48,\n  d: 2\n}, {\n  h: 37,\n  s: 48,\n  l: 49\n}, {\n  h: 148,\n  s: 1,\n  l: 6351,\n  d: 2\n}, {\n  h: 88,\n  s: 1,\n  l: 160,\n  d: 2\n}, {\n  h: 15,\n  s: 16,\n  l: 704\n}, {\n  h: 25,\n  s: 26,\n  l: 854\n}, {\n  h: 25,\n  s: 32,\n  l: 55915\n}, {\n  h: 37,\n  s: 40,\n  l: 1247\n}, {\n  h: 25,\n  s: -119711,\n  l: 53248\n}, {\n  h: 25,\n  s: -119763,\n  l: 52\n}, {\n  h: 25,\n  s: -119815,\n  l: 52\n}, {\n  h: 25,\n  s: -119867,\n  e: [1, 4, 5, 7, 8, 11, 12, 17],\n  l: 52\n}, {\n  h: 25,\n  s: -119919,\n  l: 52\n}, {\n  h: 24,\n  s: -119971,\n  e: [2, 7, 8, 17],\n  l: 52\n}, {\n  h: 24,\n  s: -120023,\n  e: [2, 7, 13, 15, 16, 17],\n  l: 52\n}, {\n  h: 25,\n  s: -120075,\n  l: 52\n}, {\n  h: 25,\n  s: -120127,\n  l: 52\n}, {\n  h: 25,\n  s: -120179,\n  l: 52\n}, {\n  h: 25,\n  s: -120231,\n  l: 52\n}, {\n  h: 25,\n  s: -120283,\n  l: 52\n}, {\n  h: 25,\n  s: -120335,\n  l: 52\n}, {\n  h: 24,\n  s: -119543,\n  e: [17],\n  l: 56\n}, {\n  h: 24,\n  s: -119601,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119659,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119717,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119775,\n  e: [17],\n  l: 58\n}];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\nfunction flatten(values) {\n  return values.reduce((accum, value) => {\n    value.forEach(value => {\n      accum.push(value);\n    });\n    return accum;\n  }, []);\n}\n\nfunction _nameprepTableA1(codepoint) {\n  return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nfunction _nameprepTableB2(codepoint) {\n  let range = matchMap(codepoint, Table_B_2_ranges);\n\n  if (range) {\n    return [codepoint + range.s];\n  }\n\n  let codes = Table_B_2_lut_abs[codepoint];\n\n  if (codes) {\n    return codes;\n  }\n\n  let shift = Table_B_2_lut_rel[codepoint];\n\n  if (shift) {\n    return [codepoint + shift[0]];\n  }\n\n  let complex = Table_B_2_complex[codepoint];\n\n  if (complex) {\n    return complex;\n  }\n\n  return null;\n}\n\nfunction _nameprepTableC(codepoint) {\n  return !!matchMap(codepoint, Table_C_ranges);\n}\n\nfunction nameprep(value) {\n  if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n    return value.toLowerCase();\n  }\n\n  let codes = toUtf8CodePoints(value);\n  codes = flatten(codes.map(code => {\n    if (Table_B_1_flags.indexOf(code) >= 0) {\n      return [];\n    }\n\n    if (code >= 65024 && code <= 65039) {\n      return [];\n    }\n\n    let codesTableB2 = _nameprepTableB2(code);\n\n    if (codesTableB2) {\n      return codesTableB2;\n    }\n\n    return [code];\n  }));\n  codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n  codes.forEach(code => {\n    if (_nameprepTableC(code)) {\n      throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n    }\n  });\n  codes.forEach(code => {\n    if (_nameprepTableA1(code)) {\n      throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n    }\n  });\n\n  let name = _toUtf8String(codes);\n\n  if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n    throw new Error(\"invalid hyphen\");\n  }\n\n  if (name.length > 63) {\n    throw new Error(\"too long\");\n  }\n\n  return name;\n}\n\n\"use strict\";\n\n\"use strict\";\n\nclass StringCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"string\", localName);\n  }\n\n  defaultValue() {\n    return \"\";\n  }\n\n  encode(writer, value) {\n    return super.encode(writer, toUtf8Bytes(value));\n  }\n\n  decode(reader) {\n    return toUtf8String(super.decode(reader));\n  }\n\n}\n\n\"use strict\";\n\nclass TupleCoder extends Coder {\n  constructor(coders, localName) {\n    let dynamic = false;\n    const types = [];\n    coders.forEach(coder => {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n\n      types.push(coder.type);\n    });\n    const type = \"tuple(\" + types.join(\",\") + \")\";\n    super(\"tuple\", type, localName, dynamic);\n    this.coders = coders;\n  }\n\n  defaultValue() {\n    const values = [];\n    this.coders.forEach(coder => {\n      values.push(coder.defaultValue());\n    });\n    const uniqueNames = this.coders.reduce((accum, coder) => {\n      const name = coder.localName;\n\n      if (name) {\n        if (!accum[name]) {\n          accum[name] = 0;\n        }\n\n        accum[name]++;\n      }\n\n      return accum;\n    }, {});\n    this.coders.forEach((coder, index) => {\n      let name = coder.localName;\n\n      if (!name || uniqueNames[name] !== 1) {\n        return;\n      }\n\n      if (name === \"length\") {\n        name = \"_length\";\n      }\n\n      if (values[name] != null) {\n        return;\n      }\n\n      values[name] = values[index];\n    });\n    return Object.freeze(values);\n  }\n\n  encode(writer, value) {\n    return pack(writer, this.coders, value);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, unpack(reader, this.coders));\n  }\n\n}\n\n\"use strict\";\n\nconst logger$a = new Logger(version$4);\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\nclass AbiCoder {\n  constructor(coerceFunc) {\n    logger$a.checkNew(new.target, AbiCoder);\n    defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n  }\n\n  _getCoder(param) {\n    switch (param.baseType) {\n      case \"address\":\n        return new AddressCoder(param.name);\n\n      case \"bool\":\n        return new BooleanCoder(param.name);\n\n      case \"string\":\n        return new StringCoder(param.name);\n\n      case \"bytes\":\n        return new BytesCoder(param.name);\n\n      case \"array\":\n        return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n\n      case \"tuple\":\n        return new TupleCoder((param.components || []).map(component => {\n          return this._getCoder(component);\n        }), param.name);\n\n      case \"\":\n        return new NullCoder(param.name);\n    }\n\n    let match = param.type.match(paramTypeNumber);\n\n    if (match) {\n      let size = parseInt(match[2] || \"256\");\n\n      if (size === 0 || size > 256 || size % 8 !== 0) {\n        logger$a.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n      }\n\n      return new NumberCoder(size / 8, match[1] === \"int\", param.name);\n    }\n\n    match = param.type.match(paramTypeBytes);\n\n    if (match) {\n      let size = parseInt(match[1]);\n\n      if (size === 0 || size > 32) {\n        logger$a.throwArgumentError(\"invalid bytes length\", \"param\", param);\n      }\n\n      return new FixedBytesCoder(size, param.name);\n    }\n\n    return logger$a.throwArgumentError(\"invalid type\", \"type\", param.type);\n  }\n\n  _getWordSize() {\n    return 32;\n  }\n\n  _getReader(data, allowLoose) {\n    return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n  }\n\n  _getWriter() {\n    return new Writer(this._getWordSize());\n  }\n\n  getDefaultValue(types) {\n    const coders = types.map(type => this._getCoder(ParamType.from(type)));\n    const coder = new TupleCoder(coders, \"_\");\n    return coder.defaultValue();\n  }\n\n  encode(types, values) {\n    if (types.length !== values.length) {\n      logger$a.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n        count: {\n          types: types.length,\n          values: values.length\n        },\n        value: {\n          types: types,\n          values: values\n        }\n      });\n    }\n\n    const coders = types.map(type => this._getCoder(ParamType.from(type)));\n    const coder = new TupleCoder(coders, \"_\");\n\n    const writer = this._getWriter();\n\n    coder.encode(writer, values);\n    return writer.data;\n  }\n\n  decode(types, data, loose) {\n    const coders = types.map(type => this._getCoder(ParamType.from(type)));\n    const coder = new TupleCoder(coders, \"_\");\n    return coder.decode(this._getReader(arrayify(data), loose));\n  }\n\n}\n\nconst defaultAbiCoder = new AbiCoder();\n\nfunction id(text) {\n  return keccak256(toUtf8Bytes(text));\n}\n\nconst version$8 = \"hash/5.1.0\";\nconst logger$b = new Logger(version$8);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\n\nfunction isValidName(name) {\n  try {\n    const comps = name.split(\".\");\n\n    for (let i = 0; i < comps.length; i++) {\n      if (nameprep(comps[i]).length === 0) {\n        throw new Error(\"empty\");\n      }\n    }\n\n    return true;\n  } catch (error) {}\n\n  return false;\n}\n\nfunction namehash(name) {\n  if (typeof name !== \"string\") {\n    logger$b.throwArgumentError(\"invalid address - \" + String(name), \"name\", name);\n  }\n\n  let result = Zeros;\n\n  while (name.length) {\n    const partition = name.match(Partition);\n    const label = toUtf8Bytes(nameprep(partition[3]));\n    result = keccak256(concat([result, keccak256(label)]));\n    name = partition[2] || \"\";\n  }\n\n  return hexlify(result);\n}\n\nconst messagePrefix = \"\u0019Ethereum Signed Message:\\n\";\n\nfunction hashMessage(message) {\n  if (typeof message === \"string\") {\n    message = toUtf8Bytes(message);\n  }\n\n  return keccak256(concat([toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message]));\n}\n\nvar __awaiter$1 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$c = new Logger(version$8);\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne$2 = BigNumber.from(-1);\nconst Zero$2 = BigNumber.from(0);\nconst One$1 = BigNumber.from(1);\nconst MaxUint256$1 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value) {\n  const bytes = arrayify(value);\n  const padOffset = bytes.length % 32;\n\n  if (padOffset) {\n    return hexConcat([bytes, padding.slice(padOffset)]);\n  }\n\n  return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One$1.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero$2.toHexString(), 32);\nconst domainFieldTypes = {\n  name: \"string\",\n  version: \"string\",\n  chainId: \"uint256\",\n  verifyingContract: \"address\",\n  salt: \"bytes32\"\n};\nconst domainFieldNames = [\"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"];\n\nfunction checkString(key) {\n  return function (value) {\n    if (typeof value !== \"string\") {\n      logger$c.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n    }\n\n    return value;\n  };\n}\n\nconst domainChecks = {\n  name: checkString(\"name\"),\n  version: checkString(\"version\"),\n  chainId: function (value) {\n    try {\n      return BigNumber.from(value).toString();\n    } catch (error) {}\n\n    return logger$c.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n  },\n  verifyingContract: function (value) {\n    try {\n      return getAddress(value).toLowerCase();\n    } catch (error) {}\n\n    return logger$c.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n  },\n  salt: function (value) {\n    try {\n      const bytes = arrayify(value);\n\n      if (bytes.length !== 32) {\n        throw new Error(\"bad length\");\n      }\n\n      return hexlify(bytes);\n    } catch (error) {}\n\n    return logger$c.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n  }\n};\n\nfunction getBaseEncoder(type) {\n  {\n    const match = type.match(/^(u?)int(\\d*)$/);\n\n    if (match) {\n      const signed = match[1] === \"\";\n      const width = parseInt(match[2] || \"256\");\n\n      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {\n        logger$c.throwArgumentError(\"invalid numeric width\", \"type\", type);\n      }\n\n      const boundsUpper = MaxUint256$1.mask(signed ? width - 1 : width);\n      const boundsLower = signed ? boundsUpper.add(One$1).mul(NegativeOne$2) : Zero$2;\n      return function (value) {\n        const v = BigNumber.from(value);\n\n        if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n          logger$c.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n        }\n\n        return hexZeroPad(v.toTwos(256).toHexString(), 32);\n      };\n    }\n  }\n  {\n    const match = type.match(/^bytes(\\d+)$/);\n\n    if (match) {\n      const width = parseInt(match[1]);\n\n      if (width === 0 || width > 32 || match[1] !== String(width)) {\n        logger$c.throwArgumentError(\"invalid bytes width\", \"type\", type);\n      }\n\n      return function (value) {\n        const bytes = arrayify(value);\n\n        if (bytes.length !== width) {\n          logger$c.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n        }\n\n        return hexPadRight(value);\n      };\n    }\n  }\n\n  switch (type) {\n    case \"address\":\n      return function (value) {\n        return hexZeroPad(getAddress(value), 32);\n      };\n\n    case \"bool\":\n      return function (value) {\n        return !value ? hexFalse : hexTrue;\n      };\n\n    case \"bytes\":\n      return function (value) {\n        return keccak256(value);\n      };\n\n    case \"string\":\n      return function (value) {\n        return id(value);\n      };\n  }\n\n  return null;\n}\n\nfunction encodeType(name, fields) {\n  return `${name}(${fields.map(({\n    name: name,\n    type: type\n  }) => type + \" \" + name).join(\",\")})`;\n}\n\nclass TypedDataEncoder {\n  constructor(types) {\n    defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n    defineReadOnly(this, \"_encoderCache\", {});\n    defineReadOnly(this, \"_types\", {});\n    const links = {};\n    const parents = {};\n    const subtypes = {};\n    Object.keys(types).forEach(type => {\n      links[type] = {};\n      parents[type] = [];\n      subtypes[type] = {};\n    });\n\n    for (const name in types) {\n      const uniqueNames = {};\n      types[name].forEach(field => {\n        if (uniqueNames[field.name]) {\n          logger$c.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n        }\n\n        uniqueNames[field.name] = true;\n        const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n\n        if (baseType === name) {\n          logger$c.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n        }\n\n        const encoder = getBaseEncoder(baseType);\n\n        if (encoder) {\n          return;\n        }\n\n        if (!parents[baseType]) {\n          logger$c.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n        }\n\n        parents[baseType].push(name);\n        links[name][baseType] = true;\n      });\n    }\n\n    const primaryTypes = Object.keys(parents).filter(n => parents[n].length === 0);\n\n    if (primaryTypes.length === 0) {\n      logger$c.throwArgumentError(\"missing primary type\", \"types\", types);\n    } else if (primaryTypes.length > 1) {\n      logger$c.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map(t => JSON.stringify(t)).join(\", \")}`, \"types\", types);\n    }\n\n    defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n    function checkCircular(type, found) {\n      if (found[type]) {\n        logger$c.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n      }\n\n      found[type] = true;\n      Object.keys(links[type]).forEach(child => {\n        if (!parents[child]) {\n          return;\n        }\n\n        checkCircular(child, found);\n        Object.keys(found).forEach(subtype => {\n          subtypes[subtype][child] = true;\n        });\n      });\n      delete found[type];\n    }\n\n    checkCircular(this.primaryType, {});\n\n    for (const name in subtypes) {\n      const st = Object.keys(subtypes[name]);\n      st.sort();\n      this._types[name] = encodeType(name, types[name]) + st.map(t => encodeType(t, types[t])).join(\"\");\n    }\n  }\n\n  getEncoder(type) {\n    let encoder = this._encoderCache[type];\n\n    if (!encoder) {\n      encoder = this._encoderCache[type] = this._getEncoder(type);\n    }\n\n    return encoder;\n  }\n\n  _getEncoder(type) {\n    {\n      const encoder = getBaseEncoder(type);\n\n      if (encoder) {\n        return encoder;\n      }\n    }\n    const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n\n    if (match) {\n      const subtype = match[1];\n      const subEncoder = this.getEncoder(subtype);\n      const length = parseInt(match[3]);\n      return value => {\n        if (length >= 0 && value.length !== length) {\n          logger$c.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n        }\n\n        let result = value.map(subEncoder);\n\n        if (this._types[subtype]) {\n          result = result.map(keccak256);\n        }\n\n        return keccak256(hexConcat(result));\n      };\n    }\n\n    const fields = this.types[type];\n\n    if (fields) {\n      const encodedType = id(this._types[type]);\n      return value => {\n        const values = fields.map(({\n          name: name,\n          type: type\n        }) => {\n          const result = this.getEncoder(type)(value[name]);\n\n          if (this._types[type]) {\n            return keccak256(result);\n          }\n\n          return result;\n        });\n        values.unshift(encodedType);\n        return hexConcat(values);\n      };\n    }\n\n    return logger$c.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n  }\n\n  encodeType(name) {\n    const result = this._types[name];\n\n    if (!result) {\n      logger$c.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n    }\n\n    return result;\n  }\n\n  encodeData(type, value) {\n    return this.getEncoder(type)(value);\n  }\n\n  hashStruct(name, value) {\n    return keccak256(this.encodeData(name, value));\n  }\n\n  encode(value) {\n    return this.encodeData(this.primaryType, value);\n  }\n\n  hash(value) {\n    return this.hashStruct(this.primaryType, value);\n  }\n\n  _visit(type, value, callback) {\n    {\n      const encoder = getBaseEncoder(type);\n\n      if (encoder) {\n        return callback(type, value);\n      }\n    }\n    const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n\n    if (match) {\n      const subtype = match[1];\n      const length = parseInt(match[3]);\n\n      if (length >= 0 && value.length !== length) {\n        logger$c.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n      }\n\n      return value.map(v => this._visit(subtype, v, callback));\n    }\n\n    const fields = this.types[type];\n\n    if (fields) {\n      return fields.reduce((accum, {\n        name: name,\n        type: type\n      }) => {\n        accum[name] = this._visit(type, value[name], callback);\n        return accum;\n      }, {});\n    }\n\n    return logger$c.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n  }\n\n  visit(value, callback) {\n    return this._visit(this.primaryType, value, callback);\n  }\n\n  static from(types) {\n    return new TypedDataEncoder(types);\n  }\n\n  static getPrimaryType(types) {\n    return TypedDataEncoder.from(types).primaryType;\n  }\n\n  static hashStruct(name, types, value) {\n    return TypedDataEncoder.from(types).hashStruct(name, value);\n  }\n\n  static hashDomain(domain) {\n    const domainFields = [];\n\n    for (const name in domain) {\n      const type = domainFieldTypes[name];\n\n      if (!type) {\n        logger$c.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n      }\n\n      domainFields.push({\n        name: name,\n        type: type\n      });\n    }\n\n    domainFields.sort((a, b) => {\n      return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n    });\n    return TypedDataEncoder.hashStruct(\"EIP712Domain\", {\n      EIP712Domain: domainFields\n    }, domain);\n  }\n\n  static encode(domain, types, value) {\n    return hexConcat([\"0x1901\", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);\n  }\n\n  static hash(domain, types, value) {\n    return keccak256(TypedDataEncoder.encode(domain, types, value));\n  }\n\n  static resolveNames(domain, types, value, resolveName) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      domain = shallowCopy(domain);\n      const ensCache = {};\n\n      if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n        ensCache[domain.verifyingContract] = \"0x\";\n      }\n\n      const encoder = TypedDataEncoder.from(types);\n      encoder.visit(value, (type, value) => {\n        if (type === \"address\" && !isHexString(value, 20)) {\n          ensCache[value] = \"0x\";\n        }\n\n        return value;\n      });\n\n      for (const name in ensCache) {\n        ensCache[name] = yield resolveName(name);\n      }\n\n      if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n        domain.verifyingContract = ensCache[domain.verifyingContract];\n      }\n\n      value = encoder.visit(value, (type, value) => {\n        if (type === \"address\" && ensCache[value]) {\n          return ensCache[value];\n        }\n\n        return value;\n      });\n      return {\n        domain: domain,\n        value: value\n      };\n    });\n  }\n\n  static getPayload(domain, types, value) {\n    TypedDataEncoder.hashDomain(domain);\n    const domainValues = {};\n    const domainTypes = [];\n    domainFieldNames.forEach(name => {\n      const value = domain[name];\n\n      if (value == null) {\n        return;\n      }\n\n      domainValues[name] = domainChecks[name](value);\n      domainTypes.push({\n        name: name,\n        type: domainFieldTypes[name]\n      });\n    });\n    const encoder = TypedDataEncoder.from(types);\n    const typesWithDomain = shallowCopy(types);\n\n    if (typesWithDomain.EIP712Domain) {\n      logger$c.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n    } else {\n      typesWithDomain.EIP712Domain = domainTypes;\n    }\n\n    encoder.encode(value);\n    return {\n      types: typesWithDomain,\n      domain: domainValues,\n      primaryType: encoder.primaryType,\n      message: encoder.visit(value, (type, value) => {\n        if (type.match(/^bytes(\\d*)/)) {\n          return hexlify(arrayify(value));\n        }\n\n        if (type.match(/^u?int/)) {\n          return BigNumber.from(value).toString();\n        }\n\n        switch (type) {\n          case \"address\":\n            return value.toLowerCase();\n\n          case \"bool\":\n            return !!value;\n\n          case \"string\":\n            if (typeof value !== \"string\") {\n              logger$c.throwArgumentError(`invalid string`, \"value\", value);\n            }\n\n            return value;\n        }\n\n        return logger$c.throwArgumentError(\"unsupported type\", \"type\", type);\n      })\n    };\n  }\n\n}\n\n\"use strict\";\n\n\"use strict\";\n\nconst logger$d = new Logger(version$4);\n\nclass LogDescription extends Description {}\n\nclass TransactionDescription extends Description {}\n\nclass Indexed extends Description {\n  static isIndexed(value) {\n    return !!(value && value._isIndexed);\n  }\n\n}\n\nfunction wrapAccessError(property, error) {\n  const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n  wrap.error = error;\n  return wrap;\n}\n\nclass Interface {\n  constructor(fragments) {\n    logger$d.checkNew(new.target, Interface);\n    let abi = [];\n\n    if (typeof fragments === \"string\") {\n      abi = JSON.parse(fragments);\n    } else {\n      abi = fragments;\n    }\n\n    defineReadOnly(this, \"fragments\", abi.map(fragment => {\n      return Fragment.from(fragment);\n    }).filter(fragment => fragment != null));\n    defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"errors\", {});\n    defineReadOnly(this, \"events\", {});\n    defineReadOnly(this, \"structs\", {});\n    this.fragments.forEach(fragment => {\n      let bucket = null;\n\n      switch (fragment.type) {\n        case \"constructor\":\n          if (this.deploy) {\n            logger$d.warn(\"duplicate definition - constructor\");\n            return;\n          }\n\n          defineReadOnly(this, \"deploy\", fragment);\n          return;\n\n        case \"function\":\n          bucket = this.functions;\n          break;\n\n        case \"event\":\n          bucket = this.events;\n          break;\n\n        default:\n          return;\n      }\n\n      let signature = fragment.format();\n\n      if (bucket[signature]) {\n        logger$d.warn(\"duplicate definition - \" + signature);\n        return;\n      }\n\n      bucket[signature] = fragment;\n    });\n\n    if (!this.deploy) {\n      defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n        payable: false,\n        type: \"constructor\"\n      }));\n    }\n\n    defineReadOnly(this, \"_isInterface\", true);\n  }\n\n  format(format) {\n    if (!format) {\n      format = FormatTypes.full;\n    }\n\n    if (format === FormatTypes.sighash) {\n      logger$d.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n    }\n\n    const abi = this.fragments.map(fragment => fragment.format(format));\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify(abi.map(j => JSON.parse(j)));\n    }\n\n    return abi;\n  }\n\n  static getAbiCoder() {\n    return defaultAbiCoder;\n  }\n\n  static getAddress(address) {\n    return getAddress(address);\n  }\n\n  static getSighash(functionFragment) {\n    return hexDataSlice(id(functionFragment.format()), 0, 4);\n  }\n\n  static getEventTopic(eventFragment) {\n    return id(eventFragment.format());\n  }\n\n  getFunction(nameOrSignatureOrSighash) {\n    if (isHexString(nameOrSignatureOrSighash)) {\n      for (const name in this.functions) {\n        if (nameOrSignatureOrSighash === this.getSighash(name)) {\n          return this.functions[name];\n        }\n      }\n\n      logger$d.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n    }\n\n    if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrSighash.trim();\n      const matching = Object.keys(this.functions).filter(f => f.split(\"(\")[0] === name);\n\n      if (matching.length === 0) {\n        logger$d.throwArgumentError(\"no matching function\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger$d.throwArgumentError(\"multiple matching functions\", \"name\", name);\n      }\n\n      return this.functions[matching[0]];\n    }\n\n    const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n\n    if (!result) {\n      logger$d.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n    }\n\n    return result;\n  }\n\n  getEvent(nameOrSignatureOrTopic) {\n    if (isHexString(nameOrSignatureOrTopic)) {\n      const topichash = nameOrSignatureOrTopic.toLowerCase();\n\n      for (const name in this.events) {\n        if (topichash === this.getEventTopic(name)) {\n          return this.events[name];\n        }\n      }\n\n      logger$d.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n    }\n\n    if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrTopic.trim();\n      const matching = Object.keys(this.events).filter(f => f.split(\"(\")[0] === name);\n\n      if (matching.length === 0) {\n        logger$d.throwArgumentError(\"no matching event\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger$d.throwArgumentError(\"multiple matching events\", \"name\", name);\n      }\n\n      return this.events[matching[0]];\n    }\n\n    const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n\n    if (!result) {\n      logger$d.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n    }\n\n    return result;\n  }\n\n  getSighash(functionFragment) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return getStatic(this.constructor, \"getSighash\")(functionFragment);\n  }\n\n  getEventTopic(eventFragment) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n  }\n\n  _decodeParams(params, data) {\n    return this._abiCoder.decode(params, data);\n  }\n\n  _encodeParams(params, values) {\n    return this._abiCoder.encode(params, values);\n  }\n\n  encodeDeploy(values) {\n    return this._encodeParams(this.deploy.inputs, values || []);\n  }\n\n  decodeFunctionData(functionFragment, data) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    const bytes = arrayify(data);\n\n    if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n      logger$d.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n    }\n\n    return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n  }\n\n  encodeFunctionData(functionFragment, values) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return hexlify(concat([this.getSighash(functionFragment), this._encodeParams(functionFragment.inputs, values || [])]));\n  }\n\n  decodeFunctionResult(functionFragment, data) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    let bytes = arrayify(data);\n    let reason = null;\n    let errorSignature = null;\n\n    switch (bytes.length % this._abiCoder._getWordSize()) {\n      case 0:\n        try {\n          return this._abiCoder.decode(functionFragment.outputs, bytes);\n        } catch (error) {}\n\n        break;\n\n      case 4:\n        if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n          errorSignature = \"Error(string)\";\n          reason = this._abiCoder.decode([\"string\"], bytes.slice(4))[0];\n        }\n\n        break;\n    }\n\n    return logger$d.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n      method: functionFragment.format(),\n      errorSignature: errorSignature,\n      errorArgs: [reason],\n      reason: reason\n    });\n  }\n\n  encodeFunctionResult(functionFragment, values) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n  }\n\n  encodeFilterTopics(eventFragment, values) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    if (values.length > eventFragment.inputs.length) {\n      logger$d.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n        argument: \"values\",\n        value: values\n      });\n    }\n\n    let topics = [];\n\n    if (!eventFragment.anonymous) {\n      topics.push(this.getEventTopic(eventFragment));\n    }\n\n    const encodeTopic = (param, value) => {\n      if (param.type === \"string\") {\n        return id(value);\n      } else if (param.type === \"bytes\") {\n        return keccak256(hexlify(value));\n      }\n\n      if (param.type === \"address\") {\n        this._abiCoder.encode([\"address\"], [value]);\n      }\n\n      return hexZeroPad(hexlify(value), 32);\n    };\n\n    values.forEach((value, index) => {\n      let param = eventFragment.inputs[index];\n\n      if (!param.indexed) {\n        if (value != null) {\n          logger$d.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", \"contract.\" + param.name, value);\n        }\n\n        return;\n      }\n\n      if (value == null) {\n        topics.push(null);\n      } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n        logger$d.throwArgumentError(\"filtering with tuples or arrays not supported\", \"contract.\" + param.name, value);\n      } else if (Array.isArray(value)) {\n        topics.push(value.map(value => encodeTopic(param, value)));\n      } else {\n        topics.push(encodeTopic(param, value));\n      }\n    });\n\n    while (topics.length && topics[topics.length - 1] === null) {\n      topics.pop();\n    }\n\n    return topics;\n  }\n\n  encodeEventLog(eventFragment, values) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    const topics = [];\n    const dataTypes = [];\n    const dataValues = [];\n\n    if (!eventFragment.anonymous) {\n      topics.push(this.getEventTopic(eventFragment));\n    }\n\n    if (values.length !== eventFragment.inputs.length) {\n      logger$d.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n    }\n\n    eventFragment.inputs.forEach((param, index) => {\n      const value = values[index];\n\n      if (param.indexed) {\n        if (param.type === \"string\") {\n          topics.push(id(value));\n        } else if (param.type === \"bytes\") {\n          topics.push(keccak256(value));\n        } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n          throw new Error(\"not implemented\");\n        } else {\n          topics.push(this._abiCoder.encode([param.type], [value]));\n        }\n      } else {\n        dataTypes.push(param);\n        dataValues.push(value);\n      }\n    });\n    return {\n      data: this._abiCoder.encode(dataTypes, dataValues),\n      topics: topics\n    };\n  }\n\n  decodeEventLog(eventFragment, data, topics) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    if (topics != null && !eventFragment.anonymous) {\n      let topicHash = this.getEventTopic(eventFragment);\n\n      if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n        logger$d.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"topics[0]\",\n          expected: topicHash,\n          value: topics[0]\n        });\n      }\n\n      topics = topics.slice(1);\n    }\n\n    let indexed = [];\n    let nonIndexed = [];\n    let dynamic = [];\n    eventFragment.inputs.forEach((param, index) => {\n      if (param.indexed) {\n        if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n          indexed.push(ParamType.fromObject({\n            type: \"bytes32\",\n            name: param.name\n          }));\n          dynamic.push(true);\n        } else {\n          indexed.push(param);\n          dynamic.push(false);\n        }\n      } else {\n        nonIndexed.push(param);\n        dynamic.push(false);\n      }\n    });\n    let resultIndexed = topics != null ? this._abiCoder.decode(indexed, concat(topics)) : null;\n\n    let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n    let result = [];\n    let nonIndexedIndex = 0,\n        indexedIndex = 0;\n    eventFragment.inputs.forEach((param, index) => {\n      if (param.indexed) {\n        if (resultIndexed == null) {\n          result[index] = new Indexed({\n            _isIndexed: true,\n            hash: null\n          });\n        } else if (dynamic[index]) {\n          result[index] = new Indexed({\n            _isIndexed: true,\n            hash: resultIndexed[indexedIndex++]\n          });\n        } else {\n          try {\n            result[index] = resultIndexed[indexedIndex++];\n          } catch (error) {\n            result[index] = error;\n          }\n        }\n      } else {\n        try {\n          result[index] = resultNonIndexed[nonIndexedIndex++];\n        } catch (error) {\n          result[index] = error;\n        }\n      }\n\n      if (param.name && result[param.name] == null) {\n        const value = result[index];\n\n        if (value instanceof Error) {\n          Object.defineProperty(result, param.name, {\n            get: () => {\n              throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value);\n            }\n          });\n        } else {\n          result[param.name] = value;\n        }\n      }\n    });\n\n    for (let i = 0; i < result.length; i++) {\n      const value = result[i];\n\n      if (value instanceof Error) {\n        Object.defineProperty(result, i, {\n          get: () => {\n            throw wrapAccessError(`index ${i}`, value);\n          }\n        });\n      }\n    }\n\n    return Object.freeze(result);\n  }\n\n  parseTransaction(tx) {\n    let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n\n    if (!fragment) {\n      return null;\n    }\n\n    return new TransactionDescription({\n      args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n      functionFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      sighash: this.getSighash(fragment),\n      value: BigNumber.from(tx.value || \"0\")\n    });\n  }\n\n  parseLog(log) {\n    let fragment = this.getEvent(log.topics[0]);\n\n    if (!fragment || fragment.anonymous) {\n      return null;\n    }\n\n    return new LogDescription({\n      eventFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      topic: this.getEventTopic(fragment),\n      args: this.decodeEventLog(fragment, log.data, log.topics)\n    });\n  }\n\n  static isInterface(value) {\n    return !!(value && value._isInterface);\n  }\n\n}\n\n\"use strict\";\n\nconst version$9 = \"abstract-provider/5.1.0\";\n\"use strict\";\n\nconst logger$e = new Logger(version$9);\n\nclass ForkEvent extends Description {\n  static isForkEvent(value) {\n    return !!(value && value._isForkEvent);\n  }\n\n}\n\nclass BlockForkEvent extends ForkEvent {\n  constructor(blockHash, expiry) {\n    if (!isHexString(blockHash, 32)) {\n      logger$e.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n    }\n\n    super({\n      _isForkEvent: true,\n      _isBlockForkEvent: true,\n      expiry: expiry || 0,\n      blockHash: blockHash\n    });\n  }\n\n}\n\nclass TransactionForkEvent extends ForkEvent {\n  constructor(hash, expiry) {\n    if (!isHexString(hash, 32)) {\n      logger$e.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n    }\n\n    super({\n      _isForkEvent: true,\n      _isTransactionForkEvent: true,\n      expiry: expiry || 0,\n      hash: hash\n    });\n  }\n\n}\n\nclass TransactionOrderForkEvent extends ForkEvent {\n  constructor(beforeHash, afterHash, expiry) {\n    if (!isHexString(beforeHash, 32)) {\n      logger$e.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n    }\n\n    if (!isHexString(afterHash, 32)) {\n      logger$e.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n    }\n\n    super({\n      _isForkEvent: true,\n      _isTransactionOrderForkEvent: true,\n      expiry: expiry || 0,\n      beforeHash: beforeHash,\n      afterHash: afterHash\n    });\n  }\n\n}\n\nclass Provider {\n  constructor() {\n    logger$e.checkAbstract(new.target, Provider);\n    defineReadOnly(this, \"_isProvider\", true);\n  }\n\n  addListener(eventName, listener) {\n    return this.on(eventName, listener);\n  }\n\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n\n  static isProvider(value) {\n    return !!(value && value._isProvider);\n  }\n\n}\n\nconst version$a = \"abstract-signer/5.1.0\";\n\"use strict\";\n\nvar __awaiter$2 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$f = new Logger(version$a);\nconst allowedTransactionKeys = [\"accessList\", \"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"nonce\", \"to\", \"type\", \"value\"];\nconst forwardErrors = [Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED];\n\nclass Signer {\n  constructor() {\n    logger$f.checkAbstract(new.target, Signer);\n    defineReadOnly(this, \"_isSigner\", true);\n  }\n\n  getBalance(blockTag) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      this._checkProvider(\"getBalance\");\n\n      return yield this.provider.getBalance(this.getAddress(), blockTag);\n    });\n  }\n\n  getTransactionCount(blockTag) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      this._checkProvider(\"getTransactionCount\");\n\n      return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n    });\n  }\n\n  estimateGas(transaction) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      this._checkProvider(\"estimateGas\");\n\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n      return yield this.provider.estimateGas(tx);\n    });\n  }\n\n  call(transaction, blockTag) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      this._checkProvider(\"call\");\n\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n      return yield this.provider.call(tx, blockTag);\n    });\n  }\n\n  sendTransaction(transaction) {\n    this._checkProvider(\"sendTransaction\");\n\n    return this.populateTransaction(transaction).then(tx => {\n      return this.signTransaction(tx).then(signedTx => {\n        return this.provider.sendTransaction(signedTx);\n      });\n    });\n  }\n\n  getChainId() {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      this._checkProvider(\"getChainId\");\n\n      const network = yield this.provider.getNetwork();\n      return network.chainId;\n    });\n  }\n\n  getGasPrice() {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      this._checkProvider(\"getGasPrice\");\n\n      return yield this.provider.getGasPrice();\n    });\n  }\n\n  resolveName(name) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      this._checkProvider(\"resolveName\");\n\n      return yield this.provider.resolveName(name);\n    });\n  }\n\n  checkTransaction(transaction) {\n    for (const key in transaction) {\n      if (allowedTransactionKeys.indexOf(key) === -1) {\n        logger$f.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n      }\n    }\n\n    const tx = shallowCopy(transaction);\n\n    if (tx.from == null) {\n      tx.from = this.getAddress();\n    } else {\n      tx.from = Promise.all([Promise.resolve(tx.from), this.getAddress()]).then(result => {\n        if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n          logger$f.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n\n        return result[0];\n      });\n    }\n\n    return tx;\n  }\n\n  populateTransaction(transaction) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n\n      if (tx.to != null) {\n        tx.to = Promise.resolve(tx.to).then(to => __awaiter$2(this, void 0, void 0, function* () {\n          if (to == null) {\n            return null;\n          }\n\n          const address = yield this.resolveName(to);\n\n          if (address == null) {\n            logger$f.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n          }\n\n          return address;\n        }));\n      }\n\n      if (tx.gasPrice == null) {\n        tx.gasPrice = this.getGasPrice();\n      }\n\n      if (tx.nonce == null) {\n        tx.nonce = this.getTransactionCount(\"pending\");\n      }\n\n      if (tx.gasLimit == null) {\n        tx.gasLimit = this.estimateGas(tx).catch(error => {\n          if (forwardErrors.indexOf(error.code) >= 0) {\n            throw error;\n          }\n\n          return logger$f.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error: error,\n            tx: tx\n          });\n        });\n      }\n\n      if (tx.chainId == null) {\n        tx.chainId = this.getChainId();\n      } else {\n        tx.chainId = Promise.all([Promise.resolve(tx.chainId), this.getChainId()]).then(results => {\n          if (results[1] !== 0 && results[0] !== results[1]) {\n            logger$f.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n          }\n\n          return results[0];\n        });\n      }\n\n      return yield resolveProperties(tx);\n    });\n  }\n\n  _checkProvider(operation) {\n    if (!this.provider) {\n      logger$f.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: operation || \"_checkProvider\"\n      });\n    }\n  }\n\n  static isSigner(value) {\n    return !!(value && value._isSigner);\n  }\n\n}\n\nclass VoidSigner extends Signer {\n  constructor(address, provider) {\n    logger$f.checkNew(new.target, VoidSigner);\n    super();\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"provider\", provider || null);\n  }\n\n  getAddress() {\n    return Promise.resolve(this.address);\n  }\n\n  _fail(message, operation) {\n    return Promise.resolve().then(() => {\n      logger$f.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: operation\n      });\n    });\n  }\n\n  signMessage(message) {\n    return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n  }\n\n  signTransaction(transaction) {\n    return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n  }\n\n  _signTypedData(domain, types, value) {\n    return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n  }\n\n  connect(provider) {\n    return new VoidSigner(this.address, provider);\n  }\n\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || \"Assertion failed\");\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || \"Assertion failed: \" + l + \" != \" + r);\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === \"function\") {\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\nvar inherits = createCommonjsModule(function (module) {\n  try {\n    var util = null;\n    if (typeof util.inherits !== \"function\") throw \"\";\n    module.exports = util.inherits;\n  } catch (e) {\n    module.exports = inherits_browser;\n  }\n});\n\"use strict\";\n\nvar inherits_1 = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg === \"string\") {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 255;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    } else if (enc === \"hex\") {\n      msg = msg.replace(/[^a-z0-9]+/gi, \"\");\n      if (msg.length % 2 !== 0) msg = \"0\" + msg;\n\n      for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n  }\n\n  return res;\n}\n\nvar toArray_1 = toArray;\n\nfunction toHex$1(msg) {\n  var res = \"\";\n\n  for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n  return res;\n}\n\nvar toHex_1 = toHex$1;\n\nfunction htonl(w) {\n  var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;\n  return res >>> 0;\n}\n\nvar htonl_1 = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = \"\";\n\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === \"little\") w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n\n  return res;\n}\n\nvar toHex32_1 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1) return \"0\" + word;else return word;\n}\n\nvar zero2_1 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7) return \"0\" + word;else if (word.length === 6) return \"00\" + word;else if (word.length === 5) return \"000\" + word;else if (word.length === 4) return \"0000\" + word;else if (word.length === 3) return \"00000\" + word;else if (word.length === 2) return \"000000\" + word;else if (word.length === 1) return \"0000000\" + word;else return word;\n}\n\nvar zero8_1 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  minimalisticAssert(len % 4 === 0);\n  var res = new Array(len / 4);\n\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === \"big\") w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n    res[i] = w >>> 0;\n  }\n\n  return res;\n}\n\nvar join32_1 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n\n    if (endian === \"big\") {\n      res[k] = m >>> 24;\n      res[k + 1] = m >>> 16 & 255;\n      res[k + 2] = m >>> 8 & 255;\n      res[k + 3] = m & 255;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = m >>> 16 & 255;\n      res[k + 1] = m >>> 8 & 255;\n      res[k] = m & 255;\n    }\n  }\n\n  return res;\n}\n\nvar split32_1 = split32;\n\nfunction rotr32(w, b) {\n  return w >>> b | w << 32 - b;\n}\n\nvar rotr32_1 = rotr32;\n\nfunction rotl32(w, b) {\n  return w << b | w >>> 32 - b;\n}\n\nvar rotl32_1 = rotl32;\n\nfunction sum32(a, b) {\n  return a + b >>> 0;\n}\n\nvar sum32_1 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return a + b + c >>> 0;\n}\n\nvar sum32_3_1 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return a + b + c + d >>> 0;\n}\n\nvar sum32_4_1 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return a + b + c + d + e >>> 0;\n}\n\nvar sum32_5_1 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nvar sum64_1 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\n\nvar sum64_hi_1 = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\n\nvar sum64_lo_1 = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\n\nvar sum64_4_hi_1 = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nvar sum64_4_lo_1 = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = lo + el >>> 0;\n  carry += lo < el ? 1 : 0;\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\n\nvar sum64_5_hi_1 = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nvar sum64_5_lo_1 = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = al << 32 - num | ah >>> num;\n  return r >>> 0;\n}\n\nvar rotr64_hi_1 = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nvar rotr64_lo_1 = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nvar shr64_hi_1 = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nvar shr64_lo_1 = shr64_lo;\nvar utils = {\n  inherits: inherits_1,\n  toArray: toArray_1,\n  toHex: toHex_1,\n  htonl: htonl_1,\n  toHex32: toHex32_1,\n  zero2: zero2_1,\n  zero8: zero8_1,\n  join32: join32_1,\n  split32: split32_1,\n  rotr32: rotr32_1,\n  rotl32: rotl32_1,\n  sum32: sum32_1,\n  sum32_3: sum32_3_1,\n  sum32_4: sum32_4_1,\n  sum32_5: sum32_5_1,\n  sum64: sum64_1,\n  sum64_hi: sum64_hi_1,\n  sum64_lo: sum64_lo_1,\n  sum64_4_hi: sum64_4_hi_1,\n  sum64_4_lo: sum64_4_lo_1,\n  sum64_5_hi: sum64_5_hi_1,\n  sum64_5_lo: sum64_5_lo_1,\n  rotr64_hi: rotr64_hi_1,\n  rotr64_lo: rotr64_lo_1,\n  shr64_hi: shr64_hi_1,\n  shr64_lo: shr64_lo_1\n};\n\"use strict\";\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = \"big\";\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\n\n_c3 = BlockHash;\nvar BlockHash_1 = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n    for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  minimalisticAssert(this.pending === null);\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 128;\n\n  for (var i = 1; i < k; i++) res[i] = 0;\n\n  len <<= 3;\n\n  if (this.endian === \"big\") {\n    for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 255;\n    res[i++] = len >>> 16 & 255;\n    res[i++] = len >>> 8 & 255;\n    res[i++] = len & 255;\n  } else {\n    res[i++] = len & 255;\n    res[i++] = len >>> 8 & 255;\n    res[i++] = len >>> 16 & 255;\n    res[i++] = len >>> 24 & 255;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++) res[i++] = 0;\n  }\n\n  return res;\n};\n\nvar common = {\n  BlockHash: BlockHash_1\n};\n\"use strict\";\n\nvar rotr32$1 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0) return ch32(x, y, z);\n  if (s === 1 || s === 3) return p32(x, y, z);\n  if (s === 2) return maj32(x, y, z);\n}\n\nvar ft_1_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nvar ch32_1 = ch32;\n\nfunction maj32(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nvar maj32_1 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nvar p32_1 = p32;\n\nfunction s0_256(x) {\n  return rotr32$1(x, 2) ^ rotr32$1(x, 13) ^ rotr32$1(x, 22);\n}\n\nvar s0_256_1 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32$1(x, 6) ^ rotr32$1(x, 11) ^ rotr32$1(x, 25);\n}\n\nvar s1_256_1 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32$1(x, 7) ^ rotr32$1(x, 18) ^ x >>> 3;\n}\n\nvar g0_256_1 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32$1(x, 17) ^ rotr32$1(x, 19) ^ x >>> 10;\n}\n\nvar g1_256_1 = g1_256;\nvar common$1 = {\n  ft_1: ft_1_1,\n  ch32: ch32_1,\n  maj32: maj32_1,\n  p32: p32_1,\n  s0_256: s0_256_1,\n  s1_256: s1_256_1,\n  g0_256: g0_256_1,\n  g1_256: g1_256_1\n};\n\"use strict\";\n\nvar rotl32$1 = utils.rotl32;\nvar sum32$1 = utils.sum32;\nvar sum32_5$1 = utils.sum32_5;\nvar ft_1$1 = common$1.ft_1;\nvar BlockHash$1 = common.BlockHash;\nvar sha1_K = [1518500249, 1859775393, 2400959708, 3395469782];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1)) return new SHA1();\n  BlockHash$1.call(this);\n  this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  this.W = new Array(80);\n}\n\n_c4 = SHA1;\nutils.inherits(SHA1, BlockHash$1);\nvar _1 = SHA1;\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5$1(rotl32$1(a, 5), ft_1$1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32$1(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32$1(this.h[0], a);\n  this.h[1] = sum32$1(this.h[1], b);\n  this.h[2] = sum32$1(this.h[2], c);\n  this.h[3] = sum32$1(this.h[3], d);\n  this.h[4] = sum32$1(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === \"hex\") return utils.toHex32(this.h, \"big\");else return utils.split32(this.h, \"big\");\n};\n\n\"use strict\";\n\nvar sum32$2 = utils.sum32;\nvar sum32_4$1 = utils.sum32_4;\nvar sum32_5$2 = utils.sum32_5;\nvar ch32$1 = common$1.ch32;\nvar maj32$1 = common$1.maj32;\nvar s0_256$1 = common$1.s0_256;\nvar s1_256$1 = common$1.s1_256;\nvar g0_256$1 = common$1.g0_256;\nvar g1_256$1 = common$1.g1_256;\nvar BlockHash$2 = common.BlockHash;\nvar sha256_K = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256)) return new SHA256();\n  BlockHash$2.call(this);\n  this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\n\n_c5 = SHA256;\nutils.inherits(SHA256, BlockHash$2);\nvar _256 = SHA256;\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = sum32_4$1(g1_256$1(W[i - 2]), W[i - 7], g0_256$1(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n  minimalisticAssert(this.k.length === W.length);\n\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5$2(h, s1_256$1(e), ch32$1(e, f, g), this.k[i], W[i]);\n    var T2 = sum32$2(s0_256$1(a), maj32$1(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32$2(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32$2(T1, T2);\n  }\n\n  this.h[0] = sum32$2(this.h[0], a);\n  this.h[1] = sum32$2(this.h[1], b);\n  this.h[2] = sum32$2(this.h[2], c);\n  this.h[3] = sum32$2(this.h[3], d);\n  this.h[4] = sum32$2(this.h[4], e);\n  this.h[5] = sum32$2(this.h[5], f);\n  this.h[6] = sum32$2(this.h[6], g);\n  this.h[7] = sum32$2(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === \"hex\") return utils.toHex32(this.h, \"big\");else return utils.split32(this.h, \"big\");\n};\n\n\"use strict\";\n\nfunction SHA224() {\n  if (!(this instanceof SHA224)) return new SHA224();\n\n  _256.call(this);\n\n  this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];\n}\n\n_c6 = SHA224;\nutils.inherits(SHA224, _256);\nvar _224 = SHA224;\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  if (enc === \"hex\") return utils.toHex32(this.h.slice(0, 7), \"big\");else return utils.split32(this.h.slice(0, 7), \"big\");\n};\n\n\"use strict\";\n\nvar rotr64_hi$1 = utils.rotr64_hi;\nvar rotr64_lo$1 = utils.rotr64_lo;\nvar shr64_hi$1 = utils.shr64_hi;\nvar shr64_lo$1 = utils.shr64_lo;\nvar sum64$1 = utils.sum64;\nvar sum64_hi$1 = utils.sum64_hi;\nvar sum64_lo$1 = utils.sum64_lo;\nvar sum64_4_hi$1 = utils.sum64_4_hi;\nvar sum64_4_lo$1 = utils.sum64_4_lo;\nvar sum64_5_hi$1 = utils.sum64_5_hi;\nvar sum64_5_lo$1 = utils.sum64_5_lo;\nvar BlockHash$3 = common.BlockHash;\nvar sha512_K = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512)) return new SHA512();\n  BlockHash$3.call(this);\n  this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\n\n_c7 = SHA512;\nutils.inherits(SHA512, BlockHash$3);\nvar _512 = SHA512;\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 32; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];\n    var c3_lo = W[i - 31];\n    W[i] = sum64_4_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n  minimalisticAssert(this.k.length === W.length);\n\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n    var T1_hi = sum64_5_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n    var T2_hi = sum64_hi$1(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo$1(c0_hi, c0_lo, c1_hi, c1_lo);\n    hh = gh;\n    hl = gl;\n    gh = fh;\n    gl = fl;\n    fh = eh;\n    fl = el;\n    eh = sum64_hi$1(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo$1(dl, dl, T1_hi, T1_lo);\n    dh = ch;\n    dl = cl;\n    ch = bh;\n    cl = bl;\n    bh = ah;\n    bl = al;\n    ah = sum64_hi$1(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo$1(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64$1(this.h, 0, ah, al);\n  sum64$1(this.h, 2, bh, bl);\n  sum64$1(this.h, 4, ch, cl);\n  sum64$1(this.h, 6, dh, dl);\n  sum64$1(this.h, 8, eh, el);\n  sum64$1(this.h, 10, fh, fl);\n  sum64$1(this.h, 12, gh, gl);\n  sum64$1(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === \"hex\") return utils.toHex32(this.h, \"big\");else return utils.split32(this.h, \"big\");\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ ~xh & zh;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ ~xl & zl;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ xh & zh ^ yh & zh;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ xl & zl ^ yl & zl;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 28);\n  var c1_hi = rotr64_hi$1(xl, xh, 2);\n  var c2_hi = rotr64_hi$1(xl, xh, 7);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 28);\n  var c1_lo = rotr64_lo$1(xl, xh, 2);\n  var c2_lo = rotr64_lo$1(xl, xh, 7);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 14);\n  var c1_hi = rotr64_hi$1(xh, xl, 18);\n  var c2_hi = rotr64_hi$1(xl, xh, 9);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 14);\n  var c1_lo = rotr64_lo$1(xh, xl, 18);\n  var c2_lo = rotr64_lo$1(xl, xh, 9);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 1);\n  var c1_hi = rotr64_hi$1(xh, xl, 8);\n  var c2_hi = shr64_hi$1(xh, xl, 7);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 1);\n  var c1_lo = rotr64_lo$1(xh, xl, 8);\n  var c2_lo = shr64_lo$1(xh, xl, 7);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi$1(xh, xl, 19);\n  var c1_hi = rotr64_hi$1(xl, xh, 29);\n  var c2_hi = shr64_hi$1(xh, xl, 6);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo$1(xh, xl, 19);\n  var c1_lo = rotr64_lo$1(xl, xh, 29);\n  var c2_lo = shr64_lo$1(xh, xl, 6);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 4294967296;\n  return r;\n}\n\n\"use strict\";\n\nfunction SHA384() {\n  if (!(this instanceof SHA384)) return new SHA384();\n\n  _512.call(this);\n\n  this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];\n}\n\n_c8 = SHA384;\nutils.inherits(SHA384, _512);\nvar _384 = SHA384;\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === \"hex\") return utils.toHex32(this.h.slice(0, 12), \"big\");else return utils.split32(this.h.slice(0, 12), \"big\");\n};\n\n\"use strict\";\n\nvar sha1 = _1;\nvar sha224 = _224;\nvar sha256 = _256;\nvar sha384 = _384;\nvar sha512 = _512;\nvar sha = {\n  sha1: sha1,\n  sha224: sha224,\n  sha256: sha256,\n  sha384: sha384,\n  sha512: sha512\n};\n\"use strict\";\n\nvar rotl32$2 = utils.rotl32;\nvar sum32$3 = utils.sum32;\nvar sum32_3$1 = utils.sum32_3;\nvar sum32_4$2 = utils.sum32_4;\nvar BlockHash$4 = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n  BlockHash$4.call(this);\n  this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  this.endian = \"little\";\n}\n\n_c9 = RIPEMD160;\nutils.inherits(RIPEMD160, BlockHash$4);\nvar ripemd160 = RIPEMD160;\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n\n  for (var j = 0; j < 80; j++) {\n    var T = sum32$3(rotl32$2(sum32_4$2(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n    A = E;\n    E = D;\n    D = rotl32$2(C, 10);\n    C = B;\n    B = T;\n    T = sum32$3(rotl32$2(sum32_4$2(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32$2(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n\n  T = sum32_3$1(this.h[1], C, Dh);\n  this.h[1] = sum32_3$1(this.h[2], D, Eh);\n  this.h[2] = sum32_3$1(this.h[3], E, Ah);\n  this.h[3] = sum32_3$1(this.h[4], A, Bh);\n  this.h[4] = sum32_3$1(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === \"hex\") return utils.toHex32(this.h, \"little\");else return utils.split32(this.h, \"little\");\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n}\n\nfunction K(j) {\n  if (j <= 15) return 0;else if (j <= 31) return 1518500249;else if (j <= 47) return 1859775393;else if (j <= 63) return 2400959708;else return 2840853838;\n}\n\n_c10 = K;\n\nfunction Kh(j) {\n  if (j <= 15) return 1352829926;else if (j <= 31) return 1548603684;else if (j <= 47) return 1836072691;else if (j <= 63) return 2053994217;else return 0;\n}\n\n_c11 = Kh;\nvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\nvar ripemd = {\n  ripemd160: ripemd160\n};\n\"use strict\";\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\n\n_c12 = Hmac;\nvar hmac = Hmac;\n\nHmac.prototype._init = function init(key) {\n  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n  minimalisticAssert(key.length <= this.blockSize);\n\n  for (var i = key.length; i < this.blockSize; i++) key.push(0);\n\n  for (i = 0; i < key.length; i++) key[i] ^= 54;\n\n  this.inner = new this.Hash().update(key);\n\n  for (i = 0; i < key.length; i++) key[i] ^= 106;\n\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\nvar hash_1 = createCommonjsModule(function (module, exports) {\n  var hash = exports;\n  hash.utils = utils;\n  hash.common = common;\n  hash.sha = sha;\n  hash.ripemd = ripemd;\n  hash.hmac = hmac;\n  hash.sha1 = hash.sha.sha1;\n  hash.sha256 = hash.sha.sha256;\n  hash.sha224 = hash.sha.sha224;\n  hash.sha384 = hash.sha.sha384;\n  hash.sha512 = hash.sha.sha512;\n  hash.ripemd160 = hash.ripemd.ripemd160;\n});\nvar commonjsGlobal$1 = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\n\nfunction getDefaultExportFromCjs$1(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, \"default\") ? x[\"default\"] : x;\n}\n\nfunction createCommonjsModule$1(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire$1(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent$1(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, \"default\") ? n[\"default\"] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed$1(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, \"default\") && Object.keys(n).length === 1 ? n[\"default\"] : n;\n}\n\nfunction getAugmentedNamespace$1(n) {\n  if (n.__esModule) return n;\n  var a = Object.defineProperty({}, \"__esModule\", {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\n\nfunction commonjsRequire$1() {\n  throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n}\n\nvar minimalisticAssert$1 = assert$1;\n\nfunction assert$1(val, msg) {\n  if (!val) throw new Error(msg || \"Assertion failed\");\n}\n\nassert$1.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || \"Assertion failed: \" + l + \" != \" + r);\n};\n\nvar utils_1 = createCommonjsModule$1(function (module, exports) {\n  \"use strict\";\n\n  var utils = exports;\n\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n\n    if (typeof msg !== \"string\") {\n      for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n\n      return res;\n    }\n\n    if (enc === \"hex\") {\n      msg = msg.replace(/[^a-z0-9]+/gi, \"\");\n      if (msg.length % 2 !== 0) msg = \"0\" + msg;\n\n      for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    } else {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 255;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    }\n\n    return res;\n  }\n\n  utils.toArray = toArray;\n\n  function zero2(word) {\n    if (word.length === 1) return \"0\" + word;else return word;\n  }\n\n  utils.zero2 = zero2;\n\n  function toHex(msg) {\n    var res = \"\";\n\n    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n    return res;\n  }\n\n  utils.toHex = toHex;\n\n  utils.encode = function encode(arr, enc) {\n    if (enc === \"hex\") return toHex(arr);else return arr;\n  };\n});\nvar utils_1$1 = createCommonjsModule$1(function (module, exports) {\n  \"use strict\";\n\n  var utils = exports;\n  utils.assert = minimalisticAssert$1;\n  utils.toArray = utils_1.toArray;\n  utils.zero2 = utils_1.zero2;\n  utils.toHex = utils_1.toHex;\n  utils.encode = utils_1.encode;\n\n  function getNAF(num, w, bits) {\n    var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n    naf.fill(0);\n    var ws = 1 << w + 1;\n    var k = num.clone();\n\n    for (var i = 0; i < naf.length; i++) {\n      var z;\n      var mod = k.andln(ws - 1);\n\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n        k.isubn(z);\n      } else {\n        z = 0;\n      }\n\n      naf[i] = z;\n      k.iushrn(1);\n    }\n\n    return naf;\n  }\n\n  utils.getNAF = getNAF;\n\n  function getJSF(k1, k2) {\n    var jsf = [[], []];\n    k1 = k1.clone();\n    k2 = k2.clone();\n    var d1 = 0;\n    var d2 = 0;\n    var m8;\n\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      var m14 = k1.andln(3) + d1 & 3;\n      var m24 = k2.andln(3) + d2 & 3;\n      if (m14 === 3) m14 = -1;\n      if (m24 === 3) m24 = -1;\n      var u1;\n\n      if ((m14 & 1) === 0) {\n        u1 = 0;\n      } else {\n        m8 = k1.andln(7) + d1 & 7;\n        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n      }\n\n      jsf[0].push(u1);\n      var u2;\n\n      if ((m24 & 1) === 0) {\n        u2 = 0;\n      } else {\n        m8 = k2.andln(7) + d2 & 7;\n        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n      }\n\n      jsf[1].push(u2);\n      if (2 * d1 === u1 + 1) d1 = 1 - d1;\n      if (2 * d2 === u2 + 1) d2 = 1 - d2;\n      k1.iushrn(1);\n      k2.iushrn(1);\n    }\n\n    return jsf;\n  }\n\n  utils.getJSF = getJSF;\n\n  function cachedProperty(obj, name, computer) {\n    var key = \"_\" + name;\n\n    obj.prototype[name] = function cachedProperty() {\n      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n    };\n  }\n\n  utils.cachedProperty = cachedProperty;\n\n  function parseBytes(bytes) {\n    return typeof bytes === \"string\" ? utils.toArray(bytes, \"hex\") : bytes;\n  }\n\n  utils.parseBytes = parseBytes;\n\n  function intFromLE(bytes) {\n    return new bn(bytes, \"hex\", \"le\");\n  }\n\n  utils.intFromLE = intFromLE;\n});\n\"use strict\";\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16);\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red);\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\n_c13 = BaseCurve;\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error(\"Not implemented\");\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error(\"Not implemented\");\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1$1(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n  var repr = [];\n  var j;\n  var nafW;\n\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n\n    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n  var naf = getNAF(k, w, this._bitLength);\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;\n\n    if (i >= 0) l++;\n    acc = acc.dblp(l);\n    if (i < 0) break;\n    var z = naf[i];\n    assert$1$1(z !== 0);\n\n    if (p.type === \"affine\") {\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === \"affine\" ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n  var max = 0;\n  var i;\n  var j;\n  var p;\n\n  for (i = 0; i < len; i++) {\n    p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a], null, null, points[b]];\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3, -1, -5, -7, 0, 7, 5, 1, 3];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === \"affine\") acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  }\n\n  for (i = 0; i < len; i++) wnd[i] = null;\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\n_c14 = BasePoint;\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq() {\n  throw new Error(\"Not implemented\");\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n  var len = this.p.byteLength();\n\n  if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 6) assert$1$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 7) assert$1$1(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);\n  }\n\n  throw new Error(\"Unknown point format\");\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray(\"be\", len);\n  if (compact) return [this.getY().isEven() ? 2 : 3].concat(x);\n  return [4].concat(x, this.getY().toArray(\"be\", len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) r = r.dbl();\n\n  return r;\n};\n\nvar inherits_browser$1 = createCommonjsModule$1(function (module) {\n  if (typeof Object.create === \"function\") {\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\n\"use strict\";\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, \"short\", conf);\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\n_c15 = ShortCurve;\ninherits_browser$1(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1);\n  var a0;\n  var b0;\n  var a1;\n  var b1;\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error(\"invalid point\");\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, \"affine\");\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\n_c16 = Point;\ninherits_browser$1(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === \"string\") obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return \"<EC Point Infinity>\";\n  return \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \">\";\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.inf) return p;\n  if (p.inf) return this;\n  if (this.eq(p)) return this.dbl();\n  if (this.neg().eq(p)) return this.curve.point(null, null);\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this;\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function (p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, \"jacobian\");\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\n_c17 = JPoint;\ninherits_browser$1(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  if (this.isInfinity()) return p;\n  if (p.isInfinity()) return this;\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  if (this.isInfinity()) return p.toJ();\n  if (p.isInfinity()) return this;\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (i = 0; i < pow; i++) r = r.dbl();\n\n    return r;\n  }\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jyd = jy.redAdd(jy);\n\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n\n  if (this.zOne) {\n    var xx = this.x.redSqr();\n    var yy = this.y.redSqr();\n    var yyyy = yy.redSqr();\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    var m = xx.redAdd(xx).redIAdd(xx);\n    var t = m.redSqr().redISub(s).redISub(s);\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    nx = t;\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    nz = this.y.redAdd(this.y);\n  } else {\n    var a = this.x.redSqr();\n    var b = this.y.redSqr();\n    var c = b.redSqr();\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    var e = a.redAdd(a).redIAdd(a);\n    var f = e.redSqr();\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n    nx = f.redISub(d).redISub(d);\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n\n  if (this.zOne) {\n    var xx = this.x.redSqr();\n    var yy = this.y.redSqr();\n    var yyyy = yy.redSqr();\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    var t = m.redSqr().redISub(s).redISub(s);\n    nx = t;\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    nz = this.y.redAdd(this.y);\n  } else {\n    var delta = this.z.redSqr();\n    var gamma = this.y.redSqr();\n    var beta = this.x.redMul(gamma);\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this);\n  var xx = this.x.redSqr();\n  var yy = this.y.redSqr();\n  var zz = this.z.redSqr();\n  var yyyy = yy.redSqr();\n  var m = xx.redAdd(xx).redIAdd(xx);\n  var mm = m.redSqr();\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  var ee = e.redSqr();\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === \"affine\") return this.eq(p.toJ());\n  if (this === p) return true;\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return \"<EC JPoint Infinity>\";\n  return \"<EC JPoint x: \" + this.x.toString(16, 2) + \" y: \" + this.y.toString(16, 2) + \" z: \" + this.z.toString(16, 2) + \">\";\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule$1(function (module, exports) {\n  \"use strict\";\n\n  var curve = exports;\n  curve.base = base;\n  curve.short = short_1;\n  curve.mont = null;\n  curve.edwards = null;\n});\nvar curves_1 = createCommonjsModule$1(function (module, exports) {\n  \"use strict\";\n\n  var curves = exports;\n  var assert = utils_1$1.assert;\n\n  function PresetCurve(options) {\n    if (options.type === \"short\") this.curve = new curve_1.short(options);else if (options.type === \"edwards\") this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);\n    this.g = this.curve.g;\n    this.n = this.curve.n;\n    this.hash = options.hash;\n    assert(this.g.validate(), \"Invalid curve\");\n    assert(this.g.mul(this.n).isInfinity(), \"Invalid curve, G*N != O\");\n  }\n\n  curves.PresetCurve = PresetCurve;\n\n  function defineCurve(name, options) {\n    Object.defineProperty(curves, name, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        var curve = new PresetCurve(options);\n        Object.defineProperty(curves, name, {\n          configurable: true,\n          enumerable: true,\n          value: curve\n        });\n        return curve;\n      }\n    });\n  }\n\n  defineCurve(\"p192\", {\n    type: \"short\",\n    prime: \"p192\",\n    p: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",\n    a: \"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",\n    b: \"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",\n    n: \"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",\n    hash: hash_1.sha256,\n    gRed: false,\n    g: [\"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\", \"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"]\n  });\n  defineCurve(\"p224\", {\n    type: \"short\",\n    prime: \"p224\",\n    p: \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",\n    a: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",\n    b: \"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",\n    n: \"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",\n    hash: hash_1.sha256,\n    gRed: false,\n    g: [\"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\", \"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"]\n  });\n  defineCurve(\"p256\", {\n    type: \"short\",\n    prime: null,\n    p: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",\n    a: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",\n    b: \"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",\n    n: \"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",\n    hash: hash_1.sha256,\n    gRed: false,\n    g: [\"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\", \"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"]\n  });\n  defineCurve(\"p384\", {\n    type: \"short\",\n    prime: null,\n    p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \" + \"fffffffe ffffffff 00000000 00000000 ffffffff\",\n    a: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \" + \"fffffffe ffffffff 00000000 00000000 fffffffc\",\n    b: \"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f \" + \"5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",\n    n: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 \" + \"f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",\n    hash: hash_1.sha384,\n    gRed: false,\n    g: [\"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 \" + \"5502f25d bf55296c 3a545e38 72760ab7\", \"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 \" + \"0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"]\n  });\n  defineCurve(\"p521\", {\n    type: \"short\",\n    prime: null,\n    p: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \" + \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \" + \"ffffffff ffffffff ffffffff ffffffff ffffffff\",\n    a: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \" + \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \" + \"ffffffff ffffffff ffffffff ffffffff fffffffc\",\n    b: \"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b \" + \"99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd \" + \"3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",\n    n: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \" + \"ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 \" + \"f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",\n    hash: hash_1.sha512,\n    gRed: false,\n    g: [\"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 \" + \"053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 \" + \"a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\", \"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 \" + \"579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 \" + \"3fad0761 353c7086 a272c240 88be9476 9fd16650\"]\n  });\n  defineCurve(\"curve25519\", {\n    type: \"mont\",\n    prime: \"p25519\",\n    p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n    a: \"76d06\",\n    b: \"1\",\n    n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n    hash: hash_1.sha256,\n    gRed: false,\n    g: [\"9\"]\n  });\n  defineCurve(\"ed25519\", {\n    type: \"edwards\",\n    prime: \"p25519\",\n    p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n    a: \"-1\",\n    c: \"1\",\n    d: \"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",\n    n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n    hash: hash_1.sha256,\n    gRed: false,\n    g: [\"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\", \"6666666666666666666666666666666666666666666666666666666666666658\"]\n  });\n  var pre;\n\n  try {\n    pre = null.crash();\n  } catch (e) {\n    pre = undefined;\n  }\n\n  defineCurve(\"secp256k1\", {\n    type: \"short\",\n    prime: \"k256\",\n    p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",\n    a: \"0\",\n    b: \"7\",\n    n: \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",\n    h: \"1\",\n    hash: hash_1.sha256,\n    beta: \"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",\n    lambda: \"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",\n    basis: [{\n      a: \"3086d221a7d46bcde86c90e49284eb15\",\n      b: \"-e4437ed6010e88286f547fa90abfe4c3\"\n    }, {\n      a: \"114ca50f7a8e2f3f657c1108d9d44cfd8\",\n      b: \"3086d221a7d46bcde86c90e49284eb15\"\n    }],\n    gRed: false,\n    g: [\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\", \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\", pre]\n  });\n});\n\"use strict\";\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || \"hex\");\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || \"hex\");\n  var pers = utils_1.toArray(options.pers, options.persEnc || \"hex\");\n  minimalisticAssert$1(entropy.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\");\n\n  this._init(entropy, nonce, pers);\n}\n\n_c18 = HmacDRBG;\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0;\n    this.V[i] = 1;\n  }\n\n  this._update(seed);\n\n  this._reseed = 1;\n  this.reseedInterval = 281474976710656;\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash_1.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([1]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  if (typeof entropyEnc !== \"string\") {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n  minimalisticAssert$1(entropy.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\");\n\n  this._update(entropy.concat(add || []));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error(\"Reseed is required\");\n\n  if (typeof enc !== \"string\") {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  if (add) {\n    add = utils_1.toArray(add, addEnc || \"hex\");\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n\"use strict\";\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\n_c19 = KeyPair;\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: \"Invalid public key\"\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: \"Public key is not a point\"\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: \"Public key * N != O\"\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  if (typeof compact === \"string\") {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === \"hex\") return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    if (this.ec.curve.type === \"mont\") {\n      assert$3(key.x, \"Need x coordinate\");\n    } else if (this.ec.curve.type === \"short\" || this.ec.curve.type === \"edwards\") {\n      assert$3(key.x && key.y, \"Need both x and y coordinate\");\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\nKeyPair.prototype.derive = function derive(pub) {\n  if (!pub.validate()) {\n    assert$3(pub.validate(), \"public point not validated\");\n  }\n\n  return pub.mul(this.priv).getX();\n};\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return \"<Key priv: \" + (this.priv && this.priv.toString(16, 2)) + \" pub: \" + (this.pub && this.pub.inspect()) + \" >\";\n};\n\n\"use strict\";\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert$4(options.r && options.s, \"Signature without r or s\");\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\n_c20 = Signature;\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\n_c21 = Position;\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 128)) {\n    return initial;\n  }\n\n  var octetLen = initial & 15;\n\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  if (val <= 127) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 128) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 48) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len === false) {\n    return false;\n  }\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 2) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n\n  if (rlen === false) {\n    return false;\n  }\n\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 2) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (slen === false) {\n    return false;\n  }\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0) {\n    if (r[1] & 128) {\n      r = r.slice(1);\n    } else {\n      return false;\n    }\n  }\n\n  if (s[0] === 0) {\n    if (s[1] & 128) {\n      s = s.slice(1);\n    } else {\n      return false;\n    }\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 128) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 128);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 255);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n  if (r[0] & 128) r = [0].concat(r);\n  if (s[0] & 128) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 128)) {\n    s = s.slice(1);\n  }\n\n  var arr = [2];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(2);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [48];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n\"use strict\";\n\nvar rand = function () {\n  throw new Error(\"unsupported\");\n};\n\nvar assert$5 = utils_1$1.assert;\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options);\n\n  if (typeof options === \"string\") {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), \"Unknown curve \" + options);\n    options = curves_1[options];\n  }\n\n  if (options instanceof curves_1.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n  this.hash = options.hash || options.curve.hash;\n}\n\n_c22 = EC;\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {};\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || \"utf8\",\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || \"utf8\",\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n\n  for (;;) {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === \"object\") {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16));\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray(\"be\", bytes);\n  var nonce = msg.toArray(\"be\", bytes);\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || \"utf8\"\n  });\n  var ns1 = this.n.sub(new bn(1));\n\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, \"hex\");\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false;\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, \"The recovery param is more than two bits\");\n  signature$1 = new signature(signature$1, enc);\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error(\"Unable to find sencond key candinate\");\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error(\"Unable to find valid recovery factor\");\n};\n\nvar elliptic_1 = createCommonjsModule$1(function (module, exports) {\n  \"use strict\";\n\n  var elliptic = exports;\n  elliptic.version = {\n    version: \"6.5.4\"\n  }.version;\n  elliptic.utils = utils_1$1;\n\n  elliptic.rand = function () {\n    throw new Error(\"unsupported\");\n  };\n\n  elliptic.curve = curve_1;\n  elliptic.curves = curves_1;\n  elliptic.ec = ec;\n  elliptic.eddsa = null;\n});\nvar EC$1 = elliptic_1.ec;\nconst version$b = \"signing-key/5.1.0\";\n\"use strict\";\n\nconst logger$g = new Logger(version$b);\nlet _curve = null;\n\nfunction getCurve() {\n  if (!_curve) {\n    _curve = new EC$1(\"secp256k1\");\n  }\n\n  return _curve;\n}\n\nclass SigningKey {\n  constructor(privateKey) {\n    defineReadOnly(this, \"curve\", \"secp256k1\");\n    defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n    defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n    defineReadOnly(this, \"_isSigningKey\", true);\n  }\n\n  _addPoint(other) {\n    const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n    const p1 = getCurve().keyFromPublic(arrayify(other));\n    return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n  }\n\n  signDigest(digest) {\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    const digestBytes = arrayify(digest);\n\n    if (digestBytes.length !== 32) {\n      logger$g.throwArgumentError(\"bad digest length\", \"digest\", digest);\n    }\n\n    const signature = keyPair.sign(digestBytes, {\n      canonical: true\n    });\n    return splitSignature({\n      recoveryParam: signature.recoveryParam,\n      r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n      s: hexZeroPad(\"0x\" + signature.s.toString(16), 32)\n    });\n  }\n\n  computeSharedSecret(otherKey) {\n    const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n    const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n    return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n  }\n\n  static isSigningKey(value) {\n    return !!(value && value._isSigningKey);\n  }\n\n}\n\nfunction recoverPublicKey(digest, signature) {\n  const sig = splitSignature(signature);\n  const rs = {\n    r: arrayify(sig.r),\n    s: arrayify(sig.s)\n  };\n  return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nfunction computePublicKey(key, compressed) {\n  const bytes = arrayify(key);\n\n  if (bytes.length === 32) {\n    const signingKey = new SigningKey(bytes);\n\n    if (compressed) {\n      return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n    }\n\n    return signingKey.publicKey;\n  } else if (bytes.length === 33) {\n    if (compressed) {\n      return hexlify(bytes);\n    }\n\n    return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n  } else if (bytes.length === 65) {\n    if (!compressed) {\n      return hexlify(bytes);\n    }\n\n    return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n  }\n\n  return logger$g.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\nconst version$c = \"transactions/5.1.1\";\n\"use strict\";\n\nconst logger$h = new Logger(version$c);\n\nfunction handleAddress(value) {\n  if (value === \"0x\") {\n    return null;\n  }\n\n  return getAddress(value);\n}\n\nfunction handleNumber(value) {\n  if (value === \"0x\") {\n    return Zero$1;\n  }\n\n  return BigNumber.from(value);\n}\n\nconst transactionFields = [{\n  name: \"nonce\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasPrice\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasLimit\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"to\",\n  length: 20\n}, {\n  name: \"value\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"data\"\n}];\nconst allowedTransactionKeys$1 = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true\n};\n\nfunction computeAddress(key) {\n  const publicKey = computePublicKey(key);\n  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nfunction recoverAddress(digest, signature) {\n  return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value, name) {\n  const result = stripZeros(BigNumber.from(value).toHexString());\n\n  if (result.length > 32) {\n    logger$h.throwArgumentError(\"invalid length for \" + name, \"transaction:\" + name, value);\n  }\n\n  return result;\n}\n\nfunction accessSetify(addr, storageKeys) {\n  return {\n    address: getAddress(addr),\n    storageKeys: (storageKeys || []).map((storageKey, index) => {\n      if (hexDataLength(storageKey) !== 32) {\n        logger$h.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n      }\n\n      return storageKey.toLowerCase();\n    })\n  };\n}\n\nfunction accessListify(value) {\n  if (Array.isArray(value)) {\n    return value.map((set, index) => {\n      if (Array.isArray(set)) {\n        if (set.length > 2) {\n          logger$h.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n        }\n\n        return accessSetify(set[0], set[1]);\n      }\n\n      return accessSetify(set.address, set.storageKeys);\n    });\n  }\n\n  const result = Object.keys(value).map(addr => {\n    const storageKeys = value[addr].reduce((accum, storageKey) => {\n      accum[storageKey] = true;\n      return accum;\n    }, {});\n    return accessSetify(addr, Object.keys(storageKeys).sort());\n  });\n  result.sort((a, b) => a.address.localeCompare(b.address));\n  return result;\n}\n\nfunction formatAccessList(value) {\n  return accessListify(value).map(set => [set.address, set.storageKeys]);\n}\n\nfunction _serializeEip2930(transaction, signature) {\n  const fields = [formatNumber(transaction.chainId || 0, \"chainId\"), formatNumber(transaction.nonce || 0, \"nonce\"), formatNumber(transaction.gasPrice || 0, \"gasPrice\"), formatNumber(transaction.gasLimit || 0, \"gasLimit\"), transaction.to != null ? getAddress(transaction.to) : \"0x\", formatNumber(transaction.value || 0, \"value\"), transaction.data || \"0x\", formatAccessList(transaction.accessList || [])];\n\n  if (signature) {\n    const sig = splitSignature(signature);\n    fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n    fields.push(stripZeros(sig.r));\n    fields.push(stripZeros(sig.s));\n  }\n\n  return hexConcat([\"0x01\", encode(fields)]);\n}\n\nfunction _serialize(transaction, signature) {\n  checkProperties(transaction, allowedTransactionKeys$1);\n  const raw = [];\n  transactionFields.forEach(function (fieldInfo) {\n    let value = transaction[fieldInfo.name] || [];\n    const options = {};\n\n    if (fieldInfo.numeric) {\n      options.hexPad = \"left\";\n    }\n\n    value = arrayify(hexlify(value, options));\n\n    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n      logger$h.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n    }\n\n    if (fieldInfo.maxLength) {\n      value = stripZeros(value);\n\n      if (value.length > fieldInfo.maxLength) {\n        logger$h.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n      }\n    }\n\n    raw.push(hexlify(value));\n  });\n  let chainId = 0;\n\n  if (transaction.chainId != null) {\n    chainId = transaction.chainId;\n\n    if (typeof chainId !== \"number\") {\n      logger$h.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n    }\n  } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n    chainId = Math.floor((signature.v - 35) / 2);\n  }\n\n  if (chainId !== 0) {\n    raw.push(hexlify(chainId));\n    raw.push(\"0x\");\n    raw.push(\"0x\");\n  }\n\n  if (!signature) {\n    return encode(raw);\n  }\n\n  const sig = splitSignature(signature);\n  let v = 27 + sig.recoveryParam;\n\n  if (chainId !== 0) {\n    raw.pop();\n    raw.pop();\n    raw.pop();\n    v += chainId * 2 + 8;\n\n    if (sig.v > 28 && sig.v !== v) {\n      logger$h.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n  } else if (sig.v !== v) {\n    logger$h.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n  }\n\n  raw.push(hexlify(v));\n  raw.push(stripZeros(arrayify(sig.r)));\n  raw.push(stripZeros(arrayify(sig.s)));\n  return encode(raw);\n}\n\nfunction serialize(transaction, signature) {\n  if (transaction.type == null) {\n    if (transaction.accessList != null) {\n      logger$h.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n    }\n\n    return _serialize(transaction, signature);\n  }\n\n  switch (transaction.type) {\n    case 1:\n      return _serializeEip2930(transaction, signature);\n\n    default:\n      break;\n  }\n\n  return logger$h.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {\n    operation: \"serializeTransaction\",\n    transactionType: transaction.type\n  });\n}\n\nfunction _parseEip2930(payload) {\n  const transaction = decode(payload.slice(1));\n\n  if (transaction.length !== 8 && transaction.length !== 11) {\n    logger$h.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n  }\n\n  const tx = {\n    type: 1,\n    chainId: handleNumber(transaction[0]).toNumber(),\n    nonce: handleNumber(transaction[1]).toNumber(),\n    gasPrice: handleNumber(transaction[2]),\n    gasLimit: handleNumber(transaction[3]),\n    to: handleAddress(transaction[4]),\n    value: handleNumber(transaction[5]),\n    data: transaction[6],\n    accessList: accessListify(transaction[7])\n  };\n\n  if (transaction.length === 8) {\n    return tx;\n  }\n\n  try {\n    const recid = handleNumber(transaction[8]).toNumber();\n\n    if (recid !== 0 && recid !== 1) {\n      throw new Error(\"bad recid\");\n    }\n\n    tx.v = recid;\n  } catch (error) {\n    logger$h.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", transaction[8]);\n  }\n\n  tx.r = hexZeroPad(transaction[9], 32);\n  tx.s = hexZeroPad(transaction[10], 32);\n\n  try {\n    const digest = keccak256(_serializeEip2930(tx));\n    tx.from = recoverAddress(digest, {\n      r: tx.r,\n      s: tx.s,\n      recoveryParam: tx.v\n    });\n  } catch (error) {\n    console.log(error);\n  }\n\n  tx.hash = keccak256(payload);\n  return tx;\n}\n\nfunction _parse(rawTransaction) {\n  const transaction = decode(rawTransaction);\n\n  if (transaction.length !== 9 && transaction.length !== 6) {\n    logger$h.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n  }\n\n  const tx = {\n    nonce: handleNumber(transaction[0]).toNumber(),\n    gasPrice: handleNumber(transaction[1]),\n    gasLimit: handleNumber(transaction[2]),\n    to: handleAddress(transaction[3]),\n    value: handleNumber(transaction[4]),\n    data: transaction[5],\n    chainId: 0\n  };\n\n  if (transaction.length === 6) {\n    return tx;\n  }\n\n  try {\n    tx.v = BigNumber.from(transaction[6]).toNumber();\n  } catch (error) {\n    console.log(error);\n    return tx;\n  }\n\n  tx.r = hexZeroPad(transaction[7], 32);\n  tx.s = hexZeroPad(transaction[8], 32);\n\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n    tx.chainId = tx.v;\n    tx.v = 0;\n  } else {\n    tx.chainId = Math.floor((tx.v - 35) / 2);\n\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n\n    let recoveryParam = tx.v - 27;\n    const raw = transaction.slice(0, 6);\n\n    if (tx.chainId !== 0) {\n      raw.push(hexlify(tx.chainId));\n      raw.push(\"0x\");\n      raw.push(\"0x\");\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n\n    const digest = keccak256(encode(raw));\n\n    try {\n      tx.from = recoverAddress(digest, {\n        r: hexlify(tx.r),\n        s: hexlify(tx.s),\n        recoveryParam: recoveryParam\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    tx.hash = keccak256(rawTransaction);\n  }\n\n  tx.type = null;\n  return tx;\n}\n\nfunction parse(rawTransaction) {\n  const payload = arrayify(rawTransaction);\n\n  if (payload[0] > 127) {\n    return _parse(payload);\n  }\n\n  switch (payload[0]) {\n    case 1:\n      return _parseEip2930(payload);\n\n    default:\n      break;\n  }\n\n  return logger$h.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n    operation: \"parseTransaction\",\n    transactionType: payload[0]\n  });\n}\n\nconst version$d = \"contracts/5.1.1\";\n\"use strict\";\n\nvar __awaiter$3 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$i = new Logger(version$d);\nconst allowedTransactionKeys$2 = {\n  chainId: true,\n  data: true,\n  from: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true\n};\n\nfunction resolveName(resolver, nameOrPromise) {\n  return __awaiter$3(this, void 0, void 0, function* () {\n    const name = yield nameOrPromise;\n\n    try {\n      return getAddress(name);\n    } catch (error) {}\n\n    if (!resolver) {\n      logger$i.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"resolveName\"\n      });\n    }\n\n    const address = yield resolver.resolveName(name);\n\n    if (address == null) {\n      logger$i.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n  });\n}\n\nfunction resolveAddresses(resolver, value, paramType) {\n  return __awaiter$3(this, void 0, void 0, function* () {\n    if (Array.isArray(paramType)) {\n      return yield Promise.all(paramType.map((paramType, index) => {\n        return resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType.name], paramType);\n      }));\n    }\n\n    if (paramType.type === \"address\") {\n      return yield resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n      return yield resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n      if (!Array.isArray(value)) {\n        return Promise.reject(new Error(\"invalid value for array\"));\n      }\n\n      return yield Promise.all(value.map(v => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n  });\n}\n\nfunction populateTransaction(contract, fragment, args) {\n  return __awaiter$3(this, void 0, void 0, function* () {\n    let overrides = {};\n\n    if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n      overrides = shallowCopy(args.pop());\n    }\n\n    logger$i.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    if (contract.signer) {\n      if (overrides.from) {\n        overrides.from = resolveProperties({\n          override: resolveName(contract.signer, overrides.from),\n          signer: contract.signer.getAddress()\n        }).then(check => __awaiter$3(this, void 0, void 0, function* () {\n          if (getAddress(check.signer) !== check.override) {\n            logger$i.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"overrides.from\"\n            });\n          }\n\n          return check.override;\n        }));\n      } else {\n        overrides.from = contract.signer.getAddress();\n      }\n    } else if (overrides.from) {\n      overrides.from = resolveName(contract.provider, overrides.from);\n    }\n\n    const resolved = yield resolveProperties({\n      args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n      address: contract.resolvedAddress,\n      overrides: resolveProperties(overrides) || {}\n    });\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx = {\n      data: data,\n      to: resolved.address\n    };\n    const ro = resolved.overrides;\n\n    if (ro.nonce != null) {\n      tx.nonce = BigNumber.from(ro.nonce).toNumber();\n    }\n\n    if (ro.gasLimit != null) {\n      tx.gasLimit = BigNumber.from(ro.gasLimit);\n    }\n\n    if (ro.gasPrice != null) {\n      tx.gasPrice = BigNumber.from(ro.gasPrice);\n    }\n\n    if (ro.from != null) {\n      tx.from = ro.from;\n    }\n\n    if (ro.type != null) {\n      tx.type = ro.type;\n    }\n\n    if (ro.accessList != null) {\n      tx.accessList = accessListify(ro.accessList);\n    }\n\n    if (tx.gasLimit == null && fragment.gas != null) {\n      let intrinsic = 21e3;\n      const bytes = arrayify(data);\n\n      for (let i = 0; i < bytes.length; i++) {\n        intrinsic += 4;\n\n        if (bytes[i]) {\n          intrinsic += 64;\n        }\n      }\n\n      tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    if (ro.value) {\n      const roValue = BigNumber.from(ro.value);\n\n      if (!roValue.isZero() && !fragment.payable) {\n        logger$i.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"overrides.value\",\n          value: overrides.value\n        });\n      }\n\n      tx.value = roValue;\n    }\n\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n    delete overrides.type;\n    delete overrides.accessList;\n    const leftovers = Object.keys(overrides).filter(key => overrides[key] != null);\n\n    if (leftovers.length) {\n      logger$i.throwError(`cannot override ${leftovers.map(l => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"overrides\",\n        overrides: leftovers\n      });\n    }\n\n    return tx;\n  });\n}\n\nfunction buildPopulate(contract, fragment) {\n  return function (...args) {\n    return populateTransaction(contract, fragment, args);\n  };\n}\n\nfunction buildEstimate(contract, fragment) {\n  const signerOrProvider = contract.signer || contract.provider;\n  return function (...args) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      if (!signerOrProvider) {\n        logger$i.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"estimateGas\"\n        });\n      }\n\n      const tx = yield populateTransaction(contract, fragment, args);\n      return yield signerOrProvider.estimateGas(tx);\n    });\n  };\n}\n\nfunction buildCall(contract, fragment, collapseSimple) {\n  const signerOrProvider = contract.signer || contract.provider;\n  return function (...args) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      let blockTag = undefined;\n\n      if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n        const overrides = shallowCopy(args.pop());\n\n        if (overrides.blockTag != null) {\n          blockTag = yield overrides.blockTag;\n        }\n\n        delete overrides.blockTag;\n        args.push(overrides);\n      }\n\n      if (contract.deployTransaction != null) {\n        yield contract._deployed(blockTag);\n      }\n\n      const tx = yield populateTransaction(contract, fragment, args);\n      const result = yield signerOrProvider.call(tx, blockTag);\n\n      try {\n        let value = contract.interface.decodeFunctionResult(fragment, result);\n\n        if (collapseSimple && fragment.outputs.length === 1) {\n          value = value[0];\n        }\n\n        return value;\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          error.address = contract.address;\n          error.args = args;\n          error.transaction = tx;\n        }\n\n        throw error;\n      }\n    });\n  };\n}\n\nfunction buildSend(contract, fragment) {\n  return function (...args) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      if (!contract.signer) {\n        logger$i.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"sendTransaction\"\n        });\n      }\n\n      if (contract.deployTransaction != null) {\n        yield contract._deployed();\n      }\n\n      const txRequest = yield populateTransaction(contract, fragment, args);\n      const tx = yield contract.signer.sendTransaction(txRequest);\n      const wait = tx.wait.bind(tx);\n\n      tx.wait = confirmations => {\n        return wait(confirmations).then(receipt => {\n          receipt.events = receipt.logs.map(log => {\n            let event = deepCopy(log);\n            let parsed = null;\n\n            try {\n              parsed = contract.interface.parseLog(log);\n            } catch (e) {}\n\n            if (parsed) {\n              event.args = parsed.args;\n\n              event.decode = (data, topics) => {\n                return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n              };\n\n              event.event = parsed.name;\n              event.eventSignature = parsed.signature;\n            }\n\n            event.removeListener = () => {\n              return contract.provider;\n            };\n\n            event.getBlock = () => {\n              return contract.provider.getBlock(receipt.blockHash);\n            };\n\n            event.getTransaction = () => {\n              return contract.provider.getTransaction(receipt.transactionHash);\n            };\n\n            event.getTransactionReceipt = () => {\n              return Promise.resolve(receipt);\n            };\n\n            return event;\n          });\n          return receipt;\n        });\n      };\n\n      return tx;\n    });\n  };\n}\n\nfunction buildDefault(contract, fragment, collapseSimple) {\n  if (fragment.constant) {\n    return buildCall(contract, fragment, collapseSimple);\n  }\n\n  return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter) {\n  if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n    return \"*\";\n  }\n\n  return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map(topic => {\n    if (Array.isArray(topic)) {\n      return topic.join(\"|\");\n    }\n\n    return topic;\n  }).join(\":\") : \"\");\n}\n\nclass RunningEvent {\n  constructor(tag, filter) {\n    defineReadOnly(this, \"tag\", tag);\n    defineReadOnly(this, \"filter\", filter);\n    this._listeners = [];\n  }\n\n  addListener(listener, once) {\n    this._listeners.push({\n      listener: listener,\n      once: once\n    });\n  }\n\n  removeListener(listener) {\n    let done = false;\n    this._listeners = this._listeners.filter(item => {\n      if (done || item.listener !== listener) {\n        return true;\n      }\n\n      done = true;\n      return false;\n    });\n  }\n\n  removeAllListeners() {\n    this._listeners = [];\n  }\n\n  listeners() {\n    return this._listeners.map(i => i.listener);\n  }\n\n  listenerCount() {\n    return this._listeners.length;\n  }\n\n  run(args) {\n    const listenerCount = this.listenerCount();\n    this._listeners = this._listeners.filter(item => {\n      const argsCopy = args.slice();\n      setTimeout(() => {\n        item.listener.apply(this, argsCopy);\n      }, 0);\n      return !item.once;\n    });\n    return listenerCount;\n  }\n\n  prepareEvent(event) {}\n\n  getEmit(event) {\n    return [event];\n  }\n\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n  constructor() {\n    super(\"error\", null);\n  }\n\n}\n\nclass FragmentRunningEvent extends RunningEvent {\n  constructor(address, contractInterface, fragment, topics) {\n    const filter = {\n      address: address\n    };\n    let topic = contractInterface.getEventTopic(fragment);\n\n    if (topics) {\n      if (topic !== topics[0]) {\n        logger$i.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n      }\n\n      filter.topics = topics.slice();\n    } else {\n      filter.topics = [topic];\n    }\n\n    super(getEventTag(filter), filter);\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"interface\", contractInterface);\n    defineReadOnly(this, \"fragment\", fragment);\n  }\n\n  prepareEvent(event) {\n    super.prepareEvent(event);\n    event.event = this.fragment.name;\n    event.eventSignature = this.fragment.format();\n\n    event.decode = (data, topics) => {\n      return this.interface.decodeEventLog(this.fragment, data, topics);\n    };\n\n    try {\n      event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n    } catch (error) {\n      event.args = null;\n      event.decodeError = error;\n    }\n  }\n\n  getEmit(event) {\n    const errors = checkResultErrors(event.args);\n\n    if (errors.length) {\n      throw errors[0].error;\n    }\n\n    const args = (event.args || []).slice();\n    args.push(event);\n    return args;\n  }\n\n}\n\nclass WildcardRunningEvent extends RunningEvent {\n  constructor(address, contractInterface) {\n    super(\"*\", {\n      address: address\n    });\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"interface\", contractInterface);\n  }\n\n  prepareEvent(event) {\n    super.prepareEvent(event);\n\n    try {\n      const parsed = this.interface.parseLog(event);\n      event.event = parsed.name;\n      event.eventSignature = parsed.signature;\n\n      event.decode = (data, topics) => {\n        return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n      };\n\n      event.args = parsed.args;\n    } catch (error) {}\n  }\n\n}\n\nclass BaseContract {\n  constructor(addressOrName, contractInterface, signerOrProvider) {\n    logger$i.checkNew(new.target, Contract);\n    defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n\n    if (signerOrProvider == null) {\n      defineReadOnly(this, \"provider\", null);\n      defineReadOnly(this, \"signer\", null);\n    } else if (Signer.isSigner(signerOrProvider)) {\n      defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n      defineReadOnly(this, \"signer\", signerOrProvider);\n    } else if (Provider.isProvider(signerOrProvider)) {\n      defineReadOnly(this, \"provider\", signerOrProvider);\n      defineReadOnly(this, \"signer\", null);\n    } else {\n      logger$i.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n    }\n\n    defineReadOnly(this, \"callStatic\", {});\n    defineReadOnly(this, \"estimateGas\", {});\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"populateTransaction\", {});\n    defineReadOnly(this, \"filters\", {});\n    {\n      const uniqueFilters = {};\n      Object.keys(this.interface.events).forEach(eventSignature => {\n        const event = this.interface.events[eventSignature];\n        defineReadOnly(this.filters, eventSignature, (...args) => {\n          return {\n            address: this.address,\n            topics: this.interface.encodeFilterTopics(event, args)\n          };\n        });\n\n        if (!uniqueFilters[event.name]) {\n          uniqueFilters[event.name] = [];\n        }\n\n        uniqueFilters[event.name].push(eventSignature);\n      });\n      Object.keys(uniqueFilters).forEach(name => {\n        const filters = uniqueFilters[name];\n\n        if (filters.length === 1) {\n          defineReadOnly(this.filters, name, this.filters[filters[0]]);\n        } else {\n          logger$i.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n        }\n      });\n    }\n    defineReadOnly(this, \"_runningEvents\", {});\n    defineReadOnly(this, \"_wrappedEmits\", {});\n\n    if (addressOrName == null) {\n      logger$i.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n    }\n\n    defineReadOnly(this, \"address\", addressOrName);\n\n    if (this.provider) {\n      defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n    } else {\n      try {\n        defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n      } catch (error) {\n        logger$i.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"new Contract\"\n        });\n      }\n    }\n\n    const uniqueNames = {};\n    const uniqueSignatures = {};\n    Object.keys(this.interface.functions).forEach(signature => {\n      const fragment = this.interface.functions[signature];\n\n      if (uniqueSignatures[signature]) {\n        logger$i.warn(`Duplicate ABI entry for ${JSON.stringify(name)}`);\n        return;\n      }\n\n      uniqueSignatures[signature] = true;\n      {\n        const name = fragment.name;\n\n        if (!uniqueNames[name]) {\n          uniqueNames[name] = [];\n        }\n\n        uniqueNames[name].push(signature);\n      }\n\n      if (this[signature] == null) {\n        defineReadOnly(this, signature, buildDefault(this, fragment, true));\n      }\n\n      if (this.functions[signature] == null) {\n        defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n      }\n\n      if (this.callStatic[signature] == null) {\n        defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n      }\n\n      if (this.populateTransaction[signature] == null) {\n        defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n      }\n\n      if (this.estimateGas[signature] == null) {\n        defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n      }\n    });\n    Object.keys(uniqueNames).forEach(name => {\n      const signatures = uniqueNames[name];\n\n      if (signatures.length > 1) {\n        return;\n      }\n\n      const signature = signatures[0];\n\n      try {\n        if (this[name] == null) {\n          defineReadOnly(this, name, this[signature]);\n        }\n      } catch (e) {}\n\n      if (this.functions[name] == null) {\n        defineReadOnly(this.functions, name, this.functions[signature]);\n      }\n\n      if (this.callStatic[name] == null) {\n        defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n      }\n\n      if (this.populateTransaction[name] == null) {\n        defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n      }\n\n      if (this.estimateGas[name] == null) {\n        defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n      }\n    });\n  }\n\n  static getContractAddress(transaction) {\n    return getContractAddress(transaction);\n  }\n\n  static getInterface(contractInterface) {\n    if (Interface.isInterface(contractInterface)) {\n      return contractInterface;\n    }\n\n    return new Interface(contractInterface);\n  }\n\n  deployed() {\n    return this._deployed();\n  }\n\n  _deployed(blockTag) {\n    if (!this._deployedPromise) {\n      if (this.deployTransaction) {\n        this._deployedPromise = this.deployTransaction.wait().then(() => {\n          return this;\n        });\n      } else {\n        this._deployedPromise = this.provider.getCode(this.address, blockTag).then(code => {\n          if (code === \"0x\") {\n            logger$i.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n              contractAddress: this.address,\n              operation: \"getDeployed\"\n            });\n          }\n\n          return this;\n        });\n      }\n    }\n\n    return this._deployedPromise;\n  }\n\n  fallback(overrides) {\n    if (!this.signer) {\n      logger$i.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"sendTransaction(fallback)\"\n      });\n    }\n\n    const tx = shallowCopy(overrides || {});\n    [\"from\", \"to\"].forEach(function (key) {\n      if (tx[key] == null) {\n        return;\n      }\n\n      logger$i.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: key\n      });\n    });\n    tx.to = this.resolvedAddress;\n    return this.deployed().then(() => {\n      return this.signer.sendTransaction(tx);\n    });\n  }\n\n  connect(signerOrProvider) {\n    if (typeof signerOrProvider === \"string\") {\n      signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n    }\n\n    const contract = new this.constructor(this.address, this.interface, signerOrProvider);\n\n    if (this.deployTransaction) {\n      defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n    }\n\n    return contract;\n  }\n\n  attach(addressOrName) {\n    return new this.constructor(addressOrName, this.interface, this.signer || this.provider);\n  }\n\n  static isIndexed(value) {\n    return Indexed.isIndexed(value);\n  }\n\n  _normalizeRunningEvent(runningEvent) {\n    if (this._runningEvents[runningEvent.tag]) {\n      return this._runningEvents[runningEvent.tag];\n    }\n\n    return runningEvent;\n  }\n\n  _getRunningEvent(eventName) {\n    if (typeof eventName === \"string\") {\n      if (eventName === \"error\") {\n        return this._normalizeRunningEvent(new ErrorRunningEvent());\n      }\n\n      if (eventName === \"event\") {\n        return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n      }\n\n      if (eventName === \"*\") {\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n      }\n\n      const fragment = this.interface.getEvent(eventName);\n      return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n    }\n\n    if (eventName.topics && eventName.topics.length > 0) {\n      try {\n        const topic = eventName.topics[0];\n\n        if (typeof topic !== \"string\") {\n          throw new Error(\"invalid topic\");\n        }\n\n        const fragment = this.interface.getEvent(topic);\n        return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n      } catch (error) {}\n\n      const filter = {\n        address: this.address,\n        topics: eventName.topics\n      };\n      return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n    }\n\n    return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n  }\n\n  _checkRunningEvents(runningEvent) {\n    if (runningEvent.listenerCount() === 0) {\n      delete this._runningEvents[runningEvent.tag];\n      const emit = this._wrappedEmits[runningEvent.tag];\n\n      if (emit && runningEvent.filter) {\n        this.provider.off(runningEvent.filter, emit);\n        delete this._wrappedEmits[runningEvent.tag];\n      }\n    }\n  }\n\n  _wrapEvent(runningEvent, log, listener) {\n    const event = deepCopy(log);\n\n    event.removeListener = () => {\n      if (!listener) {\n        return;\n      }\n\n      runningEvent.removeListener(listener);\n\n      this._checkRunningEvents(runningEvent);\n    };\n\n    event.getBlock = () => {\n      return this.provider.getBlock(log.blockHash);\n    };\n\n    event.getTransaction = () => {\n      return this.provider.getTransaction(log.transactionHash);\n    };\n\n    event.getTransactionReceipt = () => {\n      return this.provider.getTransactionReceipt(log.transactionHash);\n    };\n\n    runningEvent.prepareEvent(event);\n    return event;\n  }\n\n  _addEventListener(runningEvent, listener, once) {\n    if (!this.provider) {\n      logger$i.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"once\"\n      });\n    }\n\n    runningEvent.addListener(listener, once);\n    this._runningEvents[runningEvent.tag] = runningEvent;\n\n    if (!this._wrappedEmits[runningEvent.tag]) {\n      const wrappedEmit = log => {\n        let event = this._wrapEvent(runningEvent, log, listener);\n\n        if (event.decodeError == null) {\n          try {\n            const args = runningEvent.getEmit(event);\n            this.emit(runningEvent.filter, ...args);\n          } catch (error) {\n            event.decodeError = error.error;\n          }\n        }\n\n        if (runningEvent.filter != null) {\n          this.emit(\"event\", event);\n        }\n\n        if (event.decodeError != null) {\n          this.emit(\"error\", event.decodeError, event);\n        }\n      };\n\n      this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n      if (runningEvent.filter != null) {\n        this.provider.on(runningEvent.filter, wrappedEmit);\n      }\n    }\n  }\n\n  queryFilter(event, fromBlockOrBlockhash, toBlock) {\n    const runningEvent = this._getRunningEvent(event);\n\n    const filter = shallowCopy(runningEvent.filter);\n\n    if (typeof fromBlockOrBlockhash === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n      if (toBlock != null) {\n        logger$i.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n      }\n\n      filter.blockHash = fromBlockOrBlockhash;\n    } else {\n      filter.fromBlock = fromBlockOrBlockhash != null ? fromBlockOrBlockhash : 0;\n      filter.toBlock = toBlock != null ? toBlock : \"latest\";\n    }\n\n    return this.provider.getLogs(filter).then(logs => {\n      return logs.map(log => this._wrapEvent(runningEvent, log, null));\n    });\n  }\n\n  on(event, listener) {\n    this._addEventListener(this._getRunningEvent(event), listener, false);\n\n    return this;\n  }\n\n  once(event, listener) {\n    this._addEventListener(this._getRunningEvent(event), listener, true);\n\n    return this;\n  }\n\n  emit(eventName, ...args) {\n    if (!this.provider) {\n      return false;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    const result = runningEvent.run(args) > 0;\n\n    this._checkRunningEvents(runningEvent);\n\n    return result;\n  }\n\n  listenerCount(eventName) {\n    if (!this.provider) {\n      return 0;\n    }\n\n    if (eventName == null) {\n      return Object.keys(this._runningEvents).reduce((accum, key) => {\n        return accum + this._runningEvents[key].listenerCount();\n      }, 0);\n    }\n\n    return this._getRunningEvent(eventName).listenerCount();\n  }\n\n  listeners(eventName) {\n    if (!this.provider) {\n      return [];\n    }\n\n    if (eventName == null) {\n      const result = [];\n\n      for (let tag in this._runningEvents) {\n        this._runningEvents[tag].listeners().forEach(listener => {\n          result.push(listener);\n        });\n      }\n\n      return result;\n    }\n\n    return this._getRunningEvent(eventName).listeners();\n  }\n\n  removeAllListeners(eventName) {\n    if (!this.provider) {\n      return this;\n    }\n\n    if (eventName == null) {\n      for (const tag in this._runningEvents) {\n        const runningEvent = this._runningEvents[tag];\n        runningEvent.removeAllListeners();\n\n        this._checkRunningEvents(runningEvent);\n      }\n\n      return this;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    runningEvent.removeAllListeners();\n\n    this._checkRunningEvents(runningEvent);\n\n    return this;\n  }\n\n  off(eventName, listener) {\n    if (!this.provider) {\n      return this;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    runningEvent.removeListener(listener);\n\n    this._checkRunningEvents(runningEvent);\n\n    return this;\n  }\n\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n\n}\n\nclass Contract extends BaseContract {}\n\nclass ContractFactory {\n  constructor(contractInterface, bytecode, signer) {\n    let bytecodeHex = null;\n\n    if (typeof bytecode === \"string\") {\n      bytecodeHex = bytecode;\n    } else if (isBytes(bytecode)) {\n      bytecodeHex = hexlify(bytecode);\n    } else if (bytecode && typeof bytecode.object === \"string\") {\n      bytecodeHex = bytecode.object;\n    } else {\n      bytecodeHex = \"!\";\n    }\n\n    if (bytecodeHex.substring(0, 2) !== \"0x\") {\n      bytecodeHex = \"0x\" + bytecodeHex;\n    }\n\n    if (!isHexString(bytecodeHex) || bytecodeHex.length % 2) {\n      logger$i.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n    }\n\n    if (signer && !Signer.isSigner(signer)) {\n      logger$i.throwArgumentError(\"invalid signer\", \"signer\", signer);\n    }\n\n    defineReadOnly(this, \"bytecode\", bytecodeHex);\n    defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n    defineReadOnly(this, \"signer\", signer || null);\n  }\n\n  getDeployTransaction(...args) {\n    let tx = {};\n\n    if (args.length === this.interface.deploy.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n      tx = shallowCopy(args.pop());\n\n      for (const key in tx) {\n        if (!allowedTransactionKeys$2[key]) {\n          throw new Error(\"unknown transaction override \" + key);\n        }\n      }\n    }\n\n    [\"data\", \"from\", \"to\"].forEach(key => {\n      if (tx[key] == null) {\n        return;\n      }\n\n      logger$i.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: key\n      });\n    });\n    logger$i.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n    tx.data = hexlify(concat([this.bytecode, this.interface.encodeDeploy(args)]));\n    return tx;\n  }\n\n  deploy(...args) {\n    return __awaiter$3(this, void 0, void 0, function* () {\n      let overrides = {};\n\n      if (args.length === this.interface.deploy.inputs.length + 1) {\n        overrides = args.pop();\n      }\n\n      logger$i.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n      const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n      params.push(overrides);\n      const unsignedTx = this.getDeployTransaction(...params);\n      const tx = yield this.signer.sendTransaction(unsignedTx);\n      const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n      const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n      defineReadOnly(contract, \"deployTransaction\", tx);\n      return contract;\n    });\n  }\n\n  attach(address) {\n    return this.constructor.getContract(address, this.interface, this.signer);\n  }\n\n  connect(signer) {\n    return new this.constructor(this.interface, this.bytecode, signer);\n  }\n\n  static fromSolidity(compilerOutput, signer) {\n    if (compilerOutput == null) {\n      logger$i.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, {\n        argument: \"compilerOutput\"\n      });\n    }\n\n    if (typeof compilerOutput === \"string\") {\n      compilerOutput = JSON.parse(compilerOutput);\n    }\n\n    const abi = compilerOutput.abi;\n    let bytecode = null;\n\n    if (compilerOutput.bytecode) {\n      bytecode = compilerOutput.bytecode;\n    } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n      bytecode = compilerOutput.evm.bytecode;\n    }\n\n    return new this(abi, bytecode, signer);\n  }\n\n  static getInterface(contractInterface) {\n    return Contract.getInterface(contractInterface);\n  }\n\n  static getContractAddress(tx) {\n    return getContractAddress(tx);\n  }\n\n  static getContract(address, contractInterface, signer) {\n    return new Contract(address, contractInterface, signer);\n  }\n\n}\n\nclass BaseX {\n  constructor(alphabet) {\n    defineReadOnly(this, \"alphabet\", alphabet);\n    defineReadOnly(this, \"base\", alphabet.length);\n    defineReadOnly(this, \"_alphabetMap\", {});\n    defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n    for (let i = 0; i < alphabet.length; i++) {\n      this._alphabetMap[alphabet.charAt(i)] = i;\n    }\n  }\n\n  encode(value) {\n    let source = arrayify(value);\n\n    if (source.length === 0) {\n      return \"\";\n    }\n\n    let digits = [0];\n\n    for (let i = 0; i < source.length; ++i) {\n      let carry = source[i];\n\n      for (let j = 0; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % this.base;\n        carry = carry / this.base | 0;\n      }\n\n      while (carry > 0) {\n        digits.push(carry % this.base);\n        carry = carry / this.base | 0;\n      }\n    }\n\n    let string = \"\";\n\n    for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n      string += this._leader;\n    }\n\n    for (let q = digits.length - 1; q >= 0; --q) {\n      string += this.alphabet[digits[q]];\n    }\n\n    return string;\n  }\n\n  decode(value) {\n    if (typeof value !== \"string\") {\n      throw new TypeError(\"Expected String\");\n    }\n\n    let bytes = [];\n\n    if (value.length === 0) {\n      return new Uint8Array(bytes);\n    }\n\n    bytes.push(0);\n\n    for (let i = 0; i < value.length; i++) {\n      let byte = this._alphabetMap[value[i]];\n\n      if (byte === undefined) {\n        throw new Error(\"Non-base\" + this.base + \" character\");\n      }\n\n      let carry = byte;\n\n      for (let j = 0; j < bytes.length; ++j) {\n        carry += bytes[j] * this.base;\n        bytes[j] = carry & 255;\n        carry >>= 8;\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 255);\n        carry >>= 8;\n      }\n    }\n\n    for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n      bytes.push(0);\n    }\n\n    return arrayify(new Uint8Array(bytes.reverse()));\n  }\n\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nvar SupportedAlgorithm;\n\n(function (SupportedAlgorithm) {\n  SupportedAlgorithm[\"sha256\"] = \"sha256\";\n  SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n\nconst version$e = \"sha2/5.1.0\";\n\"use strict\";\n\nconst logger$j = new Logger(version$e);\n\nfunction ripemd160$1(data) {\n  return \"0x\" + hash_1.ripemd160().update(arrayify(data)).digest(\"hex\");\n}\n\nfunction sha256$1(data) {\n  return \"0x\" + hash_1.sha256().update(arrayify(data)).digest(\"hex\");\n}\n\nfunction sha512$1(data) {\n  return \"0x\" + hash_1.sha512().update(arrayify(data)).digest(\"hex\");\n}\n\nfunction computeHmac(algorithm, key, data) {\n  if (!SupportedAlgorithm[algorithm]) {\n    logger$j.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"hmac\",\n      algorithm: algorithm\n    });\n  }\n\n  return \"0x\" + hash_1.hmac(hash_1[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n\"use strict\";\n\nfunction pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n  password = arrayify(password);\n  salt = arrayify(salt);\n  let hLen;\n  let l = 1;\n  const DK = new Uint8Array(keylen);\n  const block1 = new Uint8Array(salt.length + 4);\n  block1.set(salt);\n  let r;\n  let T;\n\n  for (let i = 1; i <= l; i++) {\n    block1[salt.length] = i >> 24 & 255;\n    block1[salt.length + 1] = i >> 16 & 255;\n    block1[salt.length + 2] = i >> 8 & 255;\n    block1[salt.length + 3] = i & 255;\n    let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n\n    if (!hLen) {\n      hLen = U.length;\n      T = new Uint8Array(hLen);\n      l = Math.ceil(keylen / hLen);\n      r = keylen - (l - 1) * hLen;\n    }\n\n    T.set(U);\n\n    for (let j = 1; j < iterations; j++) {\n      U = arrayify(computeHmac(hashAlgorithm, password, U));\n\n      for (let k = 0; k < hLen; k++) T[k] ^= U[k];\n    }\n\n    const destPos = (i - 1) * hLen;\n    const len = i === l ? r : hLen;\n    DK.set(arrayify(T).slice(0, len), destPos);\n  }\n\n  return hexlify(DK);\n}\n\nconst version$f = \"wordlists/5.1.0\";\n\"use strict\";\n\nconst exportWordlist = false;\nconst logger$k = new Logger(version$f);\n\nclass Wordlist {\n  constructor(locale) {\n    logger$k.checkAbstract(new.target, Wordlist);\n    defineReadOnly(this, \"locale\", locale);\n  }\n\n  split(mnemonic) {\n    return mnemonic.toLowerCase().split(/ +/g);\n  }\n\n  join(words) {\n    return words.join(\" \");\n  }\n\n  static check(wordlist) {\n    const words = [];\n\n    for (let i = 0; i < 2048; i++) {\n      const word = wordlist.getWord(i);\n\n      if (i !== wordlist.getWordIndex(word)) {\n        return \"0x\";\n      }\n\n      words.push(word);\n    }\n\n    return id(words.join(\"\\n\") + \"\\n\");\n  }\n\n  static register(lang, name) {\n    if (!name) {\n      name = lang.locale;\n    }\n\n    if (exportWordlist) {\n      try {\n        const anyGlobal = window;\n\n        if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n          if (!anyGlobal._ethers.wordlists[name]) {\n            defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n          }\n        }\n      } catch (error) {}\n    }\n  }\n\n}\n\n\"use strict\";\n\nconst words = \"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";\nlet wordlist = null;\n\nfunction loadWords(lang) {\n  if (wordlist != null) {\n    return;\n  }\n\n  wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n  if (Wordlist.check(lang) !== \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\") {\n    wordlist = null;\n    throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n  }\n}\n\nclass LangCz extends Wordlist {\n  constructor() {\n    super(\"cz\");\n  }\n\n  getWord(index) {\n    loadWords(this);\n    return wordlist[index];\n  }\n\n  getWordIndex(word) {\n    loadWords(this);\n    return wordlist.indexOf(word);\n  }\n\n}\n\nconst langCz = new LangCz();\nWordlist.register(langCz);\n\"use strict\";\n\nconst words$1 = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist$1 = null;\n\nfunction loadWords$1(lang) {\n  if (wordlist$1 != null) {\n    return;\n  }\n\n  wordlist$1 = words$1.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n  if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n    wordlist$1 = null;\n    throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n  }\n}\n\nclass LangEn extends Wordlist {\n  constructor() {\n    super(\"en\");\n  }\n\n  getWord(index) {\n    loadWords$1(this);\n    return wordlist$1[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$1(this);\n    return wordlist$1.indexOf(word);\n  }\n\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\"use strict\";\n\nconst words$2 = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\nconst lookup = {};\nlet wordlist$2 = null;\n\nfunction dropDiacritic(word) {\n  logger$k.checkNormalize();\n  return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), c => {\n    return c >= 65 && c <= 90 || c >= 97 && c <= 123;\n  }));\n}\n\nfunction expand(word) {\n  const output = [];\n  Array.prototype.forEach.call(toUtf8Bytes(word), c => {\n    if (c === 47) {\n      output.push(204);\n      output.push(129);\n    } else if (c === 126) {\n      output.push(110);\n      output.push(204);\n      output.push(131);\n    } else {\n      output.push(c);\n    }\n  });\n  return toUtf8String(output);\n}\n\nfunction loadWords$2(lang) {\n  if (wordlist$2 != null) {\n    return;\n  }\n\n  wordlist$2 = words$2.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map(w => expand(w));\n  wordlist$2.forEach((word, index) => {\n    lookup[dropDiacritic(word)] = index;\n  });\n\n  if (Wordlist.check(lang) !== \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\") {\n    wordlist$2 = null;\n    throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\");\n  }\n}\n\nclass LangEs extends Wordlist {\n  constructor() {\n    super(\"es\");\n  }\n\n  getWord(index) {\n    loadWords$2(this);\n    return wordlist$2[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$2(this);\n    return lookup[dropDiacritic(word)];\n  }\n\n}\n\nconst langEs = new LangEs();\nWordlist.register(langEs);\n\"use strict\";\n\nconst words$3 = \"\";\nlet wordlist$3 = null;\nconst lookup$1 = {};\n\nfunction dropDiacritic$1(word) {\n  logger$k.checkNormalize();\n  return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), c => {\n    return c >= 65 && c <= 90 || c >= 97 && c <= 123;\n  }));\n}\n\nfunction expand$1(word) {\n  const output = [];\n  Array.prototype.forEach.call(toUtf8Bytes(word), c => {\n    if (c === 47) {\n      output.push(204);\n      output.push(129);\n    } else if (c === 45) {\n      output.push(204);\n      output.push(128);\n    } else {\n      output.push(c);\n    }\n  });\n  return toUtf8String(output);\n}\n\nfunction loadWords$3(lang) {\n  if (wordlist$3 != null) {\n    return;\n  }\n\n  wordlist$3 = words$3.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map(w => expand$1(w));\n  wordlist$3.forEach((word, index) => {\n    lookup$1[dropDiacritic$1(word)] = index;\n  });\n\n  if (Wordlist.check(lang) !== \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\") {\n    wordlist$3 = null;\n    throw new Error(\"BIP39 Wordlist for fr (French) FAILED\");\n  }\n}\n\nclass LangFr extends Wordlist {\n  constructor() {\n    super(\"fr\");\n  }\n\n  getWord(index) {\n    loadWords$3(this);\n    return wordlist$3[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$3(this);\n    return lookup$1[dropDiacritic$1(word)];\n  }\n\n}\n\nconst langFr = new LangFr();\nWordlist.register(langFr);\n\"use strict\";\n\nconst data = [\"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\", \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\", \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\", \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\", \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\", \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\", \"IJBEJqXZJ\"];\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nlet wordlist$4 = null;\n\nfunction hex(word) {\n  return hexlify(toUtf8Bytes(word));\n}\n\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\";\n\nfunction loadWords$4(lang) {\n  if (wordlist$4 !== null) {\n    return;\n  }\n\n  wordlist$4 = [];\n  const transform = {};\n  transform[toUtf8String([227, 130, 154])] = false;\n  transform[toUtf8String([227, 130, 153])] = false;\n  transform[toUtf8String([227, 130, 133])] = toUtf8String([227, 130, 134]);\n  transform[toUtf8String([227, 129, 163])] = toUtf8String([227, 129, 164]);\n  transform[toUtf8String([227, 130, 131])] = toUtf8String([227, 130, 132]);\n  transform[toUtf8String([227, 130, 135])] = toUtf8String([227, 130, 136]);\n\n  function normalize(word) {\n    let result = \"\";\n\n    for (let i = 0; i < word.length; i++) {\n      let kana = word[i];\n      const target = transform[kana];\n\n      if (target === false) {\n        continue;\n      }\n\n      if (target) {\n        kana = target;\n      }\n\n      result += kana;\n    }\n\n    return result;\n  }\n\n  function sortJapanese(a, b) {\n    a = normalize(a);\n    b = normalize(b);\n\n    if (a < b) {\n      return -1;\n    }\n\n    if (a > b) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  for (let length = 3; length <= 9; length++) {\n    const d = data[length - 3];\n\n    for (let offset = 0; offset < d.length; offset += length) {\n      const word = [];\n\n      for (let i = 0; i < length; i++) {\n        const k = mapping.indexOf(d[offset + i]);\n        word.push(227);\n        word.push(k & 64 ? 130 : 129);\n        word.push((k & 63) + 128);\n      }\n\n      wordlist$4.push(toUtf8String(word));\n    }\n  }\n\n  wordlist$4.sort(sortJapanese);\n\n  if (hex(wordlist$4[442]) === KiYoKu && hex(wordlist$4[443]) === KyoKu) {\n    const tmp = wordlist$4[442];\n    wordlist$4[442] = wordlist$4[443];\n    wordlist$4[443] = tmp;\n  }\n\n  if (Wordlist.check(lang) !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n    wordlist$4 = null;\n    throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n  }\n}\n\nclass LangJa extends Wordlist {\n  constructor() {\n    super(\"ja\");\n  }\n\n  getWord(index) {\n    loadWords$4(this);\n    return wordlist$4[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$4(this);\n    return wordlist$4.indexOf(word);\n  }\n\n  split(mnemonic) {\n    logger$k.checkNormalize();\n    return mnemonic.split(/(?:\\u3000| )+/g);\n  }\n\n  join(words) {\n    return words.join(\"　\");\n  }\n\n}\n\nconst langJa = new LangJa();\nWordlist.register(langJa);\n\"use strict\";\n\nconst data$1 = [\"OYAa\", \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@HgLnrHgMT8HgMX8HgMboHgOnrHgQToHgRg3HgoHgHgrCbHgrFnHgrLVHgvAcHgvAfHnAloHnCTrHnCnvHnGTrHnGZ8HnGnvHnJT8HnLf8HnLkvHnMg8HnRTrITvFUITvFnJTAXrJTCV8JTFT3JTFT8JTFn4JTGgvJTHT8JTJT8JTJXvJTJl3JTJnvJTLX4JTLf8JTLhvJTMT8JTMXrJTMnrJTObrJTQT8JTSlvJT8DUJT8FkJT8MTJT8OXJT8OgJT8QUJT8RfJUHZoJXFT4JXFlrJXGZ8JXGnrJXLV8JXLgvJXMXoJXMX3JXNboJXPlvJXoJTJXoLkJXrAXJXrHUJXrJgJXvJTJXvOnJX4KnJYAl3JYJT8JYLhvJYQToJYrQXJY6NUJbAl3JbCZrJbDloJbGT8JbGgrJbJXvJbJboJbLf8JbLhrJbLl3JbMnvJbRg8JbSZ8JboDbJbrCZJbrSUJb3KnJb8LnJfRn8JgAXrJgCZrJgDTrJgGZrJgGZ8JgHToJgJT8JgJXoJgJgvJgLX4JgLZ3JgLZ8JgLn4JgMgrJgMn4JgOgvJgPX6JgRnvJgSToJgoCZJgoJbJgoMYJgrJXJgrJgJgrLjJg6MTJlCn3JlGgvJlJl8Jl4AnJl8FnJl8HgJnAToJnATrJnAbvJnDUoJnGnrJnJXrJnJXvJnLhvJnLnrJnLnvJnMToJnMT8JnMXvJnMX3JnMg8JnMlrJnMn4JnOX8JnST4JnSX3JnoAgJnoAnJnoJTJnoObJnrAbJnrAkJnrHnJnrJTJnrJYJnrOYJnrScJnvCUJnvFaJnvJgJnvJnJnvOYJnvQUJnvRUJn3FnJn3JTKnFl3KnLT6LTDlvLTMnoLTOn3LTRl3LTSb4LTSlrLToAnLToJgLTrAULTrAcLTrCULTrHgLTrMgLT3JnLULnrLUMX8LUoJgLVATrLVDTrLVLb8LVoJgLV8MgLV8RTLXDg3LXFlrLXrCnLXrLXLX3GTLX4GgLX4OYLZAXrLZAcrLZAgrLZAhrLZDXyLZDlrLZFbrLZFl3LZJX6LZJX8LZLc8LZLnrLZSU8LZoJTLZoJnLZrAgLZrAnLZrJYLZrLULZrMgLZrSkLZvAnLZvGULZvJeLZvOTLZ3FZLZ4JXLZ8STLZ8ScLaAT3LaAl3LaHT8LaJTrLaJT8LaJXrLaJgvLaJl4LaLVoLaMXrLaMXvLaMX8LbClvLbFToLbHlrLbJn4LbLZ3LbLhvLbMXrLbMnoLbvSULcLnrLc8HnLc8MTLdrMnLeAgoLeOgvLeOn3LfAl3LfLnvLfMl3LfOX8Lf8AnLf8JXLf8LXLgJTrLgJXrLgJl8LgMX8LgRZrLhCToLhrAbLhrFULhrJXLhvJYLjHTrLjHX4LjJX8LjLhrLjSX3LjSZ4LkFX4LkGZ8LkGgvLkJTrLkMXoLkSToLkSU8LkSZ8LkoOYLl3FfLl3MgLmAZrLmCbrLmGgrLmHboLmJnoLmJn3LmLfoLmLhrLmSToLnAX6LnAb6LnCZ3LnCb3LnDTvLnDb8LnFl3LnGnrLnHZvLnHgvLnITvLnJT8LnJX8LnJlvLnLf8LnLg6LnLhvLnLnoLnMXrLnMg8LnQlvLnSbrLnrAgLnrAnLnrDbLnrFkLnrJdLnrMULnrOYLnrSTLnvAnLnvDULnvHgLnvOYLnvOnLn3GgLn4DULn4JTLn4JnMTAZoMTAloMTDb8MTFT8MTJnoMTJnrMTLZrMTLhrMTLkvMTMX8MTRTrMToATMTrDnMTrOnMT3JnMT4MnMT8FUMT8FaMT8FlMT8GTMT8GbMT8GnMT8HnMT8JTMT8JbMT8OTMUCl8MUJTrMUJU8MUMX8MURTrMUSToMXAX6MXAb6MXCZoMXFXrMXHXrMXLgvMXOgoMXrAUMXrAnMXrHgMXrJYMXrJnMXrMTMXrMgMXrOYMXrSZMXrSgMXvDUMXvOTMX3JgMX3OTMX4JnMX8DbMX8FnMX8HbMX8HgMX8HnMX8LbMX8MnMX8OnMYAb8MYGboMYHTvMYHX4MYLTrMYLnvMYMToMYOgvMYRg3MYSTrMbAToMbAXrMbAl3MbAn8MbGZ8MbJT8MbJXrMbMXvMbMX8MbMnoMbrMUMb8AfMb8FbMb8FkMcJXoMeLnrMgFl3MgGTvMgGXoMgGgrMgGnrMgHT8MgHZrMgJnoMgLnrMgLnvMgMT8MgQUoMgrHnMgvAnMg8HgMg8JYMg8LfMloJnMl8ATMl8AXMl8JYMnAToMnAT4MnAZ8MnAl3MnAl4MnCl8MnHT8MnHg8MnJnoMnLZoMnLhrMnMXoMnMX3MnMnrMnOgvMnrFbMnrFfMnrFnMnrNTMnvJXNTMl8OTCT3OTFV8OTFn3OTHZvOTJXrOTOl3OT3ATOT3JUOT3LZOT3LeOT3MbOT8ATOT8AbOT8AgOT8MbOUCXvOUMX3OXHXvOXLl3OXrMUOXvDbOX6NUOX8JbOYFZoOYLbrOYLkoOYMg8OYSX3ObHTrObHT4ObJgrObLhrObMX3ObOX8Ob8FnOeAlrOeJT8OeJXrOeJnrOeLToOeMb8OgJXoOgLXoOgMnrOgOXrOgOloOgoAgOgoJbOgoMYOgoSTOg8AbOjLX4OjMnoOjSV8OnLVoOnrAgOn3DUPXQlrPXvFXPbvFTPdAT3PlFn3PnvFbQTLn4QToAgQToMTQULV8QURg8QUoJnQXCXvQbFbrQb8AaQb8AcQb8FbQb8MYQb8ScQeAlrQeLhrQjAn3QlFXoQloJgQloSnRTLnvRTrGURTrJTRUJZrRUoJlRUrQnRZrLmRZrMnRZrSnRZ8ATRZ8JbRZ8ScRbMT8RbST3RfGZrRfMX8RfMgrRfSZrRnAbrRnGT8RnvJgRnvLfRnvMTRn8AaSTClvSTJgrSTOXrSTRg3STRnvSToAcSToAfSToAnSToHnSToLjSToMTSTrAaSTrEUST3BYST8AgST8LmSUAZvSUAgrSUDT4SUDT8SUGgvSUJXoSUJXvSULTrSU8JTSU8LjSV8AnSV8JgSXFToSXLf8SYvAnSZrDUSZrMUSZrMnSZ8HgSZ8JTSZ8JgSZ8MYSZ8QUSaQUoSbCT3SbHToSbQYvSbSl4SboJnSbvFbSb8HbSb8JgSb8OTScGZrScHgrScJTvScMT8ScSToScoHbScrMTScvAnSeAZrSeAcrSeHboSeJUoSeLhrSeMT8SeMXrSe6JgSgHTrSkJnoSkLnvSk8CUSlFl3SlrSnSl8GnSmAboSmGT8SmJU8\", \"ATLnDlATrAZoATrJX4ATrMT8ATrMX4ATrRTrATvDl8ATvJUoATvMl8AT3AToAT3MX8AT8CT3AT8DT8AT8HZrAT8HgoAUAgFnAUCTFnAXoMX8AXrAT8AXrGgvAXrJXvAXrOgoAXvLl3AZvAgoAZvFbrAZvJXoAZvJl8AZvJn3AZvMX8AZvSbrAZ8FZoAZ8LZ8AZ8MU8AZ8OTvAZ8SV8AZ8SX3AbAgFZAboJnoAbvGboAb8ATrAb8AZoAb8AgrAb8Al4Ab8Db8Ab8JnoAb8LX4Ab8LZrAb8LhrAb8MT8Ab8OUoAb8Qb8Ab8ST8AcrAUoAcrAc8AcrCZ3AcrFT3AcrFZrAcrJl4AcrJn3AcrMX3AcrOTvAc8AZ8Ac8MT8AfAcJXAgoFn4AgoGgvAgoGnrAgoLc8AgoMXoAgrLnrAkrSZ8AlFXCTAloHboAlrHbrAlrLhrAlrLkoAl3CZrAl3LUoAl3LZrAnrAl4AnrMT8An3HT4BT3IToBX4MnvBb!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\", \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\", \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\", \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\", \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\", \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"];\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\n\nfunction getHangul(code) {\n  if (code >= 40) {\n    code = code + 168 - 40;\n  } else if (code >= 19) {\n    code = code + 97 - 19;\n  }\n\n  return toUtf8String([225, (code >> 6) + 132, (code & 63) + 128]);\n}\n\nlet wordlist$5 = null;\n\nfunction loadWords$5(lang) {\n  if (wordlist$5 != null) {\n    return;\n  }\n\n  wordlist$5 = [];\n  data$1.forEach((data, length) => {\n    length += 4;\n\n    for (let i = 0; i < data.length; i += length) {\n      let word = \"\";\n\n      for (let j = 0; j < length; j++) {\n        word += getHangul(codes.indexOf(data[i + j]));\n      }\n\n      wordlist$5.push(word);\n    }\n  });\n  wordlist$5.sort();\n\n  if (Wordlist.check(lang) !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n    wordlist$5 = null;\n    throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n  }\n}\n\nclass LangKo extends Wordlist {\n  constructor() {\n    super(\"ko\");\n  }\n\n  getWord(index) {\n    loadWords$5(this);\n    return wordlist$5[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$5(this);\n    return wordlist$5.indexOf(word);\n  }\n\n}\n\nconst langKo = new LangKo();\nWordlist.register(langKo);\n\"use strict\";\n\nconst words$4 = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\nlet wordlist$6 = null;\n\nfunction loadWords$6(lang) {\n  if (wordlist$6 != null) {\n    return;\n  }\n\n  wordlist$6 = words$4.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n  if (Wordlist.check(lang) !== \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\") {\n    wordlist$6 = null;\n    throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\");\n  }\n}\n\nclass LangIt extends Wordlist {\n  constructor() {\n    super(\"it\");\n  }\n\n  getWord(index) {\n    loadWords$6(this);\n    return wordlist$6[index];\n  }\n\n  getWordIndex(word) {\n    loadWords$6(this);\n    return wordlist$6.indexOf(word);\n  }\n\n}\n\nconst langIt = new LangIt();\nWordlist.register(langIt);\n\"use strict\";\n\nconst data$2 = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\nconst wordlist$7 = {\n  zh_cn: null,\n  zh_tw: null\n};\nconst Checks = {\n  zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n  zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n};\nconst codes$1 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\n\nfunction loadWords$7(lang) {\n  if (wordlist$7[lang.locale] !== null) {\n    return;\n  }\n\n  wordlist$7[lang.locale] = [];\n  let deltaOffset = 0;\n\n  for (let i = 0; i < 2048; i++) {\n    const s = style.indexOf(data$2[i * 3]);\n    const bytes = [228 + (s >> 2), 128 + codes$1.indexOf(data$2[i * 3 + 1]), 128 + codes$1.indexOf(data$2[i * 3 + 2])];\n\n    if (lang.locale === \"zh_tw\") {\n      const common = s % 4;\n\n      for (let i = common; i < 3; i++) {\n        bytes[i] = codes$1.indexOf(deltaData[deltaOffset++]) + (i == 0 ? 228 : 128);\n      }\n    }\n\n    wordlist$7[lang.locale].push(toUtf8String(bytes));\n  }\n\n  if (Wordlist.check(lang) !== Checks[lang.locale]) {\n    wordlist$7[lang.locale] = null;\n    throw new Error(\"BIP39 Wordlist for \" + lang.locale + \" (Chinese) FAILED\");\n  }\n}\n\nclass LangZh extends Wordlist {\n  constructor(country) {\n    super(\"zh_\" + country);\n  }\n\n  getWord(index) {\n    loadWords$7(this);\n    return wordlist$7[this.locale][index];\n  }\n\n  getWordIndex(word) {\n    loadWords$7(this);\n    return wordlist$7[this.locale].indexOf(word);\n  }\n\n  split(mnemonic) {\n    mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, \"\");\n    return mnemonic.split(\"\");\n  }\n\n}\n\nconst langZhCn = new LangZh(\"cn\");\nWordlist.register(langZhCn);\nWordlist.register(langZhCn, \"zh\");\nconst langZhTw = new LangZh(\"tw\");\nWordlist.register(langZhTw);\nconst wordlists = {\n  cz: langCz,\n  en: langEn,\n  es: langEs,\n  fr: langFr,\n  it: langIt,\n  ja: langJa,\n  ko: langKo,\n  zh: langZhCn,\n  zh_cn: langZhCn,\n  zh_tw: langZhTw\n};\n\"use strict\";\n\nconst version$g = \"hdnode/5.1.0\";\n\"use strict\";\n\nconst logger$l = new Logger(version$g);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 2147483648;\n\nfunction getUpperMask(bits) {\n  return (1 << bits) - 1 << 8 - bits;\n}\n\nfunction getLowerMask(bits) {\n  return (1 << bits) - 1;\n}\n\nfunction bytes32(value) {\n  return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data) {\n  return Base58.encode(concat([data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4)]));\n}\n\nfunction getWordlist(wordlist) {\n  if (wordlist == null) {\n    return wordlists[\"en\"];\n  }\n\n  if (typeof wordlist === \"string\") {\n    const words = wordlists[wordlist];\n\n    if (words == null) {\n      logger$l.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n    }\n\n    return words;\n  }\n\n  return wordlist;\n}\n\nconst _constructorGuard$3 = {};\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n\nclass HDNode {\n  constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n    logger$l.checkNew(new.target, HDNode);\n\n    if (constructorGuard !== _constructorGuard$3) {\n      throw new Error(\"HDNode constructor cannot be called directly\");\n    }\n\n    if (privateKey) {\n      const signingKey = new SigningKey(privateKey);\n      defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n      defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n    } else {\n      defineReadOnly(this, \"privateKey\", null);\n      defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n    }\n\n    defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n    defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160$1(sha256$1(this.publicKey)), 0, 4));\n    defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n    defineReadOnly(this, \"chainCode\", chainCode);\n    defineReadOnly(this, \"index\", index);\n    defineReadOnly(this, \"depth\", depth);\n\n    if (mnemonicOrPath == null) {\n      defineReadOnly(this, \"mnemonic\", null);\n      defineReadOnly(this, \"path\", null);\n    } else if (typeof mnemonicOrPath === \"string\") {\n      defineReadOnly(this, \"mnemonic\", null);\n      defineReadOnly(this, \"path\", mnemonicOrPath);\n    } else {\n      defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n      defineReadOnly(this, \"path\", mnemonicOrPath.path);\n    }\n  }\n\n  get extendedKey() {\n    if (this.depth >= 256) {\n      throw new Error(\"Depth too large!\");\n    }\n\n    return base58check(concat([this.privateKey != null ? \"0x0488ADE4\" : \"0x0488B21E\", hexlify(this.depth), this.parentFingerprint, hexZeroPad(hexlify(this.index), 4), this.chainCode, this.privateKey != null ? concat([\"0x00\", this.privateKey]) : this.publicKey]));\n  }\n\n  neuter() {\n    return new HDNode(_constructorGuard$3, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n  }\n\n  _derive(index) {\n    if (index > 4294967295) {\n      throw new Error(\"invalid index - \" + String(index));\n    }\n\n    let path = this.path;\n\n    if (path) {\n      path += \"/\" + (index & ~HardenedBit);\n    }\n\n    const data = new Uint8Array(37);\n\n    if (index & HardenedBit) {\n      if (!this.privateKey) {\n        throw new Error(\"cannot derive child of neutered node\");\n      }\n\n      data.set(arrayify(this.privateKey), 1);\n\n      if (path) {\n        path += \"'\";\n      }\n    } else {\n      data.set(arrayify(this.publicKey));\n    }\n\n    for (let i = 24; i >= 0; i -= 8) {\n      data[33 + (i >> 3)] = index >> 24 - i & 255;\n    }\n\n    const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    let ki = null;\n    let Ki = null;\n\n    if (this.privateKey) {\n      ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n    } else {\n      const ek = new SigningKey(hexlify(IL));\n      Ki = ek._addPoint(this.publicKey);\n    }\n\n    let mnemonicOrPath = path;\n    const srcMnemonic = this.mnemonic;\n\n    if (srcMnemonic) {\n      mnemonicOrPath = Object.freeze({\n        phrase: srcMnemonic.phrase,\n        path: path,\n        locale: srcMnemonic.locale || \"en\"\n      });\n    }\n\n    return new HDNode(_constructorGuard$3, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n  }\n\n  derivePath(path) {\n    const components = path.split(\"/\");\n\n    if (components.length === 0 || components[0] === \"m\" && this.depth !== 0) {\n      throw new Error(\"invalid path - \" + path);\n    }\n\n    if (components[0] === \"m\") {\n      components.shift();\n    }\n\n    let result = this;\n\n    for (let i = 0; i < components.length; i++) {\n      const component = components[i];\n\n      if (component.match(/^[0-9]+'$/)) {\n        const index = parseInt(component.substring(0, component.length - 1));\n\n        if (index >= HardenedBit) {\n          throw new Error(\"invalid path index - \" + component);\n        }\n\n        result = result._derive(HardenedBit + index);\n      } else if (component.match(/^[0-9]+$/)) {\n        const index = parseInt(component);\n\n        if (index >= HardenedBit) {\n          throw new Error(\"invalid path index - \" + component);\n        }\n\n        result = result._derive(index);\n      } else {\n        throw new Error(\"invalid path component - \" + component);\n      }\n    }\n\n    return result;\n  }\n\n  static _fromSeed(seed, mnemonic) {\n    const seedArray = arrayify(seed);\n\n    if (seedArray.length < 16 || seedArray.length > 64) {\n      throw new Error(\"invalid seed\");\n    }\n\n    const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n    return new HDNode(_constructorGuard$3, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n  }\n\n  static fromMnemonic(mnemonic, password, wordlist) {\n    wordlist = getWordlist(wordlist);\n    mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n    return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n      phrase: mnemonic,\n      path: \"m\",\n      locale: wordlist.locale\n    });\n  }\n\n  static fromSeed(seed) {\n    return HDNode._fromSeed(seed, null);\n  }\n\n  static fromExtendedKey(extendedKey) {\n    const bytes = Base58.decode(extendedKey);\n\n    if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n      logger$l.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n\n    const depth = bytes[4];\n    const parentFingerprint = hexlify(bytes.slice(5, 9));\n    const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n    const chainCode = hexlify(bytes.slice(13, 45));\n    const key = bytes.slice(45, 78);\n\n    switch (hexlify(bytes.slice(0, 4))) {\n      case \"0x0488b21e\":\n      case \"0x043587cf\":\n        return new HDNode(_constructorGuard$3, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n      case \"0x0488ade4\":\n      case \"0x04358394 \":\n        if (key[0] !== 0) {\n          break;\n        }\n\n        return new HDNode(_constructorGuard$3, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n    }\n\n    return logger$l.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n  }\n\n}\n\nfunction mnemonicToSeed(mnemonic, password) {\n  if (!password) {\n    password = \"\";\n  }\n\n  const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n  return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n  wordlist = getWordlist(wordlist);\n  logger$l.checkNormalize();\n  const words = wordlist.split(mnemonic);\n\n  if (words.length % 3 !== 0) {\n    throw new Error(\"invalid mnemonic\");\n  }\n\n  const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n  let offset = 0;\n\n  for (let i = 0; i < words.length; i++) {\n    let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n\n    if (index === -1) {\n      throw new Error(\"invalid mnemonic\");\n    }\n\n    for (let bit = 0; bit < 11; bit++) {\n      if (index & 1 << 10 - bit) {\n        entropy[offset >> 3] |= 1 << 7 - offset % 8;\n      }\n\n      offset++;\n    }\n  }\n\n  const entropyBits = 32 * words.length / 3;\n  const checksumBits = words.length / 3;\n  const checksumMask = getUpperMask(checksumBits);\n  const checksum = arrayify(sha256$1(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n  if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n    throw new Error(\"invalid checksum\");\n  }\n\n  return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nfunction entropyToMnemonic(entropy, wordlist) {\n  wordlist = getWordlist(wordlist);\n  entropy = arrayify(entropy);\n\n  if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {\n    throw new Error(\"invalid entropy\");\n  }\n\n  const indices = [0];\n  let remainingBits = 11;\n\n  for (let i = 0; i < entropy.length; i++) {\n    if (remainingBits > 8) {\n      indices[indices.length - 1] <<= 8;\n      indices[indices.length - 1] |= entropy[i];\n      remainingBits -= 8;\n    } else {\n      indices[indices.length - 1] <<= remainingBits;\n      indices[indices.length - 1] |= entropy[i] >> 8 - remainingBits;\n      indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n      remainingBits += 3;\n    }\n  }\n\n  const checksumBits = entropy.length / 4;\n  const checksum = arrayify(sha256$1(entropy))[0] & getUpperMask(checksumBits);\n  indices[indices.length - 1] <<= checksumBits;\n  indices[indices.length - 1] |= checksum >> 8 - checksumBits;\n  return wordlist.join(indices.map(index => wordlist.getWord(index)));\n}\n\nfunction isValidMnemonic(mnemonic, wordlist) {\n  try {\n    mnemonicToEntropy(mnemonic, wordlist);\n    return true;\n  } catch (error) {}\n\n  return false;\n}\n\nconst version$h = \"random/5.1.0\";\n\"use strict\";\n\nconst logger$m = new Logger(version$h);\nlet anyGlobal = null;\n\ntry {\n  anyGlobal = window;\n\n  if (anyGlobal == null) {\n    throw new Error(\"try next\");\n  }\n} catch (error) {\n  try {\n    anyGlobal = global;\n\n    if (anyGlobal == null) {\n      throw new Error(\"try next\");\n    }\n  } catch (error) {\n    anyGlobal = {};\n  }\n}\n\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\n\nif (!crypto || !crypto.getRandomValues) {\n  logger$m.warn(\"WARNING: Missing strong random number source\");\n  crypto = {\n    getRandomValues: function (buffer) {\n      return logger$m.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"crypto.getRandomValues\"\n      });\n    }\n  };\n}\n\nfunction randomBytes(length) {\n  if (length <= 0 || length > 1024 || length % 1) {\n    logger$m.throwArgumentError(\"invalid length\", \"length\", length);\n  }\n\n  const result = new Uint8Array(length);\n  crypto.getRandomValues(result);\n  return arrayify(result);\n}\n\n\"use strict\";\n\nfunction shuffled(array) {\n  array = array.slice();\n\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const tmp = array[i];\n    array[i] = array[j];\n    array[j] = tmp;\n  }\n\n  return array;\n}\n\n\"use strict\";\n\nvar aesJs = createCommonjsModule(function (module, exports) {\n  \"use strict\";\n\n  (function (root) {\n    function checkInt(value) {\n      return parseInt(value) === value;\n    }\n\n    function checkInts(arrayish) {\n      if (!checkInt(arrayish.length)) {\n        return false;\n      }\n\n      for (var i = 0; i < arrayish.length; i++) {\n        if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function coerceArray(arg, copy) {\n      if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === \"Uint8Array\") {\n        if (copy) {\n          if (arg.slice) {\n            arg = arg.slice();\n          } else {\n            arg = Array.prototype.slice.call(arg);\n          }\n        }\n\n        return arg;\n      }\n\n      if (Array.isArray(arg)) {\n        if (!checkInts(arg)) {\n          throw new Error(\"Array contains invalid value: \" + arg);\n        }\n\n        return new Uint8Array(arg);\n      }\n\n      if (checkInt(arg.length) && checkInts(arg)) {\n        return new Uint8Array(arg);\n      }\n\n      throw new Error(\"unsupported array-like object\");\n    }\n\n    function createArray(length) {\n      return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n      if (sourceStart != null || sourceEnd != null) {\n        if (sourceArray.slice) {\n          sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n        } else {\n          sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n        }\n      }\n\n      targetArray.set(sourceArray, targetStart);\n    }\n\n    var convertUtf8 = function () {\n      function toBytes(text) {\n        var result = [],\n            i = 0;\n        text = encodeURI(text);\n\n        while (i < text.length) {\n          var c = text.charCodeAt(i++);\n\n          if (c === 37) {\n            result.push(parseInt(text.substr(i, 2), 16));\n            i += 2;\n          } else {\n            result.push(c);\n          }\n        }\n\n        return coerceArray(result);\n      }\n\n      function fromBytes(bytes) {\n        var result = [],\n            i = 0;\n\n        while (i < bytes.length) {\n          var c = bytes[i];\n\n          if (c < 128) {\n            result.push(String.fromCharCode(c));\n            i++;\n          } else if (c > 191 && c < 224) {\n            result.push(String.fromCharCode((c & 31) << 6 | bytes[i + 1] & 63));\n            i += 2;\n          } else {\n            result.push(String.fromCharCode((c & 15) << 12 | (bytes[i + 1] & 63) << 6 | bytes[i + 2] & 63));\n            i += 3;\n          }\n        }\n\n        return result.join(\"\");\n      }\n\n      return {\n        toBytes: toBytes,\n        fromBytes: fromBytes\n      };\n    }();\n\n    var convertHex = function () {\n      function toBytes(text) {\n        var result = [];\n\n        for (var i = 0; i < text.length; i += 2) {\n          result.push(parseInt(text.substr(i, 2), 16));\n        }\n\n        return result;\n      }\n\n      var Hex = \"0123456789abcdef\";\n\n      function fromBytes(bytes) {\n        var result = [];\n\n        for (var i = 0; i < bytes.length; i++) {\n          var v = bytes[i];\n          result.push(Hex[(v & 240) >> 4] + Hex[v & 15]);\n        }\n\n        return result.join(\"\");\n      }\n\n      return {\n        toBytes: toBytes,\n        fromBytes: fromBytes\n      };\n    }();\n\n    var numberOfRounds = {\n      16: 10,\n      24: 12,\n      32: 14\n    };\n    var rcon = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145];\n    var S = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22];\n    var Si = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125];\n    var T1 = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986];\n    var T2 = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766];\n    var T3 = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126];\n    var T4 = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436];\n    var T5 = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890];\n    var T6 = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935];\n    var T7 = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600];\n    var T8 = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480];\n    var U1 = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795];\n    var U2 = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855];\n    var U3 = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150];\n    var U4 = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];\n\n    function convertToInt32(bytes) {\n      var result = [];\n\n      for (var i = 0; i < bytes.length; i += 4) {\n        result.push(bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]);\n      }\n\n      return result;\n    }\n\n    var AES = function (key) {\n      if (!(this instanceof AES)) {\n        throw Error(\"AES must be instanitated with `new`\");\n      }\n\n      Object.defineProperty(this, \"key\", {\n        value: coerceArray(key, true)\n      });\n\n      this._prepare();\n    };\n\n    AES.prototype._prepare = function () {\n      var rounds = numberOfRounds[this.key.length];\n\n      if (rounds == null) {\n        throw new Error(\"invalid key size (must be 16, 24 or 32 bytes)\");\n      }\n\n      this._Ke = [];\n      this._Kd = [];\n\n      for (var i = 0; i <= rounds; i++) {\n        this._Ke.push([0, 0, 0, 0]);\n\n        this._Kd.push([0, 0, 0, 0]);\n      }\n\n      var roundKeyCount = (rounds + 1) * 4;\n      var KC = this.key.length / 4;\n      var tk = convertToInt32(this.key);\n      var index;\n\n      for (var i = 0; i < KC; i++) {\n        index = i >> 2;\n        this._Ke[index][i % 4] = tk[i];\n        this._Kd[rounds - index][i % 4] = tk[i];\n      }\n\n      var rconpointer = 0;\n      var t = KC,\n          tt;\n\n      while (t < roundKeyCount) {\n        tt = tk[KC - 1];\n        tk[0] ^= S[tt >> 16 & 255] << 24 ^ S[tt >> 8 & 255] << 16 ^ S[tt & 255] << 8 ^ S[tt >> 24 & 255] ^ rcon[rconpointer] << 24;\n        rconpointer += 1;\n\n        if (KC != 8) {\n          for (var i = 1; i < KC; i++) {\n            tk[i] ^= tk[i - 1];\n          }\n        } else {\n          for (var i = 1; i < KC / 2; i++) {\n            tk[i] ^= tk[i - 1];\n          }\n\n          tt = tk[KC / 2 - 1];\n          tk[KC / 2] ^= S[tt & 255] ^ S[tt >> 8 & 255] << 8 ^ S[tt >> 16 & 255] << 16 ^ S[tt >> 24 & 255] << 24;\n\n          for (var i = KC / 2 + 1; i < KC; i++) {\n            tk[i] ^= tk[i - 1];\n          }\n        }\n\n        var i = 0,\n            r,\n            c;\n\n        while (i < KC && t < roundKeyCount) {\n          r = t >> 2;\n          c = t % 4;\n          this._Ke[r][c] = tk[i];\n          this._Kd[rounds - r][c] = tk[i++];\n          t++;\n        }\n      }\n\n      for (var r = 1; r < rounds; r++) {\n        for (var c = 0; c < 4; c++) {\n          tt = this._Kd[r][c];\n          this._Kd[r][c] = U1[tt >> 24 & 255] ^ U2[tt >> 16 & 255] ^ U3[tt >> 8 & 255] ^ U4[tt & 255];\n        }\n      }\n    };\n\n    AES.prototype.encrypt = function (plaintext) {\n      if (plaintext.length != 16) {\n        throw new Error(\"invalid plaintext size (must be 16 bytes)\");\n      }\n\n      var rounds = this._Ke.length - 1;\n      var a = [0, 0, 0, 0];\n      var t = convertToInt32(plaintext);\n\n      for (var i = 0; i < 4; i++) {\n        t[i] ^= this._Ke[0][i];\n      }\n\n      for (var r = 1; r < rounds; r++) {\n        for (var i = 0; i < 4; i++) {\n          a[i] = T1[t[i] >> 24 & 255] ^ T2[t[(i + 1) % 4] >> 16 & 255] ^ T3[t[(i + 2) % 4] >> 8 & 255] ^ T4[t[(i + 3) % 4] & 255] ^ this._Ke[r][i];\n        }\n\n        t = a.slice();\n      }\n\n      var result = createArray(16),\n          tt;\n\n      for (var i = 0; i < 4; i++) {\n        tt = this._Ke[rounds][i];\n        result[4 * i] = (S[t[i] >> 24 & 255] ^ tt >> 24) & 255;\n        result[4 * i + 1] = (S[t[(i + 1) % 4] >> 16 & 255] ^ tt >> 16) & 255;\n        result[4 * i + 2] = (S[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8) & 255;\n        result[4 * i + 3] = (S[t[(i + 3) % 4] & 255] ^ tt) & 255;\n      }\n\n      return result;\n    };\n\n    AES.prototype.decrypt = function (ciphertext) {\n      if (ciphertext.length != 16) {\n        throw new Error(\"invalid ciphertext size (must be 16 bytes)\");\n      }\n\n      var rounds = this._Kd.length - 1;\n      var a = [0, 0, 0, 0];\n      var t = convertToInt32(ciphertext);\n\n      for (var i = 0; i < 4; i++) {\n        t[i] ^= this._Kd[0][i];\n      }\n\n      for (var r = 1; r < rounds; r++) {\n        for (var i = 0; i < 4; i++) {\n          a[i] = T5[t[i] >> 24 & 255] ^ T6[t[(i + 3) % 4] >> 16 & 255] ^ T7[t[(i + 2) % 4] >> 8 & 255] ^ T8[t[(i + 1) % 4] & 255] ^ this._Kd[r][i];\n        }\n\n        t = a.slice();\n      }\n\n      var result = createArray(16),\n          tt;\n\n      for (var i = 0; i < 4; i++) {\n        tt = this._Kd[rounds][i];\n        result[4 * i] = (Si[t[i] >> 24 & 255] ^ tt >> 24) & 255;\n        result[4 * i + 1] = (Si[t[(i + 3) % 4] >> 16 & 255] ^ tt >> 16) & 255;\n        result[4 * i + 2] = (Si[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8) & 255;\n        result[4 * i + 3] = (Si[t[(i + 1) % 4] & 255] ^ tt) & 255;\n      }\n\n      return result;\n    };\n\n    var ModeOfOperationECB = function (key) {\n      if (!(this instanceof ModeOfOperationECB)) {\n        throw Error(\"AES must be instanitated with `new`\");\n      }\n\n      this.description = \"Electronic Code Block\";\n      this.name = \"ecb\";\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationECB.prototype.encrypt = function (plaintext) {\n      plaintext = coerceArray(plaintext);\n\n      if (plaintext.length % 16 !== 0) {\n        throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\");\n      }\n\n      var ciphertext = createArray(plaintext.length);\n      var block = createArray(16);\n\n      for (var i = 0; i < plaintext.length; i += 16) {\n        copyArray(plaintext, block, 0, i, i + 16);\n        block = this._aes.encrypt(block);\n        copyArray(block, ciphertext, i);\n      }\n\n      return ciphertext;\n    };\n\n    ModeOfOperationECB.prototype.decrypt = function (ciphertext) {\n      ciphertext = coerceArray(ciphertext);\n\n      if (ciphertext.length % 16 !== 0) {\n        throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n      }\n\n      var plaintext = createArray(ciphertext.length);\n      var block = createArray(16);\n\n      for (var i = 0; i < ciphertext.length; i += 16) {\n        copyArray(ciphertext, block, 0, i, i + 16);\n        block = this._aes.decrypt(block);\n        copyArray(block, plaintext, i);\n      }\n\n      return plaintext;\n    };\n\n    var ModeOfOperationCBC = function (key, iv) {\n      if (!(this instanceof ModeOfOperationCBC)) {\n        throw Error(\"AES must be instanitated with `new`\");\n      }\n\n      this.description = \"Cipher Block Chaining\";\n      this.name = \"cbc\";\n\n      if (!iv) {\n        iv = createArray(16);\n      } else if (iv.length != 16) {\n        throw new Error(\"invalid initialation vector size (must be 16 bytes)\");\n      }\n\n      this._lastCipherblock = coerceArray(iv, true);\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationCBC.prototype.encrypt = function (plaintext) {\n      plaintext = coerceArray(plaintext);\n\n      if (plaintext.length % 16 !== 0) {\n        throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\");\n      }\n\n      var ciphertext = createArray(plaintext.length);\n      var block = createArray(16);\n\n      for (var i = 0; i < plaintext.length; i += 16) {\n        copyArray(plaintext, block, 0, i, i + 16);\n\n        for (var j = 0; j < 16; j++) {\n          block[j] ^= this._lastCipherblock[j];\n        }\n\n        this._lastCipherblock = this._aes.encrypt(block);\n        copyArray(this._lastCipherblock, ciphertext, i);\n      }\n\n      return ciphertext;\n    };\n\n    ModeOfOperationCBC.prototype.decrypt = function (ciphertext) {\n      ciphertext = coerceArray(ciphertext);\n\n      if (ciphertext.length % 16 !== 0) {\n        throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n      }\n\n      var plaintext = createArray(ciphertext.length);\n      var block = createArray(16);\n\n      for (var i = 0; i < ciphertext.length; i += 16) {\n        copyArray(ciphertext, block, 0, i, i + 16);\n        block = this._aes.decrypt(block);\n\n        for (var j = 0; j < 16; j++) {\n          plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n        }\n\n        copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n      }\n\n      return plaintext;\n    };\n\n    var ModeOfOperationCFB = function (key, iv, segmentSize) {\n      if (!(this instanceof ModeOfOperationCFB)) {\n        throw Error(\"AES must be instanitated with `new`\");\n      }\n\n      this.description = \"Cipher Feedback\";\n      this.name = \"cfb\";\n\n      if (!iv) {\n        iv = createArray(16);\n      } else if (iv.length != 16) {\n        throw new Error(\"invalid initialation vector size (must be 16 size)\");\n      }\n\n      if (!segmentSize) {\n        segmentSize = 1;\n      }\n\n      this.segmentSize = segmentSize;\n      this._shiftRegister = coerceArray(iv, true);\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationCFB.prototype.encrypt = function (plaintext) {\n      if (plaintext.length % this.segmentSize != 0) {\n        throw new Error(\"invalid plaintext size (must be segmentSize bytes)\");\n      }\n\n      var encrypted = coerceArray(plaintext, true);\n      var xorSegment;\n\n      for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n        xorSegment = this._aes.encrypt(this._shiftRegister);\n\n        for (var j = 0; j < this.segmentSize; j++) {\n          encrypted[i + j] ^= xorSegment[j];\n        }\n\n        copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n        copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n      }\n\n      return encrypted;\n    };\n\n    ModeOfOperationCFB.prototype.decrypt = function (ciphertext) {\n      if (ciphertext.length % this.segmentSize != 0) {\n        throw new Error(\"invalid ciphertext size (must be segmentSize bytes)\");\n      }\n\n      var plaintext = coerceArray(ciphertext, true);\n      var xorSegment;\n\n      for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n        xorSegment = this._aes.encrypt(this._shiftRegister);\n\n        for (var j = 0; j < this.segmentSize; j++) {\n          plaintext[i + j] ^= xorSegment[j];\n        }\n\n        copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n        copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n      }\n\n      return plaintext;\n    };\n\n    var ModeOfOperationOFB = function (key, iv) {\n      if (!(this instanceof ModeOfOperationOFB)) {\n        throw Error(\"AES must be instanitated with `new`\");\n      }\n\n      this.description = \"Output Feedback\";\n      this.name = \"ofb\";\n\n      if (!iv) {\n        iv = createArray(16);\n      } else if (iv.length != 16) {\n        throw new Error(\"invalid initialation vector size (must be 16 bytes)\");\n      }\n\n      this._lastPrecipher = coerceArray(iv, true);\n      this._lastPrecipherIndex = 16;\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationOFB.prototype.encrypt = function (plaintext) {\n      var encrypted = coerceArray(plaintext, true);\n\n      for (var i = 0; i < encrypted.length; i++) {\n        if (this._lastPrecipherIndex === 16) {\n          this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n          this._lastPrecipherIndex = 0;\n        }\n\n        encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n      }\n\n      return encrypted;\n    };\n\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n    var Counter = function (initialValue) {\n      if (!(this instanceof Counter)) {\n        throw Error(\"Counter must be instanitated with `new`\");\n      }\n\n      if (initialValue !== 0 && !initialValue) {\n        initialValue = 1;\n      }\n\n      if (typeof initialValue === \"number\") {\n        this._counter = createArray(16);\n        this.setValue(initialValue);\n      } else {\n        this.setBytes(initialValue);\n      }\n    };\n\n    Counter.prototype.setValue = function (value) {\n      if (typeof value !== \"number\" || parseInt(value) != value) {\n        throw new Error(\"invalid counter value (must be an integer)\");\n      }\n\n      for (var index = 15; index >= 0; --index) {\n        this._counter[index] = value % 256;\n        value = value >> 8;\n      }\n    };\n\n    Counter.prototype.setBytes = function (bytes) {\n      bytes = coerceArray(bytes, true);\n\n      if (bytes.length != 16) {\n        throw new Error(\"invalid counter bytes size (must be 16 bytes)\");\n      }\n\n      this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function () {\n      for (var i = 15; i >= 0; i--) {\n        if (this._counter[i] === 255) {\n          this._counter[i] = 0;\n        } else {\n          this._counter[i]++;\n          break;\n        }\n      }\n    };\n\n    var ModeOfOperationCTR = function (key, counter) {\n      if (!(this instanceof ModeOfOperationCTR)) {\n        throw Error(\"AES must be instanitated with `new`\");\n      }\n\n      this.description = \"Counter\";\n      this.name = \"ctr\";\n\n      if (!(counter instanceof Counter)) {\n        counter = new Counter(counter);\n      }\n\n      this._counter = counter;\n      this._remainingCounter = null;\n      this._remainingCounterIndex = 16;\n      this._aes = new AES(key);\n    };\n\n    ModeOfOperationCTR.prototype.encrypt = function (plaintext) {\n      var encrypted = coerceArray(plaintext, true);\n\n      for (var i = 0; i < encrypted.length; i++) {\n        if (this._remainingCounterIndex === 16) {\n          this._remainingCounter = this._aes.encrypt(this._counter._counter);\n          this._remainingCounterIndex = 0;\n\n          this._counter.increment();\n        }\n\n        encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n      }\n\n      return encrypted;\n    };\n\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n    function pkcs7pad(data) {\n      data = coerceArray(data, true);\n      var padder = 16 - data.length % 16;\n      var result = createArray(data.length + padder);\n      copyArray(data, result);\n\n      for (var i = data.length; i < result.length; i++) {\n        result[i] = padder;\n      }\n\n      return result;\n    }\n\n    function pkcs7strip(data) {\n      data = coerceArray(data, true);\n\n      if (data.length < 16) {\n        throw new Error(\"PKCS#7 invalid length\");\n      }\n\n      var padder = data[data.length - 1];\n\n      if (padder > 16) {\n        throw new Error(\"PKCS#7 padding byte out of range\");\n      }\n\n      var length = data.length - padder;\n\n      for (var i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n          throw new Error(\"PKCS#7 invalid padding byte\");\n        }\n      }\n\n      var result = createArray(length);\n      copyArray(data, result, 0, 0, length);\n      return result;\n    }\n\n    var aesjs = {\n      AES: AES,\n      Counter: Counter,\n      ModeOfOperation: {\n        ecb: ModeOfOperationECB,\n        cbc: ModeOfOperationCBC,\n        cfb: ModeOfOperationCFB,\n        ofb: ModeOfOperationOFB,\n        ctr: ModeOfOperationCTR\n      },\n      utils: {\n        hex: convertHex,\n        utf8: convertUtf8\n      },\n      padding: {\n        pkcs7: {\n          pad: pkcs7pad,\n          strip: pkcs7strip\n        }\n      },\n      _arrayTest: {\n        coerceArray: coerceArray,\n        createArray: createArray,\n        copyArray: copyArray\n      }\n    };\n\n    if (\"object\" !== \"undefined\") {\n      module.exports = aesjs;\n    } else if (typeof undefined === \"function\" && undefined.amd) {\n      undefined(aesjs);\n    } else {\n      if (root.aesjs) {\n        aesjs._aesjs = root.aesjs;\n      }\n\n      root.aesjs = aesjs;\n    }\n  })(commonjsGlobal);\n});\nconst version$i = \"json-wallets/5.1.0\";\n\"use strict\";\n\nfunction looseArrayify(hexString) {\n  if (typeof hexString === \"string\" && hexString.substring(0, 2) !== \"0x\") {\n    hexString = \"0x\" + hexString;\n  }\n\n  return arrayify(hexString);\n}\n\nfunction zpad(value, length) {\n  value = String(value);\n\n  while (value.length < length) {\n    value = \"0\" + value;\n  }\n\n  return value;\n}\n\nfunction getPassword(password) {\n  if (typeof password === \"string\") {\n    return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n  }\n\n  return arrayify(password);\n}\n\nfunction searchPath(object, path) {\n  let currentChild = object;\n  const comps = path.toLowerCase().split(\"/\");\n\n  for (let i = 0; i < comps.length; i++) {\n    let matchingChild = null;\n\n    for (const key in currentChild) {\n      if (key.toLowerCase() === comps[i]) {\n        matchingChild = currentChild[key];\n        break;\n      }\n    }\n\n    if (matchingChild === null) {\n      return null;\n    }\n\n    currentChild = matchingChild;\n  }\n\n  return currentChild;\n}\n\nfunction uuidV4(randomBytes) {\n  const bytes = arrayify(randomBytes);\n  bytes[6] = bytes[6] & 15 | 64;\n  bytes[8] = bytes[8] & 63 | 128;\n  const value = hexlify(bytes);\n  return [value.substring(2, 10), value.substring(10, 14), value.substring(14, 18), value.substring(18, 22), value.substring(22, 34)].join(\"-\");\n}\n\n\"use strict\";\n\nconst logger$n = new Logger(version$i);\n\nclass CrowdsaleAccount extends Description {\n  isCrowdsaleAccount(value) {\n    return !!(value && value._isCrowdsaleAccount);\n  }\n\n}\n\nfunction decrypt(json, password) {\n  const data = JSON.parse(json);\n  password = getPassword(password);\n  const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n  const encseed = looseArrayify(searchPath(data, \"encseed\"));\n\n  if (!encseed || encseed.length % 16 !== 0) {\n    logger$n.throwArgumentError(\"invalid encseed\", \"json\", json);\n  }\n\n  const key = arrayify(pbkdf2(password, password, 2e3, 32, \"sha256\")).slice(0, 16);\n  const iv = encseed.slice(0, 16);\n  const encryptedSeed = encseed.slice(16);\n  const aesCbc = new aesJs.ModeOfOperation.cbc(key, iv);\n  const seed = aesJs.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n  let seedHex = \"\";\n\n  for (let i = 0; i < seed.length; i++) {\n    seedHex += String.fromCharCode(seed[i]);\n  }\n\n  const seedHexBytes = toUtf8Bytes(seedHex);\n  const privateKey = keccak256(seedHexBytes);\n  return new CrowdsaleAccount({\n    _isCrowdsaleAccount: true,\n    address: ethaddr,\n    privateKey: privateKey\n  });\n}\n\n\"use strict\";\n\nfunction isCrowdsaleWallet(json) {\n  let data = null;\n\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n\n  return data.encseed && data.ethaddr;\n}\n\nfunction isKeystoreWallet(json) {\n  let data = null;\n\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n\n  if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getJsonWalletAddress(json) {\n  if (isCrowdsaleWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).ethaddr);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  if (isKeystoreWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).address);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  return null;\n}\n\nvar scrypt = createCommonjsModule(function (module, exports) {\n  \"use strict\";\n\n  (function (root) {\n    const MAX_VALUE = 2147483647;\n\n    function SHA256(m) {\n      const K = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);\n      let h0 = 1779033703,\n          h1 = 3144134277,\n          h2 = 1013904242,\n          h3 = 2773480762;\n      let h4 = 1359893119,\n          h5 = 2600822924,\n          h6 = 528734635,\n          h7 = 1541459225;\n      const w = new Uint32Array(64);\n\n      function blocks(p) {\n        let off = 0,\n            len = p.length;\n\n        while (len >= 64) {\n          let a = h0,\n              b = h1,\n              c = h2,\n              d = h3,\n              e = h4,\n              f = h5,\n              g = h6,\n              h = h7,\n              u,\n              i,\n              j,\n              t1,\n              t2;\n\n          for (i = 0; i < 16; i++) {\n            j = off + i * 4;\n            w[i] = (p[j] & 255) << 24 | (p[j + 1] & 255) << 16 | (p[j + 2] & 255) << 8 | p[j + 3] & 255;\n          }\n\n          for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;\n            u = w[i - 15];\n            t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0) | 0;\n          }\n\n          for (i = 0; i < 64; i++) {\n            t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;\n            t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = d + t1 | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = t1 + t2 | 0;\n          }\n\n          h0 = h0 + a | 0;\n          h1 = h1 + b | 0;\n          h2 = h2 + c | 0;\n          h3 = h3 + d | 0;\n          h4 = h4 + e | 0;\n          h5 = h5 + f | 0;\n          h6 = h6 + g | 0;\n          h7 = h7 + h | 0;\n          off += 64;\n          len -= 64;\n        }\n      }\n\n      blocks(m);\n      let i,\n          bytesLeft = m.length % 64,\n          bitLenHi = m.length / 536870912 | 0,\n          bitLenLo = m.length << 3,\n          numZeros = bytesLeft < 56 ? 56 : 120,\n          p = m.slice(m.length - bytesLeft, m.length);\n      p.push(128);\n\n      for (i = bytesLeft + 1; i < numZeros; i++) {\n        p.push(0);\n      }\n\n      p.push(bitLenHi >>> 24 & 255);\n      p.push(bitLenHi >>> 16 & 255);\n      p.push(bitLenHi >>> 8 & 255);\n      p.push(bitLenHi >>> 0 & 255);\n      p.push(bitLenLo >>> 24 & 255);\n      p.push(bitLenLo >>> 16 & 255);\n      p.push(bitLenLo >>> 8 & 255);\n      p.push(bitLenLo >>> 0 & 255);\n      blocks(p);\n      return [h0 >>> 24 & 255, h0 >>> 16 & 255, h0 >>> 8 & 255, h0 >>> 0 & 255, h1 >>> 24 & 255, h1 >>> 16 & 255, h1 >>> 8 & 255, h1 >>> 0 & 255, h2 >>> 24 & 255, h2 >>> 16 & 255, h2 >>> 8 & 255, h2 >>> 0 & 255, h3 >>> 24 & 255, h3 >>> 16 & 255, h3 >>> 8 & 255, h3 >>> 0 & 255, h4 >>> 24 & 255, h4 >>> 16 & 255, h4 >>> 8 & 255, h4 >>> 0 & 255, h5 >>> 24 & 255, h5 >>> 16 & 255, h5 >>> 8 & 255, h5 >>> 0 & 255, h6 >>> 24 & 255, h6 >>> 16 & 255, h6 >>> 8 & 255, h6 >>> 0 & 255, h7 >>> 24 & 255, h7 >>> 16 & 255, h7 >>> 8 & 255, h7 >>> 0 & 255];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n      password = password.length <= 64 ? password : SHA256(password);\n      const innerLen = 64 + salt.length + 4;\n      const inner = new Array(innerLen);\n      const outerKey = new Array(64);\n      let i;\n      let dk = [];\n\n      for (i = 0; i < 64; i++) {\n        inner[i] = 54;\n      }\n\n      for (i = 0; i < password.length; i++) {\n        inner[i] ^= password[i];\n      }\n\n      for (i = 0; i < salt.length; i++) {\n        inner[64 + i] = salt[i];\n      }\n\n      for (i = innerLen - 4; i < innerLen; i++) {\n        inner[i] = 0;\n      }\n\n      for (i = 0; i < 64; i++) outerKey[i] = 92;\n\n      for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n      function incrementCounter() {\n        for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n          inner[i]++;\n          if (inner[i] <= 255) return;\n          inner[i] = 0;\n        }\n      }\n\n      while (dkLen >= 32) {\n        incrementCounter();\n        dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n        dkLen -= 32;\n      }\n\n      if (dkLen > 0) {\n        incrementCounter();\n        dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n      }\n\n      return dk;\n    }\n\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n      let i;\n      arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n\n      for (i = 0; i < 2 * r; i++) {\n        blockxor(BY, i * 16, _X, 16);\n        salsa20_8(_X, x);\n        arraycopy(_X, 0, BY, Yi + i * 16, 16);\n      }\n\n      for (i = 0; i < r; i++) {\n        arraycopy(BY, Yi + i * 2 * 16, BY, i * 16, 16);\n      }\n\n      for (i = 0; i < r; i++) {\n        arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n      }\n    }\n\n    function R(a, b) {\n      return a << b | a >>> 32 - b;\n    }\n\n    function salsa20_8(B, x) {\n      arraycopy(B, 0, x, 0, 16);\n\n      for (let i = 8; i > 0; i -= 2) {\n        x[4] ^= R(x[0] + x[12], 7);\n        x[8] ^= R(x[4] + x[0], 9);\n        x[12] ^= R(x[8] + x[4], 13);\n        x[0] ^= R(x[12] + x[8], 18);\n        x[9] ^= R(x[5] + x[1], 7);\n        x[13] ^= R(x[9] + x[5], 9);\n        x[1] ^= R(x[13] + x[9], 13);\n        x[5] ^= R(x[1] + x[13], 18);\n        x[14] ^= R(x[10] + x[6], 7);\n        x[2] ^= R(x[14] + x[10], 9);\n        x[6] ^= R(x[2] + x[14], 13);\n        x[10] ^= R(x[6] + x[2], 18);\n        x[3] ^= R(x[15] + x[11], 7);\n        x[7] ^= R(x[3] + x[15], 9);\n        x[11] ^= R(x[7] + x[3], 13);\n        x[15] ^= R(x[11] + x[7], 18);\n        x[1] ^= R(x[0] + x[3], 7);\n        x[2] ^= R(x[1] + x[0], 9);\n        x[3] ^= R(x[2] + x[1], 13);\n        x[0] ^= R(x[3] + x[2], 18);\n        x[6] ^= R(x[5] + x[4], 7);\n        x[7] ^= R(x[6] + x[5], 9);\n        x[4] ^= R(x[7] + x[6], 13);\n        x[5] ^= R(x[4] + x[7], 18);\n        x[11] ^= R(x[10] + x[9], 7);\n        x[8] ^= R(x[11] + x[10], 9);\n        x[9] ^= R(x[8] + x[11], 13);\n        x[10] ^= R(x[9] + x[8], 18);\n        x[12] ^= R(x[15] + x[14], 7);\n        x[13] ^= R(x[12] + x[15], 9);\n        x[14] ^= R(x[13] + x[12], 13);\n        x[15] ^= R(x[14] + x[13], 18);\n      }\n\n      for (let i = 0; i < 16; ++i) {\n        B[i] += x[i];\n      }\n    }\n\n    function blockxor(S, Si, D, len) {\n      for (let i = 0; i < len; i++) {\n        D[i] ^= S[Si + i];\n      }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n      while (length--) {\n        dest[destPos++] = src[srcPos++];\n      }\n    }\n\n    function checkBufferish(o) {\n      if (!o || typeof o.length !== \"number\") {\n        return false;\n      }\n\n      for (let i = 0; i < o.length; i++) {\n        const v = o[i];\n\n        if (typeof v !== \"number\" || v % 1 || v < 0 || v >= 256) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function ensureInteger(value, name) {\n      if (typeof value !== \"number\" || value % 1) {\n        throw new Error(\"invalid \" + name);\n      }\n\n      return value;\n    }\n\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n      N = ensureInteger(N, \"N\");\n      r = ensureInteger(r, \"r\");\n      p = ensureInteger(p, \"p\");\n      dkLen = ensureInteger(dkLen, \"dkLen\");\n\n      if (N === 0 || (N & N - 1) !== 0) {\n        throw new Error(\"N must be power of 2\");\n      }\n\n      if (N > MAX_VALUE / 128 / r) {\n        throw new Error(\"N too large\");\n      }\n\n      if (r > MAX_VALUE / 128 / p) {\n        throw new Error(\"r too large\");\n      }\n\n      if (!checkBufferish(password)) {\n        throw new Error(\"password must be an array or buffer\");\n      }\n\n      password = Array.prototype.slice.call(password);\n\n      if (!checkBufferish(salt)) {\n        throw new Error(\"salt must be an array or buffer\");\n      }\n\n      salt = Array.prototype.slice.call(salt);\n      let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n      const B = new Uint32Array(p * 32 * r);\n\n      for (let i = 0; i < B.length; i++) {\n        const j = i * 4;\n        B[i] = (b[j + 3] & 255) << 24 | (b[j + 2] & 255) << 16 | (b[j + 1] & 255) << 8 | (b[j + 0] & 255) << 0;\n      }\n\n      const XY = new Uint32Array(64 * r);\n      const V = new Uint32Array(32 * r * N);\n      const Yi = 32 * r;\n      const x = new Uint32Array(16);\n\n      const _X = new Uint32Array(16);\n\n      const totalOps = p * N * 2;\n      let currentOp = 0;\n      let lastPercent10 = null;\n      let stop = false;\n      let state = 0;\n      let i0 = 0,\n          i1;\n      let Bi;\n      const limit = callback ? parseInt(1e3 / r) : 4294967295;\n      const nextTick = typeof setImmediate !== \"undefined\" ? setImmediate : setTimeout;\n\n      const incrementalSMix = function () {\n        if (stop) {\n          return callback(new Error(\"cancelled\"), currentOp / totalOps);\n        }\n\n        let steps;\n\n        switch (state) {\n          case 0:\n            Bi = i0 * 32 * r;\n            arraycopy(B, Bi, XY, 0, Yi);\n            state = 1;\n            i1 = 0;\n\n          case 1:\n            steps = N - i1;\n\n            if (steps > limit) {\n              steps = limit;\n            }\n\n            for (let i = 0; i < steps; i++) {\n              arraycopy(XY, 0, V, (i1 + i) * Yi, Yi);\n              blockmix_salsa8(XY, Yi, r, x, _X);\n            }\n\n            i1 += steps;\n            currentOp += steps;\n\n            if (callback) {\n              const percent10 = parseInt(1e3 * currentOp / totalOps);\n\n              if (percent10 !== lastPercent10) {\n                stop = callback(null, currentOp / totalOps);\n\n                if (stop) {\n                  break;\n                }\n\n                lastPercent10 = percent10;\n              }\n            }\n\n            if (i1 < N) {\n              break;\n            }\n\n            i1 = 0;\n            state = 2;\n\n          case 2:\n            steps = N - i1;\n\n            if (steps > limit) {\n              steps = limit;\n            }\n\n            for (let i = 0; i < steps; i++) {\n              const offset = (2 * r - 1) * 16;\n              const j = XY[offset] & N - 1;\n              blockxor(V, j * Yi, XY, Yi);\n              blockmix_salsa8(XY, Yi, r, x, _X);\n            }\n\n            i1 += steps;\n            currentOp += steps;\n\n            if (callback) {\n              const percent10 = parseInt(1e3 * currentOp / totalOps);\n\n              if (percent10 !== lastPercent10) {\n                stop = callback(null, currentOp / totalOps);\n\n                if (stop) {\n                  break;\n                }\n\n                lastPercent10 = percent10;\n              }\n            }\n\n            if (i1 < N) {\n              break;\n            }\n\n            arraycopy(XY, 0, B, Bi, Yi);\n            i0++;\n\n            if (i0 < p) {\n              state = 0;\n              break;\n            }\n\n            b = [];\n\n            for (let i = 0; i < B.length; i++) {\n              b.push(B[i] >> 0 & 255);\n              b.push(B[i] >> 8 & 255);\n              b.push(B[i] >> 16 & 255);\n              b.push(B[i] >> 24 & 255);\n            }\n\n            const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n            if (callback) {\n              callback(null, 1, derivedKey);\n            }\n\n            return derivedKey;\n        }\n\n        if (callback) {\n          nextTick(incrementalSMix);\n        }\n      };\n\n      if (!callback) {\n        while (true) {\n          const derivedKey = incrementalSMix();\n\n          if (derivedKey != undefined) {\n            return derivedKey;\n          }\n        }\n      }\n\n      incrementalSMix();\n    }\n\n    const lib = {\n      scrypt: function (password, salt, N, r, p, dkLen, progressCallback) {\n        return new Promise(function (resolve, reject) {\n          let lastProgress = 0;\n\n          if (progressCallback) {\n            progressCallback(0);\n          }\n\n          _scrypt(password, salt, N, r, p, dkLen, function (error, progress, key) {\n            if (error) {\n              reject(error);\n            } else if (key) {\n              if (progressCallback && lastProgress !== 1) {\n                progressCallback(1);\n              }\n\n              resolve(new Uint8Array(key));\n            } else if (progressCallback && progress !== lastProgress) {\n              lastProgress = progress;\n              return progressCallback(progress);\n            }\n          });\n        });\n      },\n      syncScrypt: function (password, salt, N, r, p, dkLen) {\n        return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n      }\n    };\n\n    if (\"object\" !== \"undefined\") {\n      module.exports = lib;\n    } else if (typeof undefined === \"function\" && undefined.amd) {\n      undefined(lib);\n    } else if (root) {\n      if (root.scrypt) {\n        root._scrypt = root.scrypt;\n      }\n\n      root.scrypt = lib;\n    }\n  })(commonjsGlobal);\n});\n\"use strict\";\n\nvar __awaiter$4 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$o = new Logger(version$i);\n\nfunction hasMnemonic(value) {\n  return value != null && value.mnemonic && value.mnemonic.phrase;\n}\n\nclass KeystoreAccount extends Description {\n  isKeystoreAccount(value) {\n    return !!(value && value._isKeystoreAccount);\n  }\n\n}\n\nfunction _decrypt(data, key, ciphertext) {\n  const cipher = searchPath(data, \"crypto/cipher\");\n\n  if (cipher === \"aes-128-ctr\") {\n    const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n    const counter = new aesJs.Counter(iv);\n    const aesCtr = new aesJs.ModeOfOperation.ctr(key, counter);\n    return arrayify(aesCtr.decrypt(ciphertext));\n  }\n\n  return null;\n}\n\nfunction _getAccount(data, key) {\n  const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n  const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n\n  if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n    throw new Error(\"invalid password\");\n  }\n\n  const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n  if (!privateKey) {\n    logger$o.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"decrypt\"\n    });\n  }\n\n  const mnemonicKey = key.slice(32, 64);\n  const address = computeAddress(privateKey);\n\n  if (data.address) {\n    let check = data.address.toLowerCase();\n\n    if (check.substring(0, 2) !== \"0x\") {\n      check = \"0x\" + check;\n    }\n\n    if (getAddress(check) !== address) {\n      throw new Error(\"address mismatch\");\n    }\n  }\n\n  const account = {\n    _isKeystoreAccount: true,\n    address: address,\n    privateKey: hexlify(privateKey)\n  };\n\n  if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n    const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n    const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n    const mnemonicCounter = new aesJs.Counter(mnemonicIv);\n    const mnemonicAesCtr = new aesJs.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n    const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n    const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n    const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n    try {\n      const mnemonic = entropyToMnemonic(entropy, locale);\n      const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n      if (node.privateKey != account.privateKey) {\n        throw new Error(\"mnemonic mismatch\");\n      }\n\n      account.mnemonic = node.mnemonic;\n    } catch (error) {\n      if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n        throw error;\n      }\n    }\n  }\n\n  return new KeystoreAccount(account);\n}\n\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n  return arrayify(pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2$1(passwordBytes, salt, count, dkLen, prfFunc) {\n  return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n  const passwordBytes = getPassword(password);\n  const kdf = searchPath(data, \"crypto/kdf\");\n\n  if (kdf && typeof kdf === \"string\") {\n    const throwError = function (name, value) {\n      return logger$o.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n    };\n\n    if (kdf.toLowerCase() === \"scrypt\") {\n      const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n      const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n      const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n      const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n      if (!N || !r || !p) {\n        throwError(\"kdf\", kdf);\n      }\n\n      if ((N & N - 1) !== 0) {\n        throwError(\"N\", N);\n      }\n\n      const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n\n      if (dkLen !== 32) {\n        throwError(\"dklen\", dkLen);\n      }\n\n      return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n    } else if (kdf.toLowerCase() === \"pbkdf2\") {\n      const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n      let prfFunc = null;\n      const prf = searchPath(data, \"crypto/kdfparams/prf\");\n\n      if (prf === \"hmac-sha256\") {\n        prfFunc = \"sha256\";\n      } else if (prf === \"hmac-sha512\") {\n        prfFunc = \"sha512\";\n      } else {\n        throwError(\"prf\", prf);\n      }\n\n      const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n      const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n\n      if (dkLen !== 32) {\n        throwError(\"dklen\", dkLen);\n      }\n\n      return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n    }\n  }\n\n  return logger$o.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\nfunction decryptSync(json, password) {\n  const data = JSON.parse(json);\n\n  const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n\n  return _getAccount(data, key);\n}\n\nfunction decrypt$1(json, password, progressCallback) {\n  return __awaiter$4(this, void 0, void 0, function* () {\n    const data = JSON.parse(json);\n    const key = yield _computeKdfKey(data, password, pbkdf2$1, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n  });\n}\n\nfunction encrypt(account, password, options, progressCallback) {\n  try {\n    if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n      throw new Error(\"address/privateKey mismatch\");\n    }\n\n    if (hasMnemonic(account)) {\n      const mnemonic = account.mnemonic;\n      const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n      if (node.privateKey != account.privateKey) {\n        throw new Error(\"mnemonic mismatch\");\n      }\n    }\n  } catch (e) {\n    return Promise.reject(e);\n  }\n\n  if (typeof options === \"function\" && !progressCallback) {\n    progressCallback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  const privateKey = arrayify(account.privateKey);\n  const passwordBytes = getPassword(password);\n  let entropy = null;\n  let path = null;\n  let locale = null;\n\n  if (hasMnemonic(account)) {\n    const srcMnemonic = account.mnemonic;\n    entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n    path = srcMnemonic.path || defaultPath;\n    locale = srcMnemonic.locale || \"en\";\n  }\n\n  let client = options.client;\n\n  if (!client) {\n    client = \"ethers.js\";\n  }\n\n  let salt = null;\n\n  if (options.salt) {\n    salt = arrayify(options.salt);\n  } else {\n    salt = randomBytes(32);\n  }\n\n  let iv = null;\n\n  if (options.iv) {\n    iv = arrayify(options.iv);\n\n    if (iv.length !== 16) {\n      throw new Error(\"invalid iv\");\n    }\n  } else {\n    iv = randomBytes(16);\n  }\n\n  let uuidRandom = null;\n\n  if (options.uuid) {\n    uuidRandom = arrayify(options.uuid);\n\n    if (uuidRandom.length !== 16) {\n      throw new Error(\"invalid uuid\");\n    }\n  } else {\n    uuidRandom = randomBytes(16);\n  }\n\n  let N = 1 << 17,\n      r = 8,\n      p = 1;\n\n  if (options.scrypt) {\n    if (options.scrypt.N) {\n      N = options.scrypt.N;\n    }\n\n    if (options.scrypt.r) {\n      r = options.scrypt.r;\n    }\n\n    if (options.scrypt.p) {\n      p = options.scrypt.p;\n    }\n  }\n\n  return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then(key => {\n    key = arrayify(key);\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n    const mnemonicKey = key.slice(32, 64);\n    const counter = new aesJs.Counter(iv);\n    const aesCtr = new aesJs.ModeOfOperation.ctr(derivedKey, counter);\n    const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n    const mac = keccak256(concat([macPrefix, ciphertext]));\n    const data = {\n      address: account.address.substring(2).toLowerCase(),\n      id: uuidV4(uuidRandom),\n      version: 3,\n      Crypto: {\n        cipher: \"aes-128-ctr\",\n        cipherparams: {\n          iv: hexlify(iv).substring(2)\n        },\n        ciphertext: hexlify(ciphertext).substring(2),\n        kdf: \"scrypt\",\n        kdfparams: {\n          salt: hexlify(salt).substring(2),\n          n: N,\n          dklen: 32,\n          p: p,\n          r: r\n        },\n        mac: mac.substring(2)\n      }\n    };\n\n    if (entropy) {\n      const mnemonicIv = randomBytes(16);\n      const mnemonicCounter = new aesJs.Counter(mnemonicIv);\n      const mnemonicAesCtr = new aesJs.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n      const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n      const now = new Date();\n      const timestamp = now.getUTCFullYear() + \"-\" + zpad(now.getUTCMonth() + 1, 2) + \"-\" + zpad(now.getUTCDate(), 2) + \"T\" + zpad(now.getUTCHours(), 2) + \"-\" + zpad(now.getUTCMinutes(), 2) + \"-\" + zpad(now.getUTCSeconds(), 2) + \".0Z\";\n      data[\"x-ethers\"] = {\n        client: client,\n        gethFilename: \"UTC--\" + timestamp + \"--\" + data.address,\n        mnemonicCounter: hexlify(mnemonicIv).substring(2),\n        mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n        path: path,\n        locale: locale,\n        version: \"0.1\"\n      };\n    }\n\n    return JSON.stringify(data);\n  });\n}\n\n\"use strict\";\n\nfunction decryptJsonWallet(json, password, progressCallback) {\n  if (isCrowdsaleWallet(json)) {\n    if (progressCallback) {\n      progressCallback(0);\n    }\n\n    const account = decrypt(json, password);\n\n    if (progressCallback) {\n      progressCallback(1);\n    }\n\n    return Promise.resolve(account);\n  }\n\n  if (isKeystoreWallet(json)) {\n    return decrypt$1(json, password, progressCallback);\n  }\n\n  return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json, password) {\n  if (isCrowdsaleWallet(json)) {\n    return decrypt(json, password);\n  }\n\n  if (isKeystoreWallet(json)) {\n    return decryptSync(json, password);\n  }\n\n  throw new Error(\"invalid JSON wallet\");\n}\n\nconst version$j = \"wallet/5.1.0\";\n\"use strict\";\n\nvar __awaiter$5 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$p = new Logger(version$j);\n\nfunction isAccount(value) {\n  return value != null && isHexString(value.privateKey, 32) && value.address != null;\n}\n\nfunction hasMnemonic$1(value) {\n  const mnemonic = value.mnemonic;\n  return mnemonic && mnemonic.phrase;\n}\n\nclass Wallet extends Signer {\n  constructor(privateKey, provider) {\n    logger$p.checkNew(new.target, Wallet);\n    super();\n\n    if (isAccount(privateKey)) {\n      const signingKey = new SigningKey(privateKey.privateKey);\n      defineReadOnly(this, \"_signingKey\", () => signingKey);\n      defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n      if (this.address !== getAddress(privateKey.address)) {\n        logger$p.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n      }\n\n      if (hasMnemonic$1(privateKey)) {\n        const srcMnemonic = privateKey.mnemonic;\n        defineReadOnly(this, \"_mnemonic\", () => ({\n          phrase: srcMnemonic.phrase,\n          path: srcMnemonic.path || defaultPath,\n          locale: srcMnemonic.locale || \"en\"\n        }));\n        const mnemonic = this.mnemonic;\n        const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n\n        if (computeAddress(node.privateKey) !== this.address) {\n          logger$p.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n        }\n      } else {\n        defineReadOnly(this, \"_mnemonic\", () => null);\n      }\n    } else {\n      if (SigningKey.isSigningKey(privateKey)) {\n        if (privateKey.curve !== \"secp256k1\") {\n          logger$p.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n        }\n\n        defineReadOnly(this, \"_signingKey\", () => privateKey);\n      } else {\n        if (typeof privateKey === \"string\") {\n          if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n            privateKey = \"0x\" + privateKey;\n          }\n        }\n\n        const signingKey = new SigningKey(privateKey);\n        defineReadOnly(this, \"_signingKey\", () => signingKey);\n      }\n\n      defineReadOnly(this, \"_mnemonic\", () => null);\n      defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n    }\n\n    if (provider && !Provider.isProvider(provider)) {\n      logger$p.throwArgumentError(\"invalid provider\", \"provider\", provider);\n    }\n\n    defineReadOnly(this, \"provider\", provider || null);\n  }\n\n  get mnemonic() {\n    return this._mnemonic();\n  }\n\n  get privateKey() {\n    return this._signingKey().privateKey;\n  }\n\n  get publicKey() {\n    return this._signingKey().publicKey;\n  }\n\n  getAddress() {\n    return Promise.resolve(this.address);\n  }\n\n  connect(provider) {\n    return new Wallet(this, provider);\n  }\n\n  signTransaction(transaction) {\n    return resolveProperties(transaction).then(tx => {\n      if (tx.from != null) {\n        if (getAddress(tx.from) !== this.address) {\n          logger$p.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n        }\n\n        delete tx.from;\n      }\n\n      const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n\n      return serialize(tx, signature);\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter$5(this, void 0, void 0, function* () {\n      return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    });\n  }\n\n  _signTypedData(domain, types, value) {\n    return __awaiter$5(this, void 0, void 0, function* () {\n      const populated = yield TypedDataEncoder.resolveNames(domain, types, value, name => {\n        if (this.provider == null) {\n          logger$p.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\",\n            value: name\n          });\n        }\n\n        return this.provider.resolveName(name);\n      });\n      return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    });\n  }\n\n  encrypt(password, options, progressCallback) {\n    if (typeof options === \"function\" && !progressCallback) {\n      progressCallback = options;\n      options = {};\n    }\n\n    if (progressCallback && typeof progressCallback !== \"function\") {\n      throw new Error(\"invalid callback\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    return encrypt(this, password, options, progressCallback);\n  }\n\n  static createRandom(options) {\n    let entropy = randomBytes(16);\n\n    if (!options) {\n      options = {};\n    }\n\n    if (options.extraEntropy) {\n      entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n    }\n\n    const mnemonic = entropyToMnemonic(entropy, options.locale);\n    return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n  }\n\n  static fromEncryptedJson(json, password, progressCallback) {\n    return decryptJsonWallet(json, password, progressCallback).then(account => {\n      return new Wallet(account);\n    });\n  }\n\n  static fromEncryptedJsonSync(json, password) {\n    return new Wallet(decryptJsonWalletSync(json, password));\n  }\n\n  static fromMnemonic(mnemonic, path, wordlist) {\n    if (!path) {\n      path = defaultPath;\n    }\n\n    return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n  }\n\n}\n\nfunction verifyMessage(message, signature) {\n  return recoverAddress(hashMessage(message), signature);\n}\n\nfunction verifyTypedData(domain, types, value, signature) {\n  return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n\nconst version$k = \"networks/5.1.0\";\n\"use strict\";\n\nconst logger$q = new Logger(version$k);\n\nfunction isRenetworkable(value) {\n  return value && typeof value.renetwork === \"function\";\n}\n\nfunction ethDefaultProvider(network) {\n  const func = function (providers, options) {\n    if (options == null) {\n      options = {};\n    }\n\n    const providerList = [];\n\n    if (providers.InfuraProvider) {\n      try {\n        providerList.push(new providers.InfuraProvider(network, options.infura));\n      } catch (error) {}\n    }\n\n    if (providers.EtherscanProvider) {\n      try {\n        providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n      } catch (error) {}\n    }\n\n    if (providers.AlchemyProvider) {\n      const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n\n      try {\n        const provider = new providers.AlchemyProvider(network, options.alchemy);\n\n        if (provider.network && skip.indexOf(provider.network.name) === -1) {\n          providerList.push(provider);\n        }\n      } catch (error) {}\n    }\n\n    if (providers.PocketProvider) {\n      const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n\n      try {\n        const provider = new providers.PocketProvider(network);\n\n        if (provider.network && skip.indexOf(provider.network.name) === -1) {\n          providerList.push(provider);\n        }\n      } catch (error) {}\n    }\n\n    if (providers.CloudflareProvider) {\n      try {\n        providerList.push(new providers.CloudflareProvider(network));\n      } catch (error) {}\n    }\n\n    if (providerList.length === 0) {\n      return null;\n    }\n\n    if (providers.FallbackProvider) {\n      let quorum = 1;\n\n      if (options.quorum != null) {\n        quorum = options.quorum;\n      } else if (network === \"homestead\") {\n        quorum = 2;\n      }\n\n      return new providers.FallbackProvider(providerList, quorum);\n    }\n\n    return providerList[0];\n  };\n\n  func.renetwork = function (network) {\n    return ethDefaultProvider(network);\n  };\n\n  return func;\n}\n\nfunction etcDefaultProvider(url, network) {\n  const func = function (providers, options) {\n    if (providers.JsonRpcProvider) {\n      return new providers.JsonRpcProvider(url, network);\n    }\n\n    return null;\n  };\n\n  func.renetwork = function (network) {\n    return etcDefaultProvider(url, network);\n  };\n\n  return func;\n}\n\nconst homestead = {\n  chainId: 1,\n  ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  name: \"homestead\",\n  _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n  chainId: 3,\n  ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  name: \"ropsten\",\n  _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n  chainId: 63,\n  name: \"classicMordor\",\n  _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nconst networks = {\n  unspecified: {\n    chainId: 0,\n    name: \"unspecified\"\n  },\n  homestead: homestead,\n  mainnet: homestead,\n  morden: {\n    chainId: 2,\n    name: \"morden\"\n  },\n  ropsten: ropsten,\n  testnet: ropsten,\n  rinkeby: {\n    chainId: 4,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"rinkeby\",\n    _defaultProvider: ethDefaultProvider(\"rinkeby\")\n  },\n  kovan: {\n    chainId: 42,\n    name: \"kovan\",\n    _defaultProvider: ethDefaultProvider(\"kovan\")\n  },\n  goerli: {\n    chainId: 5,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"goerli\",\n    _defaultProvider: ethDefaultProvider(\"goerli\")\n  },\n  classic: {\n    chainId: 61,\n    name: \"classic\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/etc\", \"classic\")\n  },\n  classicMorden: {\n    chainId: 62,\n    name: \"classicMorden\"\n  },\n  classicMordor: classicMordor,\n  classicTestnet: classicMordor,\n  classicKotti: {\n    chainId: 6,\n    name: \"classicKotti\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/kotti\", \"classicKotti\")\n  }\n};\n\nfunction getNetwork(network) {\n  if (network == null) {\n    return null;\n  }\n\n  if (typeof network === \"number\") {\n    for (const name in networks) {\n      const standard = networks[name];\n\n      if (standard.chainId === network) {\n        return {\n          name: standard.name,\n          chainId: standard.chainId,\n          ensAddress: standard.ensAddress || null,\n          _defaultProvider: standard._defaultProvider || null\n        };\n      }\n    }\n\n    return {\n      chainId: network,\n      name: \"unknown\"\n    };\n  }\n\n  if (typeof network === \"string\") {\n    const standard = networks[network];\n\n    if (standard == null) {\n      return null;\n    }\n\n    return {\n      name: standard.name,\n      chainId: standard.chainId,\n      ensAddress: standard.ensAddress,\n      _defaultProvider: standard._defaultProvider || null\n    };\n  }\n\n  const standard = networks[network.name];\n\n  if (!standard) {\n    if (typeof network.chainId !== \"number\") {\n      logger$q.throwArgumentError(\"invalid network chainId\", \"network\", network);\n    }\n\n    return network;\n  }\n\n  if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n    logger$q.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n  }\n\n  let defaultProvider = network._defaultProvider || null;\n\n  if (defaultProvider == null && standard._defaultProvider) {\n    if (isRenetworkable(standard._defaultProvider)) {\n      defaultProvider = standard._defaultProvider.renetwork(network);\n    } else {\n      defaultProvider = standard._defaultProvider;\n    }\n  }\n\n  return {\n    name: network.name,\n    chainId: standard.chainId,\n    ensAddress: network.ensAddress || standard.ensAddress || null,\n    _defaultProvider: defaultProvider\n  };\n}\n\n\"use strict\";\n\nfunction decode$1(textData) {\n  textData = atob(textData);\n  const data = [];\n\n  for (let i = 0; i < textData.length; i++) {\n    data.push(textData.charCodeAt(i));\n  }\n\n  return arrayify(data);\n}\n\nfunction encode$1(data) {\n  data = arrayify(data);\n  let textData = \"\";\n\n  for (let i = 0; i < data.length; i++) {\n    textData += String.fromCharCode(data[i]);\n  }\n\n  return btoa(textData);\n}\n\n\"use strict\";\n\nvar index$2 = Object.freeze({\n  __proto__: null,\n  decode: decode$1,\n  encode: encode$1\n});\nconst version$l = \"web/5.1.0\";\n\"use strict\";\n\nvar __awaiter$6 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nfunction getUrl(href, options) {\n  return __awaiter$6(this, void 0, void 0, function* () {\n    if (options == null) {\n      options = {};\n    }\n\n    const request = {\n      method: options.method || \"GET\",\n      headers: options.headers || {},\n      body: options.body || undefined,\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrer: \"client\"\n    };\n    const response = yield fetch(href, request);\n    const body = yield response.arrayBuffer();\n    const headers = {};\n\n    if (response.headers.forEach) {\n      response.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n    } else {\n      response.headers.keys().forEach(key => {\n        headers[key.toLowerCase()] = response.headers.get(key);\n      });\n    }\n\n    return {\n      headers: headers,\n      statusCode: response.status,\n      statusMessage: response.statusText,\n      body: arrayify(new Uint8Array(body))\n    };\n  });\n}\n\n\"use strict\";\n\nvar __awaiter$7 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$r = new Logger(version$l);\n\nfunction staller(duration) {\n  return new Promise(resolve => {\n    setTimeout(resolve, duration);\n  });\n}\n\nfunction bodyify(value, type) {\n  if (value == null) {\n    return null;\n  }\n\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  if (isBytesLike(value)) {\n    if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n      try {\n        return toUtf8String(value);\n      } catch (error) {}\n    }\n\n    return hexlify(value);\n  }\n\n  return value;\n}\n\nfunction _fetchData(connection, body, processFunc) {\n  const attemptLimit = typeof connection === \"object\" && connection.throttleLimit != null ? connection.throttleLimit : 12;\n  logger$r.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n  const throttleCallback = typeof connection === \"object\" ? connection.throttleCallback : null;\n  const throttleSlotInterval = typeof connection === \"object\" && typeof connection.throttleSlotInterval === \"number\" ? connection.throttleSlotInterval : 100;\n  logger$r.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n  const headers = {};\n  let url = null;\n  const options = {\n    method: \"GET\"\n  };\n  let allow304 = false;\n  let timeout = 2 * 60 * 1e3;\n\n  if (typeof connection === \"string\") {\n    url = connection;\n  } else if (typeof connection === \"object\") {\n    if (connection == null || connection.url == null) {\n      logger$r.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n    }\n\n    url = connection.url;\n\n    if (typeof connection.timeout === \"number\" && connection.timeout > 0) {\n      timeout = connection.timeout;\n    }\n\n    if (connection.headers) {\n      for (const key in connection.headers) {\n        headers[key.toLowerCase()] = {\n          key: key,\n          value: String(connection.headers[key])\n        };\n\n        if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n          allow304 = true;\n        }\n      }\n    }\n\n    options.allowGzip = !!connection.allowGzip;\n\n    if (connection.user != null && connection.password != null) {\n      if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n        logger$r.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"url\",\n          url: url,\n          user: connection.user,\n          password: \"[REDACTED]\"\n        });\n      }\n\n      const authorization = connection.user + \":\" + connection.password;\n      headers[\"authorization\"] = {\n        key: \"Authorization\",\n        value: \"Basic \" + encode$1(toUtf8Bytes(authorization))\n      };\n    }\n  }\n\n  if (body) {\n    options.method = \"POST\";\n    options.body = body;\n\n    if (headers[\"content-type\"] == null) {\n      headers[\"content-type\"] = {\n        key: \"Content-Type\",\n        value: \"application/octet-stream\"\n      };\n    }\n\n    if (headers[\"content-length\"] == null) {\n      headers[\"content-length\"] = {\n        key: \"Content-Length\",\n        value: String(body.length)\n      };\n    }\n  }\n\n  const flatHeaders = {};\n  Object.keys(headers).forEach(key => {\n    const header = headers[key];\n    flatHeaders[header.key] = header.value;\n  });\n  options.headers = flatHeaders;\n\n  const runningTimeout = function () {\n    let timer = null;\n    const promise = new Promise(function (resolve, reject) {\n      if (timeout) {\n        timer = setTimeout(() => {\n          if (timer == null) {\n            return;\n          }\n\n          timer = null;\n          reject(logger$r.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            timeout: timeout,\n            url: url\n          }));\n        }, timeout);\n      }\n    });\n\n    const cancel = function () {\n      if (timer == null) {\n        return;\n      }\n\n      clearTimeout(timer);\n      timer = null;\n    };\n\n    return {\n      promise: promise,\n      cancel: cancel\n    };\n  }();\n\n  const runningFetch = function () {\n    return __awaiter$7(this, void 0, void 0, function* () {\n      for (let attempt = 0; attempt < attemptLimit; attempt++) {\n        let response = null;\n\n        try {\n          response = yield getUrl(url, options);\n\n          if (response.statusCode === 429 && attempt < attemptLimit) {\n            let tryAgain = true;\n\n            if (throttleCallback) {\n              tryAgain = yield throttleCallback(attempt, url);\n            }\n\n            if (tryAgain) {\n              let stall = 0;\n              const retryAfter = response.headers[\"retry-after\"];\n\n              if (typeof retryAfter === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                stall = parseInt(retryAfter) * 1e3;\n              } else {\n                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n              }\n\n              yield staller(stall);\n              continue;\n            }\n          }\n        } catch (error) {\n          response = error.response;\n\n          if (response == null) {\n            runningTimeout.cancel();\n            logger$r.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              serverError: error,\n              url: url\n            });\n          }\n        }\n\n        let body = response.body;\n\n        if (allow304 && response.statusCode === 304) {\n          body = null;\n        } else if (response.statusCode < 200 || response.statusCode >= 300) {\n          runningTimeout.cancel();\n          logger$r.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n            status: response.statusCode,\n            headers: response.headers,\n            body: bodyify(body, response.headers ? response.headers[\"content-type\"] : null),\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n          });\n        }\n\n        if (processFunc) {\n          try {\n            const result = yield processFunc(body, response);\n            runningTimeout.cancel();\n            return result;\n          } catch (error) {\n            if (error.throttleRetry && attempt < attemptLimit) {\n              let tryAgain = true;\n\n              if (throttleCallback) {\n                tryAgain = yield throttleCallback(attempt, url);\n              }\n\n              if (tryAgain) {\n                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                yield staller(timeout);\n                continue;\n              }\n            }\n\n            runningTimeout.cancel();\n            logger$r.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n              body: bodyify(body, response.headers ? response.headers[\"content-type\"] : null),\n              error: error,\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              url: url\n            });\n          }\n        }\n\n        runningTimeout.cancel();\n        return body;\n      }\n\n      return logger$r.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n        requestMethod: options.method,\n        url: url\n      });\n    });\n  }();\n\n  return Promise.race([runningTimeout.promise, runningFetch]);\n}\n\nfunction fetchJson(connection, json, processFunc) {\n  let processJsonFunc = (value, response) => {\n    let result = null;\n\n    if (value != null) {\n      try {\n        result = JSON.parse(toUtf8String(value));\n      } catch (error) {\n        logger$r.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n          body: value,\n          error: error\n        });\n      }\n    }\n\n    if (processFunc) {\n      result = processFunc(result, response);\n    }\n\n    return result;\n  };\n\n  let body = null;\n\n  if (json != null) {\n    body = toUtf8Bytes(json);\n    const updated = typeof connection === \"string\" ? {\n      url: connection\n    } : shallowCopy(connection);\n\n    if (updated.headers) {\n      const hasContentType = Object.keys(updated.headers).filter(k => k.toLowerCase() === \"content-type\").length !== 0;\n\n      if (!hasContentType) {\n        updated.headers = shallowCopy(updated.headers);\n        updated.headers[\"content-type\"] = \"application/json\";\n      }\n    } else {\n      updated.headers = {\n        \"content-type\": \"application/json\"\n      };\n    }\n\n    connection = updated;\n  }\n\n  return _fetchData(connection, body, processJsonFunc);\n}\n\nfunction poll(func, options) {\n  if (!options) {\n    options = {};\n  }\n\n  options = shallowCopy(options);\n\n  if (options.floor == null) {\n    options.floor = 0;\n  }\n\n  if (options.ceiling == null) {\n    options.ceiling = 1e4;\n  }\n\n  if (options.interval == null) {\n    options.interval = 250;\n  }\n\n  return new Promise(function (resolve, reject) {\n    let timer = null;\n    let done = false;\n\n    const cancel = () => {\n      if (done) {\n        return false;\n      }\n\n      done = true;\n\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      return true;\n    };\n\n    if (options.timeout) {\n      timer = setTimeout(() => {\n        if (cancel()) {\n          reject(new Error(\"timeout\"));\n        }\n      }, options.timeout);\n    }\n\n    const retryLimit = options.retryLimit;\n    let attempt = 0;\n\n    function check() {\n      return func().then(function (result) {\n        if (result !== undefined) {\n          if (cancel()) {\n            resolve(result);\n          }\n        } else if (options.oncePoll) {\n          options.oncePoll.once(\"poll\", check);\n        } else if (options.onceBlock) {\n          options.onceBlock.once(\"block\", check);\n        } else if (!done) {\n          attempt++;\n\n          if (attempt > retryLimit) {\n            if (cancel()) {\n              reject(new Error(\"retry limit reached\"));\n            }\n\n            return;\n          }\n\n          let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n\n          if (timeout < options.floor) {\n            timeout = options.floor;\n          }\n\n          if (timeout > options.ceiling) {\n            timeout = options.ceiling;\n          }\n\n          setTimeout(check, timeout);\n        }\n\n        return null;\n      }, function (error) {\n        if (cancel()) {\n          reject(error);\n        }\n      });\n    }\n\n    check();\n  });\n}\n\n\"use strict\";\n\nvar ALPHABET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\nvar ALPHABET_MAP = {};\n\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z);\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + \" is ambiguous\");\n  ALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep(pre) {\n  var b = pre >> 25;\n  return (pre & 33554431) << 5 ^ -(b >> 0 & 1) & 996825010 ^ -(b >> 1 & 1) & 642813549 ^ -(b >> 2 & 1) & 513874426 ^ -(b >> 3 & 1) & 1027748829 ^ -(b >> 4 & 1) & 705979059;\n}\n\nfunction prefixChk(prefix) {\n  var chk = 1;\n\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) return \"Invalid prefix (\" + prefix + \")\";\n    chk = polymodStep(chk) ^ c >> 5;\n  }\n\n  chk = polymodStep(chk);\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ v & 31;\n  }\n\n  return chk;\n}\n\nfunction encode$2(prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (prefix.length + 7 + words.length > LIMIT) throw new TypeError(\"Exceeds length limit\");\n  prefix = prefix.toLowerCase();\n  var chk = prefixChk(prefix);\n  if (typeof chk === \"string\") throw new Error(chk);\n  var result = prefix + \"1\";\n\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i];\n    if (x >> 5 !== 0) throw new Error(\"Non 5-bit word\");\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n\n  chk ^= 1;\n\n  for (i = 0; i < 6; ++i) {\n    var v = chk >> (5 - i) * 5 & 31;\n    result += ALPHABET.charAt(v);\n  }\n\n  return result;\n}\n\nfunction __decode(str, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (str.length < 8) return str + \" too short\";\n  if (str.length > LIMIT) return \"Exceeds length limit\";\n  var lowered = str.toLowerCase();\n  var uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) return \"Mixed-case string \" + str;\n  str = lowered;\n  var split = str.lastIndexOf(\"1\");\n  if (split === -1) return \"No separator character for \" + str;\n  if (split === 0) return \"Missing prefix for \" + str;\n  var prefix = str.slice(0, split);\n  var wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) return \"Data too short\";\n  var chk = prefixChk(prefix);\n  if (typeof chk === \"string\") return chk;\n  var words = [];\n\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i);\n    var v = ALPHABET_MAP[c];\n    if (v === undefined) return \"Unknown character \" + c;\n    chk = polymodStep(chk) ^ v;\n    if (i + 6 >= wordChars.length) continue;\n    words.push(v);\n  }\n\n  if (chk !== 1) return \"Invalid checksum for \" + str;\n  return {\n    prefix: prefix,\n    words: words\n  };\n}\n\nfunction decodeUnsafe() {\n  var res = __decode.apply(null, arguments);\n\n  if (typeof res === \"object\") return res;\n}\n\nfunction decode$2(str) {\n  var res = __decode.apply(null, arguments);\n\n  if (typeof res === \"object\") return res;\n  throw new Error(res);\n}\n\nfunction convert(data, inBits, outBits, pad) {\n  var value = 0;\n  var bits = 0;\n  var maxV = (1 << outBits) - 1;\n  var result = [];\n\n  for (var i = 0; i < data.length; ++i) {\n    value = value << inBits | data[i];\n    bits += inBits;\n\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push(value >> bits & maxV);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push(value << outBits - bits & maxV);\n    }\n  } else {\n    if (bits >= inBits) return \"Excess padding\";\n    if (value << outBits - bits & maxV) return \"Non-zero padding\";\n  }\n\n  return result;\n}\n\nfunction toWordsUnsafe(bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res;\n}\n\nfunction toWords(bytes) {\n  var res = convert(bytes, 8, 5, true);\n  if (Array.isArray(res)) return res;\n  throw new Error(res);\n}\n\nfunction fromWordsUnsafe(words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res;\n}\n\nfunction fromWords(words) {\n  var res = convert(words, 5, 8, false);\n  if (Array.isArray(res)) return res;\n  throw new Error(res);\n}\n\nvar bech32 = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode$2,\n  encode: encode$2,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n};\nconst version$m = \"providers/5.1.2\";\n\"use strict\";\n\nconst logger$s = new Logger(version$m);\n\nclass Formatter {\n  constructor() {\n    logger$s.checkNew(new.target, Formatter);\n    this.formats = this.getDefaultFormats();\n  }\n\n  getDefaultFormats() {\n    const formats = {};\n    const address = this.address.bind(this);\n    const bigNumber = this.bigNumber.bind(this);\n    const blockTag = this.blockTag.bind(this);\n    const data = this.data.bind(this);\n    const hash = this.hash.bind(this);\n    const hex = this.hex.bind(this);\n    const number = this.number.bind(this);\n\n    const strictData = v => {\n      return this.data(v, true);\n    };\n\n    formats.transaction = {\n      hash: hash,\n      type: Formatter.allowNull(number, null),\n      accessList: Formatter.allowNull(this.accessList.bind(this), null),\n      blockHash: Formatter.allowNull(hash, null),\n      blockNumber: Formatter.allowNull(number, null),\n      transactionIndex: Formatter.allowNull(number, null),\n      confirmations: Formatter.allowNull(number, null),\n      from: address,\n      gasPrice: bigNumber,\n      gasLimit: bigNumber,\n      to: Formatter.allowNull(address, null),\n      value: bigNumber,\n      nonce: number,\n      data: data,\n      r: Formatter.allowNull(this.uint256),\n      s: Formatter.allowNull(this.uint256),\n      v: Formatter.allowNull(number),\n      creates: Formatter.allowNull(address, null),\n      raw: Formatter.allowNull(data)\n    };\n    formats.transactionRequest = {\n      from: Formatter.allowNull(address),\n      nonce: Formatter.allowNull(number),\n      gasLimit: Formatter.allowNull(bigNumber),\n      gasPrice: Formatter.allowNull(bigNumber),\n      to: Formatter.allowNull(address),\n      value: Formatter.allowNull(bigNumber),\n      data: Formatter.allowNull(strictData),\n      type: Formatter.allowNull(number),\n      accessList: Formatter.allowNull(this.accessList.bind(this), null)\n    };\n    formats.receiptLog = {\n      transactionIndex: number,\n      blockNumber: number,\n      transactionHash: hash,\n      address: address,\n      topics: Formatter.arrayOf(hash),\n      data: data,\n      logIndex: number,\n      blockHash: hash\n    };\n    formats.receipt = {\n      to: Formatter.allowNull(this.address, null),\n      from: Formatter.allowNull(this.address, null),\n      contractAddress: Formatter.allowNull(address, null),\n      transactionIndex: number,\n      root: Formatter.allowNull(hex),\n      gasUsed: bigNumber,\n      logsBloom: Formatter.allowNull(data),\n      blockHash: hash,\n      transactionHash: hash,\n      logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n      blockNumber: number,\n      confirmations: Formatter.allowNull(number, null),\n      cumulativeGasUsed: bigNumber,\n      status: Formatter.allowNull(number)\n    };\n    formats.block = {\n      hash: hash,\n      parentHash: hash,\n      number: number,\n      timestamp: number,\n      nonce: Formatter.allowNull(hex),\n      difficulty: this.difficulty.bind(this),\n      gasLimit: bigNumber,\n      gasUsed: bigNumber,\n      miner: address,\n      extraData: data,\n      transactions: Formatter.allowNull(Formatter.arrayOf(hash))\n    };\n    formats.blockWithTransactions = shallowCopy(formats.block);\n    formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n    formats.filter = {\n      fromBlock: Formatter.allowNull(blockTag, undefined),\n      toBlock: Formatter.allowNull(blockTag, undefined),\n      blockHash: Formatter.allowNull(hash, undefined),\n      address: Formatter.allowNull(address, undefined),\n      topics: Formatter.allowNull(this.topics.bind(this), undefined)\n    };\n    formats.filterLog = {\n      blockNumber: Formatter.allowNull(number),\n      blockHash: Formatter.allowNull(hash),\n      transactionIndex: number,\n      removed: Formatter.allowNull(this.boolean.bind(this)),\n      address: address,\n      data: Formatter.allowFalsish(data, \"0x\"),\n      topics: Formatter.arrayOf(hash),\n      transactionHash: hash,\n      logIndex: number\n    };\n    return formats;\n  }\n\n  accessList(accessList) {\n    return accessListify(accessList || []);\n  }\n\n  number(number) {\n    if (number === \"0x\") {\n      return 0;\n    }\n\n    return BigNumber.from(number).toNumber();\n  }\n\n  bigNumber(value) {\n    return BigNumber.from(value);\n  }\n\n  boolean(value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      value = value.toLowerCase();\n\n      if (value === \"true\") {\n        return true;\n      }\n\n      if (value === \"false\") {\n        return false;\n      }\n    }\n\n    throw new Error(\"invalid boolean - \" + value);\n  }\n\n  hex(value, strict) {\n    if (typeof value === \"string\") {\n      if (!strict && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n      }\n\n      if (isHexString(value)) {\n        return value.toLowerCase();\n      }\n    }\n\n    return logger$s.throwArgumentError(\"invalid hash\", \"value\", value);\n  }\n\n  data(value, strict) {\n    const result = this.hex(value, strict);\n\n    if (result.length % 2 !== 0) {\n      throw new Error(\"invalid data; odd-length - \" + value);\n    }\n\n    return result;\n  }\n\n  address(value) {\n    return getAddress(value);\n  }\n\n  callAddress(value) {\n    if (!isHexString(value, 32)) {\n      return null;\n    }\n\n    const address = getAddress(hexDataSlice(value, 12));\n    return address === AddressZero ? null : address;\n  }\n\n  contractAddress(value) {\n    return getContractAddress(value);\n  }\n\n  blockTag(blockTag) {\n    if (blockTag == null) {\n      return \"latest\";\n    }\n\n    if (blockTag === \"earliest\") {\n      return \"0x0\";\n    }\n\n    if (blockTag === \"latest\" || blockTag === \"pending\") {\n      return blockTag;\n    }\n\n    if (typeof blockTag === \"number\" || isHexString(blockTag)) {\n      return hexValue(blockTag);\n    }\n\n    throw new Error(\"invalid blockTag\");\n  }\n\n  hash(value, strict) {\n    const result = this.hex(value, strict);\n\n    if (hexDataLength(result) !== 32) {\n      return logger$s.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    return result;\n  }\n\n  difficulty(value) {\n    if (value == null) {\n      return null;\n    }\n\n    const v = BigNumber.from(value);\n\n    try {\n      return v.toNumber();\n    } catch (error) {}\n\n    return null;\n  }\n\n  uint256(value) {\n    if (!isHexString(value)) {\n      throw new Error(\"invalid uint256\");\n    }\n\n    return hexZeroPad(value, 32);\n  }\n\n  _block(value, format) {\n    if (value.author != null && value.miner == null) {\n      value.miner = value.author;\n    }\n\n    return Formatter.check(format, value);\n  }\n\n  block(value) {\n    return this._block(value, this.formats.block);\n  }\n\n  blockWithTransactions(value) {\n    return this._block(value, this.formats.blockWithTransactions);\n  }\n\n  transactionRequest(value) {\n    return Formatter.check(this.formats.transactionRequest, value);\n  }\n\n  transactionResponse(transaction) {\n    if (transaction.gas != null && transaction.gasLimit == null) {\n      transaction.gasLimit = transaction.gas;\n    }\n\n    if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n      transaction.to = \"0x0000000000000000000000000000000000000000\";\n    }\n\n    if (transaction.input != null && transaction.data == null) {\n      transaction.data = transaction.input;\n    }\n\n    if (transaction.to == null && transaction.creates == null) {\n      transaction.creates = this.contractAddress(transaction);\n    }\n\n    if (transaction.type === 1 && transaction.accessList == null) {\n      transaction.accessList = [];\n    }\n\n    const result = Formatter.check(this.formats.transaction, transaction);\n\n    if (transaction.chainId != null) {\n      let chainId = transaction.chainId;\n\n      if (isHexString(chainId)) {\n        chainId = BigNumber.from(chainId).toNumber();\n      }\n\n      result.chainId = chainId;\n    } else {\n      let chainId = transaction.networkId;\n\n      if (chainId == null && result.v == null) {\n        chainId = transaction.chainId;\n      }\n\n      if (isHexString(chainId)) {\n        chainId = BigNumber.from(chainId).toNumber();\n      }\n\n      if (typeof chainId !== \"number\" && result.v != null) {\n        chainId = (result.v - 35) / 2;\n\n        if (chainId < 0) {\n          chainId = 0;\n        }\n\n        chainId = parseInt(chainId);\n      }\n\n      if (typeof chainId !== \"number\") {\n        chainId = 0;\n      }\n\n      result.chainId = chainId;\n    }\n\n    if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n      result.blockHash = null;\n    }\n\n    return result;\n  }\n\n  transaction(value) {\n    return parse(value);\n  }\n\n  receiptLog(value) {\n    return Formatter.check(this.formats.receiptLog, value);\n  }\n\n  receipt(value) {\n    const result = Formatter.check(this.formats.receipt, value);\n\n    if (result.root != null) {\n      if (result.root.length <= 4) {\n        const value = BigNumber.from(result.root).toNumber();\n\n        if (value === 0 || value === 1) {\n          if (result.status != null && result.status !== value) {\n            logger$s.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", {\n              root: result.root,\n              status: result.status\n            });\n          }\n\n          result.status = value;\n          delete result.root;\n        } else {\n          logger$s.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n        }\n      } else if (result.root.length !== 66) {\n        logger$s.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n      }\n    }\n\n    if (result.status != null) {\n      result.byzantium = true;\n    }\n\n    return result;\n  }\n\n  topics(value) {\n    if (Array.isArray(value)) {\n      return value.map(v => this.topics(v));\n    } else if (value != null) {\n      return this.hash(value, true);\n    }\n\n    return null;\n  }\n\n  filter(value) {\n    return Formatter.check(this.formats.filter, value);\n  }\n\n  filterLog(value) {\n    return Formatter.check(this.formats.filterLog, value);\n  }\n\n  static check(format, object) {\n    const result = {};\n\n    for (const key in format) {\n      try {\n        const value = format[key](object[key]);\n\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      } catch (error) {\n        error.checkKey = key;\n        error.checkValue = object[key];\n        throw error;\n      }\n    }\n\n    return result;\n  }\n\n  static allowNull(format, nullValue) {\n    return function (value) {\n      if (value == null) {\n        return nullValue;\n      }\n\n      return format(value);\n    };\n  }\n\n  static allowFalsish(format, replaceValue) {\n    return function (value) {\n      if (!value) {\n        return replaceValue;\n      }\n\n      return format(value);\n    };\n  }\n\n  static arrayOf(format) {\n    return function (array) {\n      if (!Array.isArray(array)) {\n        throw new Error(\"not an array\");\n      }\n\n      const result = [];\n      array.forEach(function (value) {\n        result.push(format(value));\n      });\n      return result;\n    };\n  }\n\n}\n\nfunction isCommunityResourcable(value) {\n  return value && typeof value.isCommunityResource === \"function\";\n}\n\nfunction isCommunityResource(value) {\n  return isCommunityResourcable(value) && value.isCommunityResource();\n}\n\nlet throttleMessage = false;\n\nfunction showThrottleMessage() {\n  if (throttleMessage) {\n    return;\n  }\n\n  throttleMessage = true;\n  console.log(\"========= NOTICE =========\");\n  console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n  console.log(\"\");\n  console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n  console.log(\"community resource for low-traffic projects and early prototyping.\");\n  console.log(\"\");\n  console.log(\"While your application will continue to function, we highly recommended\");\n  console.log(\"signing up for your own API keys to improve performance, increase your\");\n  console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n  console.log(\"\");\n  console.log(\"For more details: https://docs.ethers.io/api-keys/\");\n  console.log(\"==========================\");\n}\n\n\"use strict\";\n\nvar __awaiter$8 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$t = new Logger(version$m);\n\nfunction checkTopic(topic) {\n  if (topic == null) {\n    return \"null\";\n  }\n\n  if (hexDataLength(topic) !== 32) {\n    logger$t.throwArgumentError(\"invalid topic\", \"topic\", topic);\n  }\n\n  return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics) {\n  topics = topics.slice();\n\n  while (topics.length > 0 && topics[topics.length - 1] == null) {\n    topics.pop();\n  }\n\n  return topics.map(topic => {\n    if (Array.isArray(topic)) {\n      const unique = {};\n      topic.forEach(topic => {\n        unique[checkTopic(topic)] = true;\n      });\n      const sorted = Object.keys(unique);\n      sorted.sort();\n      return sorted.join(\"|\");\n    } else {\n      return checkTopic(topic);\n    }\n  }).join(\"&\");\n}\n\nfunction deserializeTopics(data) {\n  if (data === \"\") {\n    return [];\n  }\n\n  return data.split(/&/g).map(topic => {\n    if (topic === \"\") {\n      return [];\n    }\n\n    const comps = topic.split(\"|\").map(topic => {\n      return topic === \"null\" ? null : topic;\n    });\n    return comps.length === 1 ? comps[0] : comps;\n  });\n}\n\nfunction getEventTag$1(eventName) {\n  if (typeof eventName === \"string\") {\n    eventName = eventName.toLowerCase();\n\n    if (hexDataLength(eventName) === 32) {\n      return \"tx:\" + eventName;\n    }\n\n    if (eventName.indexOf(\":\") === -1) {\n      return eventName;\n    }\n  } else if (Array.isArray(eventName)) {\n    return \"filter:*:\" + serializeTopics(eventName);\n  } else if (ForkEvent.isForkEvent(eventName)) {\n    logger$t.warn(\"not implemented\");\n    throw new Error(\"not implemented\");\n  } else if (eventName && typeof eventName === \"object\") {\n    return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n  }\n\n  throw new Error(\"invalid event - \" + eventName);\n}\n\nfunction getTime() {\n  return new Date().getTime();\n}\n\nfunction stall(duration) {\n  return new Promise(resolve => {\n    setTimeout(resolve, duration);\n  });\n}\n\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\n\nclass Event {\n  constructor(tag, listener, once) {\n    defineReadOnly(this, \"tag\", tag);\n    defineReadOnly(this, \"listener\", listener);\n    defineReadOnly(this, \"once\", once);\n  }\n\n  get event() {\n    switch (this.type) {\n      case \"tx\":\n        return this.hash;\n\n      case \"filter\":\n        return this.filter;\n    }\n\n    return this.tag;\n  }\n\n  get type() {\n    return this.tag.split(\":\")[0];\n  }\n\n  get hash() {\n    const comps = this.tag.split(\":\");\n\n    if (comps[0] !== \"tx\") {\n      return null;\n    }\n\n    return comps[1];\n  }\n\n  get filter() {\n    const comps = this.tag.split(\":\");\n\n    if (comps[0] !== \"filter\") {\n      return null;\n    }\n\n    const address = comps[1];\n    const topics = deserializeTopics(comps[2]);\n    const filter = {};\n\n    if (topics.length > 0) {\n      filter.topics = topics;\n    }\n\n    if (address && address !== \"*\") {\n      filter.address = address;\n    }\n\n    return filter;\n  }\n\n  pollable() {\n    return this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0;\n  }\n\n}\n\nconst coinInfos = {\n  0: {\n    symbol: \"btc\",\n    p2pkh: 0,\n    p2sh: 5,\n    prefix: \"bc\"\n  },\n  2: {\n    symbol: \"ltc\",\n    p2pkh: 48,\n    p2sh: 50,\n    prefix: \"ltc\"\n  },\n  3: {\n    symbol: \"doge\",\n    p2pkh: 30,\n    p2sh: 22\n  },\n  60: {\n    symbol: \"eth\",\n    ilk: \"eth\"\n  },\n  61: {\n    symbol: \"etc\",\n    ilk: \"eth\"\n  },\n  700: {\n    symbol: \"xdai\",\n    ilk: \"eth\"\n  }\n};\n\nfunction bytes32ify(value) {\n  return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\nfunction base58Encode(data) {\n  return Base58.encode(concat([data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4)]));\n}\n\nclass Resolver {\n  constructor(provider, address, name) {\n    defineReadOnly(this, \"provider\", provider);\n    defineReadOnly(this, \"name\", name);\n    defineReadOnly(this, \"address\", provider.formatter.address(address));\n  }\n\n  _fetchBytes(selector, parameters) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      const transaction = {\n        to: this.address,\n        data: hexConcat([selector, namehash(this.name), parameters || \"0x\"])\n      };\n      const result = yield this.provider.call(transaction);\n\n      if (result === \"0x\") {\n        return null;\n      }\n\n      const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n      const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n      return hexDataSlice(result, offset + 32, offset + 32 + length);\n    });\n  }\n\n  _getAddress(coinType, hexBytes) {\n    const coinInfo = coinInfos[String(coinType)];\n\n    if (coinInfo == null) {\n      logger$t.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: `getAddress(${coinType})`\n      });\n    }\n\n    if (coinInfo.ilk === \"eth\") {\n      return this.provider.formatter.address(hexBytes);\n    }\n\n    const bytes = arrayify(hexBytes);\n\n    if (coinInfo.p2pkh != null) {\n      const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n\n      if (p2pkh) {\n        const length = parseInt(p2pkh[1], 16);\n\n        if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n          return base58Encode(concat([[coinInfo.p2pkh], \"0x\" + p2pkh[2]]));\n        }\n      }\n    }\n\n    if (coinInfo.p2sh != null) {\n      const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n\n      if (p2sh) {\n        const length = parseInt(p2sh[1], 16);\n\n        if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n          return base58Encode(concat([[coinInfo.p2sh], \"0x\" + p2sh[2]]));\n        }\n      }\n    }\n\n    if (coinInfo.prefix != null) {\n      const length = bytes[1];\n      let version = bytes[0];\n\n      if (version === 0) {\n        if (length !== 20 && length !== 32) {\n          version = -1;\n        }\n      } else {\n        version = -1;\n      }\n\n      if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n        const words = bech32.toWords(bytes.slice(2));\n        words.unshift(version);\n        return bech32.encode(coinInfo.prefix, words);\n      }\n    }\n\n    return null;\n  }\n\n  getAddress(coinType) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      if (coinType == null) {\n        coinType = 60;\n      }\n\n      if (coinType === 60) {\n        const transaction = {\n          to: this.address,\n          data: \"0x3b3b57de\" + namehash(this.name).substring(2)\n        };\n        const hexBytes = yield this.provider.call(transaction);\n\n        if (hexBytes === \"0x\" || hexBytes === HashZero) {\n          return null;\n        }\n\n        return this.provider.formatter.callAddress(hexBytes);\n      }\n\n      const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      }\n\n      const address = this._getAddress(coinType, hexBytes);\n\n      if (address == null) {\n        logger$t.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: `getAddress(${coinType})`,\n          coinType: coinType,\n          data: hexBytes\n        });\n      }\n\n      return address;\n    });\n  }\n\n  getContentHash() {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      }\n\n      const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n\n      if (ipfs) {\n        const length = parseInt(ipfs[3], 16);\n\n        if (ipfs[4].length === length * 2) {\n          return \"ipfs://\" + Base58.encode(\"0x\" + ipfs[1]);\n        }\n      }\n\n      const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n\n      if (swarm) {\n        if (swarm[1].length === 32 * 2) {\n          return \"bzz://\" + swarm[1];\n        }\n      }\n\n      return logger$t.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"getContentHash()\",\n        data: hexBytes\n      });\n    });\n  }\n\n  getText(key) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      let keyBytes = toUtf8Bytes(key);\n      keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n\n      if (keyBytes.length % 32 !== 0) {\n        keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - key.length % 32)]);\n      }\n\n      const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n\n      if (hexBytes == null || hexBytes === \"0x\") {\n        return null;\n      }\n\n      return toUtf8String(hexBytes);\n    });\n  }\n\n}\n\nlet defaultFormatter = null;\nlet nextPollId = 1;\n\nclass BaseProvider extends Provider {\n  constructor(network) {\n    logger$t.checkNew(new.target, Provider);\n    super();\n    this._events = [];\n    this._emitted = {\n      block: -2\n    };\n    this.formatter = new.target.getFormatter();\n    defineReadOnly(this, \"anyNetwork\", network === \"any\");\n\n    if (this.anyNetwork) {\n      network = this.detectNetwork();\n    }\n\n    if (network instanceof Promise) {\n      this._networkPromise = network;\n      network.catch(error => {});\n\n      this._ready().catch(error => {});\n    } else {\n      const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n\n      if (knownNetwork) {\n        defineReadOnly(this, \"_network\", knownNetwork);\n        this.emit(\"network\", knownNetwork, null);\n      } else {\n        logger$t.throwArgumentError(\"invalid network\", \"network\", network);\n      }\n    }\n\n    this._maxInternalBlockNumber = -1024;\n    this._lastBlockNumber = -2;\n    this._pollingInterval = 4e3;\n    this._fastQueryDate = 0;\n  }\n\n  _ready() {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      if (this._network == null) {\n        let network = null;\n\n        if (this._networkPromise) {\n          try {\n            network = yield this._networkPromise;\n          } catch (error) {}\n        }\n\n        if (network == null) {\n          network = yield this.detectNetwork();\n        }\n\n        if (!network) {\n          logger$t.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n        }\n\n        if (this._network == null) {\n          if (this.anyNetwork) {\n            this._network = network;\n          } else {\n            defineReadOnly(this, \"_network\", network);\n          }\n\n          this.emit(\"network\", network, null);\n        }\n      }\n\n      return this._network;\n    });\n  }\n\n  get ready() {\n    return poll(() => {\n      return this._ready().then(network => {\n        return network;\n      }, error => {\n        if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n          return undefined;\n        }\n\n        throw error;\n      });\n    });\n  }\n\n  static getFormatter() {\n    if (defaultFormatter == null) {\n      defaultFormatter = new Formatter();\n    }\n\n    return defaultFormatter;\n  }\n\n  static getNetwork(network) {\n    return getNetwork(network == null ? \"homestead\" : network);\n  }\n\n  _getInternalBlockNumber(maxAge) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this._ready();\n\n      if (maxAge > 0) {\n        while (this._internalBlockNumber) {\n          const internalBlockNumber = this._internalBlockNumber;\n\n          try {\n            const result = yield internalBlockNumber;\n\n            if (getTime() - result.respTime <= maxAge) {\n              return result.blockNumber;\n            }\n\n            break;\n          } catch (error) {\n            if (this._internalBlockNumber === internalBlockNumber) {\n              break;\n            }\n          }\n        }\n      }\n\n      const reqTime = getTime();\n      const checkInternalBlockNumber = resolveProperties({\n        blockNumber: this.perform(\"getBlockNumber\", {}),\n        networkError: this.getNetwork().then(network => null, error => error)\n      }).then(({\n        blockNumber: blockNumber,\n        networkError: networkError\n      }) => {\n        if (networkError) {\n          if (this._internalBlockNumber === checkInternalBlockNumber) {\n            this._internalBlockNumber = null;\n          }\n\n          throw networkError;\n        }\n\n        const respTime = getTime();\n        blockNumber = BigNumber.from(blockNumber).toNumber();\n\n        if (blockNumber < this._maxInternalBlockNumber) {\n          blockNumber = this._maxInternalBlockNumber;\n        }\n\n        this._maxInternalBlockNumber = blockNumber;\n\n        this._setFastBlockNumber(blockNumber);\n\n        return {\n          blockNumber: blockNumber,\n          reqTime: reqTime,\n          respTime: respTime\n        };\n      });\n      this._internalBlockNumber = checkInternalBlockNumber;\n      checkInternalBlockNumber.catch(error => {\n        if (this._internalBlockNumber === checkInternalBlockNumber) {\n          this._internalBlockNumber = null;\n        }\n      });\n      return (yield checkInternalBlockNumber).blockNumber;\n    });\n  }\n\n  poll() {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      const pollId = nextPollId++;\n      const runners = [];\n      let blockNumber = null;\n\n      try {\n        blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n      } catch (error) {\n        this.emit(\"error\", error);\n        return;\n      }\n\n      this._setFastBlockNumber(blockNumber);\n\n      this.emit(\"poll\", pollId, blockNumber);\n\n      if (blockNumber === this._lastBlockNumber) {\n        this.emit(\"didPoll\", pollId);\n        return;\n      }\n\n      if (this._emitted.block === -2) {\n        this._emitted.block = blockNumber - 1;\n      }\n\n      if (Math.abs(this._emitted.block - blockNumber) > 1e3) {\n        logger$t.warn(\"network block skew detected; skipping block events\");\n        this.emit(\"error\", logger$t.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n          blockNumber: blockNumber,\n          event: \"blockSkew\",\n          previousBlockNumber: this._emitted.block\n        }));\n        this.emit(\"block\", blockNumber);\n      } else {\n        for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n          this.emit(\"block\", i);\n        }\n      }\n\n      if (this._emitted.block !== blockNumber) {\n        this._emitted.block = blockNumber;\n        Object.keys(this._emitted).forEach(key => {\n          if (key === \"block\") {\n            return;\n          }\n\n          const eventBlockNumber = this._emitted[key];\n\n          if (eventBlockNumber === \"pending\") {\n            return;\n          }\n\n          if (blockNumber - eventBlockNumber > 12) {\n            delete this._emitted[key];\n          }\n        });\n      }\n\n      if (this._lastBlockNumber === -2) {\n        this._lastBlockNumber = blockNumber - 1;\n      }\n\n      this._events.forEach(event => {\n        switch (event.type) {\n          case \"tx\":\n            {\n              const hash = event.hash;\n              let runner = this.getTransactionReceipt(hash).then(receipt => {\n                if (!receipt || receipt.blockNumber == null) {\n                  return null;\n                }\n\n                this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                this.emit(hash, receipt);\n                return null;\n              }).catch(error => {\n                this.emit(\"error\", error);\n              });\n              runners.push(runner);\n              break;\n            }\n\n          case \"filter\":\n            {\n              const filter = event.filter;\n              filter.fromBlock = this._lastBlockNumber + 1;\n              filter.toBlock = blockNumber;\n              const runner = this.getLogs(filter).then(logs => {\n                if (logs.length === 0) {\n                  return;\n                }\n\n                logs.forEach(log => {\n                  this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                  this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                  this.emit(filter, log);\n                });\n              }).catch(error => {\n                this.emit(\"error\", error);\n              });\n              runners.push(runner);\n              break;\n            }\n        }\n      });\n\n      this._lastBlockNumber = blockNumber;\n      Promise.all(runners).then(() => {\n        this.emit(\"didPoll\", pollId);\n      }).catch(error => {\n        this.emit(\"error\", error);\n      });\n      return;\n    });\n  }\n\n  resetEventsBlock(blockNumber) {\n    this._lastBlockNumber = blockNumber - 1;\n\n    if (this.polling) {\n      this.poll();\n    }\n  }\n\n  get network() {\n    return this._network;\n  }\n\n  detectNetwork() {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      return logger$t.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"provider.detectNetwork\"\n      });\n    });\n  }\n\n  getNetwork() {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      const network = yield this._ready();\n      const currentNetwork = yield this.detectNetwork();\n\n      if (network.chainId !== currentNetwork.chainId) {\n        if (this.anyNetwork) {\n          this._network = currentNetwork;\n          this._lastBlockNumber = -2;\n          this._fastBlockNumber = null;\n          this._fastBlockNumberPromise = null;\n          this._fastQueryDate = 0;\n          this._emitted.block = -2;\n          this._maxInternalBlockNumber = -1024;\n          this._internalBlockNumber = null;\n          this.emit(\"network\", currentNetwork, network);\n          yield stall(0);\n          return this._network;\n        }\n\n        const error = logger$t.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n          event: \"changed\",\n          network: network,\n          detectedNetwork: currentNetwork\n        });\n        this.emit(\"error\", error);\n        throw error;\n      }\n\n      return network;\n    });\n  }\n\n  get blockNumber() {\n    this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(blockNumber => {\n      this._setFastBlockNumber(blockNumber);\n    }, error => {});\n\n    return this._fastBlockNumber != null ? this._fastBlockNumber : -1;\n  }\n\n  get polling() {\n    return this._poller != null;\n  }\n\n  set polling(value) {\n    if (value && !this._poller) {\n      this._poller = setInterval(() => {\n        this.poll();\n      }, this.pollingInterval);\n\n      if (!this._bootstrapPoll) {\n        this._bootstrapPoll = setTimeout(() => {\n          this.poll();\n          this._bootstrapPoll = setTimeout(() => {\n            if (!this._poller) {\n              this.poll();\n            }\n\n            this._bootstrapPoll = null;\n          }, this.pollingInterval);\n        }, 0);\n      }\n    } else if (!value && this._poller) {\n      clearInterval(this._poller);\n      this._poller = null;\n    }\n  }\n\n  get pollingInterval() {\n    return this._pollingInterval;\n  }\n\n  set pollingInterval(value) {\n    if (typeof value !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n      throw new Error(\"invalid polling interval\");\n    }\n\n    this._pollingInterval = value;\n\n    if (this._poller) {\n      clearInterval(this._poller);\n      this._poller = setInterval(() => {\n        this.poll();\n      }, this._pollingInterval);\n    }\n  }\n\n  _getFastBlockNumber() {\n    const now = getTime();\n\n    if (now - this._fastQueryDate > 2 * this._pollingInterval) {\n      this._fastQueryDate = now;\n      this._fastBlockNumberPromise = this.getBlockNumber().then(blockNumber => {\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n          this._fastBlockNumber = blockNumber;\n        }\n\n        return this._fastBlockNumber;\n      });\n    }\n\n    return this._fastBlockNumberPromise;\n  }\n\n  _setFastBlockNumber(blockNumber) {\n    if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n      return;\n    }\n\n    this._fastQueryDate = getTime();\n\n    if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n      this._fastBlockNumber = blockNumber;\n      this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n    }\n  }\n\n  waitForTransaction(transactionHash, confirmations, timeout) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      if (confirmations == null) {\n        confirmations = 1;\n      }\n\n      const receipt = yield this.getTransactionReceipt(transactionHash);\n\n      if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n        return receipt;\n      }\n\n      return new Promise((resolve, reject) => {\n        let timer = null;\n        let done = false;\n\n        const handler = receipt => {\n          if (receipt.confirmations < confirmations) {\n            return;\n          }\n\n          if (timer) {\n            clearTimeout(timer);\n          }\n\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.removeListener(transactionHash, handler);\n          resolve(receipt);\n        };\n\n        this.on(transactionHash, handler);\n\n        if (typeof timeout === \"number\" && timeout > 0) {\n          timer = setTimeout(() => {\n            if (done) {\n              return;\n            }\n\n            timer = null;\n            done = true;\n            this.removeListener(transactionHash, handler);\n            reject(logger$t.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, {\n              timeout: timeout\n            }));\n          }, timeout);\n\n          if (timer.unref) {\n            timer.unref();\n          }\n        }\n      });\n    });\n  }\n\n  getBlockNumber() {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      return this._getInternalBlockNumber(0);\n    });\n  }\n\n  getGasPrice() {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const result = yield this.perform(\"getGasPrice\", {});\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getGasPrice\",\n          result: result,\n          error: error\n        });\n      }\n    });\n  }\n\n  getBalance(addressOrName, blockTag) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getBalance\", params);\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getBalance\",\n          params: params,\n          result: result,\n          error: error\n        });\n      }\n    });\n  }\n\n  getTransactionCount(addressOrName, blockTag) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getTransactionCount\", params);\n\n      try {\n        return BigNumber.from(result).toNumber();\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getTransactionCount\",\n          params: params,\n          result: result,\n          error: error\n        });\n      }\n    });\n  }\n\n  getCode(addressOrName, blockTag) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"getCode\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getCode\",\n          params: params,\n          result: result,\n          error: error\n        });\n      }\n    });\n  }\n\n  getStorageAt(addressOrName, position, blockTag) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        address: this._getAddress(addressOrName),\n        blockTag: this._getBlockTag(blockTag),\n        position: Promise.resolve(position).then(p => hexValue(p))\n      });\n      const result = yield this.perform(\"getStorageAt\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"getStorageAt\",\n          params: params,\n          result: result,\n          error: error\n        });\n      }\n    });\n  }\n\n  _wrapTransaction(tx, hash) {\n    if (hash != null && hexDataLength(hash) !== 32) {\n      throw new Error(\"invalid response - sendTransaction\");\n    }\n\n    const result = tx;\n\n    if (hash != null && tx.hash !== hash) {\n      logger$t.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, {\n        expectedHash: tx.hash,\n        returnedHash: hash\n      });\n    }\n\n    result.wait = confirmations => __awaiter$8(this, void 0, void 0, function* () {\n      if (confirmations !== 0) {\n        this._emitted[\"t:\" + tx.hash] = \"pending\";\n      }\n\n      const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n\n      if (receipt == null && confirmations === 0) {\n        return null;\n      }\n\n      this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n      if (receipt.status === 0) {\n        logger$t.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n          transactionHash: tx.hash,\n          transaction: tx,\n          receipt: receipt\n        });\n      }\n\n      return receipt;\n    });\n\n    return result;\n  }\n\n  sendTransaction(signedTransaction) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n      const tx = this.formatter.transaction(signedTransaction);\n\n      try {\n        const hash = yield this.perform(\"sendTransaction\", {\n          signedTransaction: hexTx\n        });\n        return this._wrapTransaction(tx, hash);\n      } catch (error) {\n        error.transaction = tx;\n        error.transactionHash = tx.hash;\n        throw error;\n      }\n    });\n  }\n\n  _getTransactionRequest(transaction) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      const values = yield transaction;\n      const tx = {};\n      [\"from\", \"to\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? this._getAddress(v) : null);\n      });\n      [\"gasLimit\", \"gasPrice\", \"value\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? BigNumber.from(v) : null);\n      });\n      [\"type\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v != null ? v : null);\n      });\n\n      if (values.accessList) {\n        tx.accessList = this.formatter.accessList(values.accessList);\n      }\n\n      [\"data\"].forEach(key => {\n        if (values[key] == null) {\n          return;\n        }\n\n        tx[key] = Promise.resolve(values[key]).then(v => v ? hexlify(v) : null);\n      });\n      return this.formatter.transactionRequest(yield resolveProperties(tx));\n    });\n  }\n\n  _getFilter(filter) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      filter = yield filter;\n      const result = {};\n\n      if (filter.address != null) {\n        result.address = this._getAddress(filter.address);\n      }\n\n      [\"blockHash\", \"topics\"].forEach(key => {\n        if (filter[key] == null) {\n          return;\n        }\n\n        result[key] = filter[key];\n      });\n      [\"fromBlock\", \"toBlock\"].forEach(key => {\n        if (filter[key] == null) {\n          return;\n        }\n\n        result[key] = this._getBlockTag(filter[key]);\n      });\n      return this.formatter.filter(yield resolveProperties(result));\n    });\n  }\n\n  call(transaction, blockTag) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        transaction: this._getTransactionRequest(transaction),\n        blockTag: this._getBlockTag(blockTag)\n      });\n      const result = yield this.perform(\"call\", params);\n\n      try {\n        return hexlify(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"call\",\n          params: params,\n          result: result,\n          error: error\n        });\n      }\n    });\n  }\n\n  estimateGas(transaction) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        transaction: this._getTransactionRequest(transaction)\n      });\n      const result = yield this.perform(\"estimateGas\", params);\n\n      try {\n        return BigNumber.from(result);\n      } catch (error) {\n        return logger$t.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n          method: \"estimateGas\",\n          params: params,\n          result: result,\n          error: error\n        });\n      }\n    });\n  }\n\n  _getAddress(addressOrName) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      const address = yield this.resolveName(addressOrName);\n\n      if (address == null) {\n        logger$t.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: `resolveName(${JSON.stringify(addressOrName)})`\n        });\n      }\n\n      return address;\n    });\n  }\n\n  _getBlock(blockHashOrBlockTag, includeTransactions) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      blockHashOrBlockTag = yield blockHashOrBlockTag;\n      let blockNumber = -128;\n      const params = {\n        includeTransactions: !!includeTransactions\n      };\n\n      if (isHexString(blockHashOrBlockTag, 32)) {\n        params.blockHash = blockHashOrBlockTag;\n      } else {\n        try {\n          params.blockTag = this.formatter.blockTag(yield this._getBlockTag(blockHashOrBlockTag));\n\n          if (isHexString(params.blockTag)) {\n            blockNumber = parseInt(params.blockTag.substring(2), 16);\n          }\n        } catch (error) {\n          logger$t.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n        }\n      }\n\n      return poll(() => __awaiter$8(this, void 0, void 0, function* () {\n        const block = yield this.perform(\"getBlock\", params);\n\n        if (block == null) {\n          if (params.blockHash != null) {\n            if (this._emitted[\"b:\" + params.blockHash] == null) {\n              return null;\n            }\n          }\n\n          if (params.blockTag != null) {\n            if (blockNumber > this._emitted.block) {\n              return null;\n            }\n          }\n\n          return undefined;\n        }\n\n        if (includeTransactions) {\n          let blockNumber = null;\n\n          for (let i = 0; i < block.transactions.length; i++) {\n            const tx = block.transactions[i];\n\n            if (tx.blockNumber == null) {\n              tx.confirmations = 0;\n            } else if (tx.confirmations == null) {\n              if (blockNumber == null) {\n                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n              }\n\n              let confirmations = blockNumber - tx.blockNumber + 1;\n\n              if (confirmations <= 0) {\n                confirmations = 1;\n              }\n\n              tx.confirmations = confirmations;\n            }\n          }\n\n          return this.formatter.blockWithTransactions(block);\n        }\n\n        return this.formatter.block(block);\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getBlock(blockHashOrBlockTag) {\n    return this._getBlock(blockHashOrBlockTag, false);\n  }\n\n  getBlockWithTransactions(blockHashOrBlockTag) {\n    return this._getBlock(blockHashOrBlockTag, true);\n  }\n\n  getTransaction(transactionHash) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      transactionHash = yield transactionHash;\n      const params = {\n        transactionHash: this.formatter.hash(transactionHash, true)\n      };\n      return poll(() => __awaiter$8(this, void 0, void 0, function* () {\n        const result = yield this.perform(\"getTransaction\", params);\n\n        if (result == null) {\n          if (this._emitted[\"t:\" + transactionHash] == null) {\n            return null;\n          }\n\n          return undefined;\n        }\n\n        const tx = this.formatter.transactionResponse(result);\n\n        if (tx.blockNumber == null) {\n          tx.confirmations = 0;\n        } else if (tx.confirmations == null) {\n          const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n          let confirmations = blockNumber - tx.blockNumber + 1;\n\n          if (confirmations <= 0) {\n            confirmations = 1;\n          }\n\n          tx.confirmations = confirmations;\n        }\n\n        return this._wrapTransaction(tx);\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getTransactionReceipt(transactionHash) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      transactionHash = yield transactionHash;\n      const params = {\n        transactionHash: this.formatter.hash(transactionHash, true)\n      };\n      return poll(() => __awaiter$8(this, void 0, void 0, function* () {\n        const result = yield this.perform(\"getTransactionReceipt\", params);\n\n        if (result == null) {\n          if (this._emitted[\"t:\" + transactionHash] == null) {\n            return null;\n          }\n\n          return undefined;\n        }\n\n        if (result.blockHash == null) {\n          return undefined;\n        }\n\n        const receipt = this.formatter.receipt(result);\n\n        if (receipt.blockNumber == null) {\n          receipt.confirmations = 0;\n        } else if (receipt.confirmations == null) {\n          const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n          let confirmations = blockNumber - receipt.blockNumber + 1;\n\n          if (confirmations <= 0) {\n            confirmations = 1;\n          }\n\n          receipt.confirmations = confirmations;\n        }\n\n        return receipt;\n      }), {\n        oncePoll: this\n      });\n    });\n  }\n\n  getLogs(filter) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      const params = yield resolveProperties({\n        filter: this._getFilter(filter)\n      });\n      const logs = yield this.perform(\"getLogs\", params);\n      logs.forEach(log => {\n        if (log.removed == null) {\n          log.removed = false;\n        }\n      });\n      return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    });\n  }\n\n  getEtherPrice() {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      yield this.getNetwork();\n      return this.perform(\"getEtherPrice\", {});\n    });\n  }\n\n  _getBlockTag(blockTag) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      blockTag = yield blockTag;\n\n      if (typeof blockTag === \"number\" && blockTag < 0) {\n        if (blockTag % 1) {\n          logger$t.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n        }\n\n        let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        blockNumber += blockTag;\n\n        if (blockNumber < 0) {\n          blockNumber = 0;\n        }\n\n        return this.formatter.blockTag(blockNumber);\n      }\n\n      return this.formatter.blockTag(blockTag);\n    });\n  }\n\n  getResolver(name) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      const address = yield this._getResolver(name);\n\n      if (address == null) {\n        return null;\n      }\n\n      return new Resolver(this, address, name);\n    });\n  }\n\n  _getResolver(name) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      const network = yield this.getNetwork();\n\n      if (!network.ensAddress) {\n        logger$t.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"ENS\",\n          network: network.name\n        });\n      }\n\n      const transaction = {\n        to: network.ensAddress,\n        data: \"0x0178b8bf\" + namehash(name).substring(2)\n      };\n      return this.formatter.callAddress(yield this.call(transaction));\n    });\n  }\n\n  resolveName(name) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      name = yield name;\n\n      try {\n        return Promise.resolve(this.formatter.address(name));\n      } catch (error) {\n        if (isHexString(name)) {\n          throw error;\n        }\n      }\n\n      if (typeof name !== \"string\") {\n        logger$t.throwArgumentError(\"invalid ENS name\", \"name\", name);\n      }\n\n      const resolver = yield this.getResolver(name);\n\n      if (!resolver) {\n        return null;\n      }\n\n      return yield resolver.getAddress();\n    });\n  }\n\n  lookupAddress(address) {\n    return __awaiter$8(this, void 0, void 0, function* () {\n      address = yield address;\n      address = this.formatter.address(address);\n      const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n      const resolverAddress = yield this._getResolver(reverseName);\n\n      if (!resolverAddress) {\n        return null;\n      }\n\n      let bytes = arrayify(yield this.call({\n        to: resolverAddress,\n        data: \"0x691f3431\" + namehash(reverseName).substring(2)\n      }));\n\n      if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n        return null;\n      }\n\n      bytes = bytes.slice(32);\n\n      if (bytes.length < 32) {\n        return null;\n      }\n\n      const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n      bytes = bytes.slice(32);\n\n      if (length > bytes.length) {\n        return null;\n      }\n\n      const name = toUtf8String(bytes.slice(0, length));\n      const addr = yield this.resolveName(name);\n\n      if (addr != address) {\n        return null;\n      }\n\n      return name;\n    });\n  }\n\n  perform(method, params) {\n    return logger$t.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n      operation: method\n    });\n  }\n\n  _startEvent(event) {\n    this.polling = this._events.filter(e => e.pollable()).length > 0;\n  }\n\n  _stopEvent(event) {\n    this.polling = this._events.filter(e => e.pollable()).length > 0;\n  }\n\n  _addEventListener(eventName, listener, once) {\n    const event = new Event(getEventTag$1(eventName), listener, once);\n\n    this._events.push(event);\n\n    this._startEvent(event);\n\n    return this;\n  }\n\n  on(eventName, listener) {\n    return this._addEventListener(eventName, listener, false);\n  }\n\n  once(eventName, listener) {\n    return this._addEventListener(eventName, listener, true);\n  }\n\n  emit(eventName, ...args) {\n    let result = false;\n    let stopped = [];\n    let eventTag = getEventTag$1(eventName);\n    this._events = this._events.filter(event => {\n      if (event.tag !== eventTag) {\n        return true;\n      }\n\n      setTimeout(() => {\n        event.listener.apply(this, args);\n      }, 0);\n      result = true;\n\n      if (event.once) {\n        stopped.push(event);\n        return false;\n      }\n\n      return true;\n    });\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return result;\n  }\n\n  listenerCount(eventName) {\n    if (!eventName) {\n      return this._events.length;\n    }\n\n    let eventTag = getEventTag$1(eventName);\n    return this._events.filter(event => {\n      return event.tag === eventTag;\n    }).length;\n  }\n\n  listeners(eventName) {\n    if (eventName == null) {\n      return this._events.map(event => event.listener);\n    }\n\n    let eventTag = getEventTag$1(eventName);\n    return this._events.filter(event => event.tag === eventTag).map(event => event.listener);\n  }\n\n  off(eventName, listener) {\n    if (listener == null) {\n      return this.removeAllListeners(eventName);\n    }\n\n    const stopped = [];\n    let found = false;\n    let eventTag = getEventTag$1(eventName);\n    this._events = this._events.filter(event => {\n      if (event.tag !== eventTag || event.listener != listener) {\n        return true;\n      }\n\n      if (found) {\n        return true;\n      }\n\n      found = true;\n      stopped.push(event);\n      return false;\n    });\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return this;\n  }\n\n  removeAllListeners(eventName) {\n    let stopped = [];\n\n    if (eventName == null) {\n      stopped = this._events;\n      this._events = [];\n    } else {\n      const eventTag = getEventTag$1(eventName);\n      this._events = this._events.filter(event => {\n        if (event.tag !== eventTag) {\n          return true;\n        }\n\n        stopped.push(event);\n        return false;\n      });\n    }\n\n    stopped.forEach(event => {\n      this._stopEvent(event);\n    });\n    return this;\n  }\n\n}\n\n\"use strict\";\n\nvar __awaiter$9 = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$u = new Logger(version$m);\nconst errorGas = [\"call\", \"estimateGas\"];\n\nfunction checkError(method, error, params) {\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    const e = error.error;\n\n    if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n      return e.data;\n    }\n  }\n\n  let message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === \"string\") {\n    message = error.error.message;\n  } else if (typeof error.body === \"string\") {\n    message = error.body;\n  } else if (typeof error.responseText === \"string\") {\n    message = error.responseText;\n  }\n\n  message = (message || \"\").toLowerCase();\n  const transaction = params.transaction || params.signedTransaction;\n\n  if (message.match(/insufficient funds/)) {\n    logger$u.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (message.match(/nonce too low/)) {\n    logger$u.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (message.match(/replacement transaction underpriced/)) {\n    logger$u.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (message.match(/only replay-protected/)) {\n    logger$u.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n    logger$u.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  throw error;\n}\n\nfunction timer(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n\nfunction getResult(payload) {\n  if (payload.error) {\n    const error = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n\nfunction getLowerCase(value) {\n  if (value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n}\n\nconst _constructorGuard$4 = {};\n\nclass JsonRpcSigner extends Signer {\n  constructor(constructorGuard, provider, addressOrIndex) {\n    logger$u.checkNew(new.target, JsonRpcSigner);\n    super();\n\n    if (constructorGuard !== _constructorGuard$4) {\n      throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n    }\n\n    defineReadOnly(this, \"provider\", provider);\n\n    if (addressOrIndex == null) {\n      addressOrIndex = 0;\n    }\n\n    if (typeof addressOrIndex === \"string\") {\n      defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n      defineReadOnly(this, \"_index\", null);\n    } else if (typeof addressOrIndex === \"number\") {\n      defineReadOnly(this, \"_index\", addressOrIndex);\n      defineReadOnly(this, \"_address\", null);\n    } else {\n      logger$u.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n    }\n  }\n\n  connect(provider) {\n    return logger$u.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"connect\"\n    });\n  }\n\n  connectUnchecked() {\n    return new UncheckedJsonRpcSigner(_constructorGuard$4, this.provider, this._address || this._index);\n  }\n\n  getAddress() {\n    if (this._address) {\n      return Promise.resolve(this._address);\n    }\n\n    return this.provider.send(\"eth_accounts\", []).then(accounts => {\n      if (accounts.length <= this._index) {\n        logger$u.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"getAddress\"\n        });\n      }\n\n      return this.provider.formatter.address(accounts[this._index]);\n    });\n  }\n\n  sendUncheckedTransaction(transaction) {\n    transaction = shallowCopy(transaction);\n    const fromAddress = this.getAddress().then(address => {\n      if (address) {\n        address = address.toLowerCase();\n      }\n\n      return address;\n    });\n\n    if (transaction.gasLimit == null) {\n      const estimate = shallowCopy(transaction);\n      estimate.from = fromAddress;\n      transaction.gasLimit = this.provider.estimateGas(estimate);\n    }\n\n    return resolveProperties({\n      tx: resolveProperties(transaction),\n      sender: fromAddress\n    }).then(({\n      tx: tx,\n      sender: sender\n    }) => {\n      if (tx.from != null) {\n        if (tx.from.toLowerCase() !== sender) {\n          logger$u.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n      } else {\n        tx.from = sender;\n      }\n\n      const hexTx = this.provider.constructor.hexlifyTransaction(tx, {\n        from: true\n      });\n      return this.provider.send(\"eth_sendTransaction\", [hexTx]).then(hash => {\n        return hash;\n      }, error => {\n        return checkError(\"sendTransaction\", error, hexTx);\n      });\n    });\n  }\n\n  signTransaction(transaction) {\n    return logger$u.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"signTransaction\"\n    });\n  }\n\n  sendTransaction(transaction) {\n    return this.sendUncheckedTransaction(transaction).then(hash => {\n      return poll(() => {\n        return this.provider.getTransaction(hash).then(tx => {\n          if (tx === null) {\n            return undefined;\n          }\n\n          return this.provider._wrapTransaction(tx, hash);\n        });\n      }, {\n        onceBlock: this.provider\n      }).catch(error => {\n        error.transactionHash = hash;\n        throw error;\n      });\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n      const address = yield this.getAddress();\n      return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n    });\n  }\n\n  _signTypedData(domain, types, value) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const populated = yield TypedDataEncoder.resolveNames(domain, types, value, name => {\n        return this.provider.resolveName(name);\n      });\n      const address = yield this.getAddress();\n      return yield this.provider.send(\"eth_signTypedData_v4\", [address.toLowerCase(), JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);\n    });\n  }\n\n  unlock(password) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const provider = this.provider;\n      const address = yield this.getAddress();\n      return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n    });\n  }\n\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n  sendTransaction(transaction) {\n    return this.sendUncheckedTransaction(transaction).then(hash => {\n      return {\n        hash: hash,\n        nonce: null,\n        gasLimit: null,\n        gasPrice: null,\n        data: null,\n        value: null,\n        chainId: null,\n        confirmations: 0,\n        from: null,\n        wait: confirmations => {\n          return this.provider.waitForTransaction(hash, confirmations);\n        }\n      };\n    });\n  }\n\n}\n\nconst allowedTransactionKeys$3 = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true\n};\n\nclass JsonRpcProvider extends BaseProvider {\n  constructor(url, network) {\n    logger$u.checkNew(new.target, JsonRpcProvider);\n    let networkOrReady = network;\n\n    if (networkOrReady == null) {\n      networkOrReady = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          this.detectNetwork().then(network => {\n            resolve(network);\n          }, error => {\n            reject(error);\n          });\n        }, 0);\n      });\n    }\n\n    super(networkOrReady);\n\n    if (!url) {\n      url = getStatic(this.constructor, \"defaultUrl\")();\n    }\n\n    if (typeof url === \"string\") {\n      defineReadOnly(this, \"connection\", Object.freeze({\n        url: url\n      }));\n    } else {\n      defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n    }\n\n    this._nextId = 42;\n  }\n\n  get _cache() {\n    if (this._eventLoopCache == null) {\n      this._eventLoopCache = {};\n    }\n\n    return this._eventLoopCache;\n  }\n\n  static defaultUrl() {\n    return \"http://localhost:8545\";\n  }\n\n  detectNetwork() {\n    if (!this._cache[\"detectNetwork\"]) {\n      this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n      setTimeout(() => {\n        this._cache[\"detectNetwork\"] = null;\n      }, 0);\n    }\n\n    return this._cache[\"detectNetwork\"];\n  }\n\n  _uncachedDetectNetwork() {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      yield timer(0);\n      let chainId = null;\n\n      try {\n        chainId = yield this.send(\"eth_chainId\", []);\n      } catch (error) {\n        try {\n          chainId = yield this.send(\"net_version\", []);\n        } catch (error) {}\n      }\n\n      if (chainId != null) {\n        const getNetwork = getStatic(this.constructor, \"getNetwork\");\n\n        try {\n          return getNetwork(BigNumber.from(chainId).toNumber());\n        } catch (error) {\n          return logger$u.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            chainId: chainId,\n            event: \"invalidNetwork\",\n            serverError: error\n          });\n        }\n      }\n\n      return logger$u.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n        event: \"noNetwork\"\n      });\n    });\n  }\n\n  getSigner(addressOrIndex) {\n    return new JsonRpcSigner(_constructorGuard$4, this, addressOrIndex);\n  }\n\n  getUncheckedSigner(addressOrIndex) {\n    return this.getSigner(addressOrIndex).connectUnchecked();\n  }\n\n  listAccounts() {\n    return this.send(\"eth_accounts\", []).then(accounts => {\n      return accounts.map(a => this.formatter.address(a));\n    });\n  }\n\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      request: deepCopy(request),\n      provider: this\n    });\n    const cache = [\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0;\n\n    if (cache && this._cache[method]) {\n      return this._cache[method];\n    }\n\n    const result = fetchJson(this.connection, JSON.stringify(request), getResult).then(result => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: request,\n        response: result,\n        provider: this\n      });\n      return result;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        error: error,\n        request: request,\n        provider: this\n      });\n      throw error;\n    });\n\n    if (cache) {\n      this._cache[method] = result;\n      setTimeout(() => {\n        this._cache[method] = null;\n      }, 0);\n    }\n\n    return result;\n  }\n\n  prepareRequest(method, params) {\n    switch (method) {\n      case \"getBlockNumber\":\n        return [\"eth_blockNumber\", []];\n\n      case \"getGasPrice\":\n        return [\"eth_gasPrice\", []];\n\n      case \"getBalance\":\n        return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getTransactionCount\":\n        return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getCode\":\n        return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getStorageAt\":\n        return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n\n      case \"sendTransaction\":\n        return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n\n      case \"getBlock\":\n        if (params.blockTag) {\n          return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n        } else if (params.blockHash) {\n          return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n        }\n\n        return null;\n\n      case \"getTransaction\":\n        return [\"eth_getTransactionByHash\", [params.transactionHash]];\n\n      case \"getTransactionReceipt\":\n        return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n\n      case \"call\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_call\", [hexlifyTransaction(params.transaction, {\n            from: true\n          }), params.blockTag]];\n        }\n\n      case \"estimateGas\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, {\n            from: true\n          })]];\n        }\n\n      case \"getLogs\":\n        if (params.filter && params.filter.address != null) {\n          params.filter.address = getLowerCase(params.filter.address);\n        }\n\n        return [\"eth_getLogs\", [params.filter]];\n\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  perform(method, params) {\n    return __awaiter$9(this, void 0, void 0, function* () {\n      const args = this.prepareRequest(method, params);\n\n      if (args == null) {\n        logger$u.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n          operation: method\n        });\n      }\n\n      try {\n        return yield this.send(args[0], args[1]);\n      } catch (error) {\n        return checkError(method, error, params);\n      }\n    });\n  }\n\n  _startEvent(event) {\n    if (event.tag === \"pending\") {\n      this._startPending();\n    }\n\n    super._startEvent(event);\n  }\n\n  _startPending() {\n    if (this._pendingFilter != null) {\n      return;\n    }\n\n    const self = this;\n    const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n    this._pendingFilter = pendingFilter;\n    pendingFilter.then(function (filterId) {\n      function poll() {\n        self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n          if (self._pendingFilter != pendingFilter) {\n            return null;\n          }\n\n          let seq = Promise.resolve();\n          hashes.forEach(function (hash) {\n            self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n            seq = seq.then(function () {\n              return self.getTransaction(hash).then(function (tx) {\n                self.emit(\"pending\", tx);\n                return null;\n              });\n            });\n          });\n          return seq.then(function () {\n            return timer(1e3);\n          });\n        }).then(function () {\n          if (self._pendingFilter != pendingFilter) {\n            self.send(\"eth_uninstallFilter\", [filterId]);\n            return;\n          }\n\n          setTimeout(function () {\n            poll();\n          }, 0);\n          return null;\n        }).catch(error => {});\n      }\n\n      poll();\n      return filterId;\n    }).catch(error => {});\n  }\n\n  _stopEvent(event) {\n    if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n      this._pendingFilter = null;\n    }\n\n    super._stopEvent(event);\n  }\n\n  static hexlifyTransaction(transaction, allowExtra) {\n    const allowed = shallowCopy(allowedTransactionKeys$3);\n\n    if (allowExtra) {\n      for (const key in allowExtra) {\n        if (allowExtra[key]) {\n          allowed[key] = true;\n        }\n      }\n    }\n\n    checkProperties(transaction, allowed);\n    const result = {};\n    [\"gasLimit\", \"gasPrice\", \"type\", \"nonce\", \"value\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      const value = hexValue(transaction[key]);\n\n      if (key === \"gasLimit\") {\n        key = \"gas\";\n      }\n\n      result[key] = value;\n    });\n    [\"from\", \"to\", \"data\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      result[key] = hexlify(transaction[key]);\n    });\n\n    if (transaction.accessList) {\n      result[\"accessList\"] = accessListify(transaction.accessList);\n    }\n\n    return result;\n  }\n\n}\n\n\"use strict\";\n\nlet WS = null;\n\ntry {\n  WS = WebSocket;\n\n  if (WS == null) {\n    throw new Error(\"inject please\");\n  }\n} catch (error) {\n  const logger = new Logger(version$m);\n\n  WS = function () {\n    logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"new WebSocket()\"\n    });\n  };\n}\n\n\"use strict\";\n\nvar __awaiter$a = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$v = new Logger(version$m);\nlet NextId = 1;\n\nclass WebSocketProvider extends JsonRpcProvider {\n  constructor(url, network) {\n    if (network === \"any\") {\n      logger$v.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"network:any\"\n      });\n    }\n\n    super(url, network);\n    this._pollingInterval = -1;\n    this._wsReady = false;\n    defineReadOnly(this, \"_websocket\", new WS(this.connection.url));\n    defineReadOnly(this, \"_requests\", {});\n    defineReadOnly(this, \"_subs\", {});\n    defineReadOnly(this, \"_subIds\", {});\n    defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n    this._websocket.onopen = () => {\n      this._wsReady = true;\n      Object.keys(this._requests).forEach(id => {\n        this._websocket.send(this._requests[id].payload);\n      });\n    };\n\n    this._websocket.onmessage = messageEvent => {\n      const data = messageEvent.data;\n      const result = JSON.parse(data);\n\n      if (result.id != null) {\n        const id = String(result.id);\n        const request = this._requests[id];\n        delete this._requests[id];\n\n        if (result.result !== undefined) {\n          request.callback(null, result.result);\n          this.emit(\"debug\", {\n            action: \"response\",\n            request: JSON.parse(request.payload),\n            response: result.result,\n            provider: this\n          });\n        } else {\n          let error = null;\n\n          if (result.error) {\n            error = new Error(result.error.message || \"unknown error\");\n            defineReadOnly(error, \"code\", result.error.code || null);\n            defineReadOnly(error, \"response\", data);\n          } else {\n            error = new Error(\"unknown error\");\n          }\n\n          request.callback(error, undefined);\n          this.emit(\"debug\", {\n            action: \"response\",\n            error: error,\n            request: JSON.parse(request.payload),\n            provider: this\n          });\n        }\n      } else if (result.method === \"eth_subscription\") {\n        const sub = this._subs[result.params.subscription];\n\n        if (sub) {\n          sub.processFunc(result.params.result);\n        }\n      } else {\n        console.warn(\"this should not happen\");\n      }\n    };\n\n    const fauxPoll = setInterval(() => {\n      this.emit(\"poll\");\n    }, 1e3);\n\n    if (fauxPoll.unref) {\n      fauxPoll.unref();\n    }\n  }\n\n  detectNetwork() {\n    return this._detectNetwork;\n  }\n\n  get pollingInterval() {\n    return 0;\n  }\n\n  resetEventsBlock(blockNumber) {\n    logger$v.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"resetEventBlock\"\n    });\n  }\n\n  set pollingInterval(value) {\n    logger$v.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"setPollingInterval\"\n    });\n  }\n\n  poll() {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      return null;\n    });\n  }\n\n  set polling(value) {\n    if (!value) {\n      return;\n    }\n\n    logger$v.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"setPolling\"\n    });\n  }\n\n  send(method, params) {\n    const rid = NextId++;\n    return new Promise((resolve, reject) => {\n      function callback(error, result) {\n        if (error) {\n          return reject(error);\n        }\n\n        return resolve(result);\n      }\n\n      const payload = JSON.stringify({\n        method: method,\n        params: params,\n        id: rid,\n        jsonrpc: \"2.0\"\n      });\n      this.emit(\"debug\", {\n        action: \"request\",\n        request: JSON.parse(payload),\n        provider: this\n      });\n      this._requests[String(rid)] = {\n        callback: callback,\n        payload: payload\n      };\n\n      if (this._wsReady) {\n        this._websocket.send(payload);\n      }\n    });\n  }\n\n  static defaultUrl() {\n    return \"ws://localhost:8546\";\n  }\n\n  _subscribe(tag, param, processFunc) {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      let subIdPromise = this._subIds[tag];\n\n      if (subIdPromise == null) {\n        subIdPromise = Promise.all(param).then(param => {\n          return this.send(\"eth_subscribe\", param);\n        });\n        this._subIds[tag] = subIdPromise;\n      }\n\n      const subId = yield subIdPromise;\n      this._subs[subId] = {\n        tag: tag,\n        processFunc: processFunc\n      };\n    });\n  }\n\n  _startEvent(event) {\n    switch (event.type) {\n      case \"block\":\n        this._subscribe(\"block\", [\"newHeads\"], result => {\n          const blockNumber = BigNumber.from(result.number).toNumber();\n          this._emitted.block = blockNumber;\n          this.emit(\"block\", blockNumber);\n        });\n\n        break;\n\n      case \"pending\":\n        this._subscribe(\"pending\", [\"newPendingTransactions\"], result => {\n          this.emit(\"pending\", result);\n        });\n\n        break;\n\n      case \"filter\":\n        this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], result => {\n          if (result.removed == null) {\n            result.removed = false;\n          }\n\n          this.emit(event.filter, this.formatter.filterLog(result));\n        });\n\n        break;\n\n      case \"tx\":\n        {\n          const emitReceipt = event => {\n            const hash = event.hash;\n            this.getTransactionReceipt(hash).then(receipt => {\n              if (!receipt) {\n                return;\n              }\n\n              this.emit(hash, receipt);\n            });\n          };\n\n          emitReceipt(event);\n\n          this._subscribe(\"tx\", [\"newHeads\"], result => {\n            this._events.filter(e => e.type === \"tx\").forEach(emitReceipt);\n          });\n\n          break;\n        }\n\n      case \"debug\":\n      case \"poll\":\n      case \"willPoll\":\n      case \"didPoll\":\n      case \"error\":\n        break;\n\n      default:\n        console.log(\"unhandled:\", event);\n        break;\n    }\n  }\n\n  _stopEvent(event) {\n    let tag = event.tag;\n\n    if (event.type === \"tx\") {\n      if (this._events.filter(e => e.type === \"tx\").length) {\n        return;\n      }\n\n      tag = \"tx\";\n    } else if (this.listenerCount(event.event)) {\n      return;\n    }\n\n    const subId = this._subIds[tag];\n\n    if (!subId) {\n      return;\n    }\n\n    delete this._subIds[tag];\n    subId.then(subId => {\n      if (!this._subs[subId]) {\n        return;\n      }\n\n      delete this._subs[subId];\n      this.send(\"eth_unsubscribe\", [subId]);\n    });\n  }\n\n  destroy() {\n    return __awaiter$a(this, void 0, void 0, function* () {\n      if (this._websocket.readyState === WS.CONNECTING) {\n        yield new Promise(resolve => {\n          this._websocket.onopen = function () {\n            resolve(true);\n          };\n\n          this._websocket.onerror = function () {\n            resolve(false);\n          };\n        });\n      }\n\n      this._websocket.close(1e3);\n    });\n  }\n\n}\n\n\"use strict\";\n\nvar __awaiter$b = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$w = new Logger(version$m);\n\nclass StaticJsonRpcProvider extends JsonRpcProvider {\n  detectNetwork() {\n    const _super = Object.create(null, {\n      detectNetwork: {\n        get: () => super.detectNetwork\n      }\n    });\n\n    return __awaiter$b(this, void 0, void 0, function* () {\n      let network = this.network;\n\n      if (network == null) {\n        network = yield _super.detectNetwork.call(this);\n\n        if (!network) {\n          logger$w.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n        }\n\n        if (this._network == null) {\n          defineReadOnly(this, \"_network\", network);\n          this.emit(\"network\", network, null);\n        }\n      }\n\n      return network;\n    });\n  }\n\n}\n\nclass UrlJsonRpcProvider extends StaticJsonRpcProvider {\n  constructor(network, apiKey) {\n    logger$w.checkAbstract(new.target, UrlJsonRpcProvider);\n    network = getStatic(new.target, \"getNetwork\")(network);\n    apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n    const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n    super(connection, network);\n\n    if (typeof apiKey === \"string\") {\n      defineReadOnly(this, \"apiKey\", apiKey);\n    } else if (apiKey != null) {\n      Object.keys(apiKey).forEach(key => {\n        defineReadOnly(this, key, apiKey[key]);\n      });\n    }\n  }\n\n  _startPending() {\n    logger$w.warn(\"WARNING: API provider does not support pending filters\");\n  }\n\n  isCommunityResource() {\n    return false;\n  }\n\n  getSigner(address) {\n    return logger$w.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"getSigner\"\n    });\n  }\n\n  listAccounts() {\n    return Promise.resolve([]);\n  }\n\n  static getApiKey(apiKey) {\n    return apiKey;\n  }\n\n  static getUrl(network, apiKey) {\n    return logger$w.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n      operation: \"getUrl\"\n    });\n  }\n\n}\n\n\"use strict\";\n\nconst logger$x = new Logger(version$m);\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\n\nclass AlchemyWebSocketProvider extends WebSocketProvider {\n  constructor(network, apiKey) {\n    const provider = new AlchemyProvider(network, apiKey);\n    const url = provider.connection.url.replace(/^http/i, \"ws\").replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n    super(url, provider.network);\n    defineReadOnly(this, \"apiKey\", provider.apiKey);\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n\n}\n\nclass AlchemyProvider extends UrlJsonRpcProvider {\n  static getWebSocketProvider(network, apiKey) {\n    return new AlchemyWebSocketProvider(network, apiKey);\n  }\n\n  static getApiKey(apiKey) {\n    if (apiKey == null) {\n      return defaultApiKey;\n    }\n\n    if (apiKey && typeof apiKey !== \"string\") {\n      logger$x.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKey;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network.name) {\n      case \"homestead\":\n        host = \"eth-mainnet.alchemyapi.io/v2/\";\n        break;\n\n      case \"ropsten\":\n        host = \"eth-ropsten.alchemyapi.io/v2/\";\n        break;\n\n      case \"rinkeby\":\n        host = \"eth-rinkeby.alchemyapi.io/v2/\";\n        break;\n\n      case \"goerli\":\n        host = \"eth-goerli.alchemyapi.io/v2/\";\n        break;\n\n      case \"kovan\":\n        host = \"eth-kovan.alchemyapi.io/v2/\";\n        break;\n\n      default:\n        logger$x.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n\n    return {\n      allowGzip: true,\n      url: \"https:/\" + \"/\" + host + apiKey,\n      throttleCallback: (attempt, url) => {\n        if (apiKey === defaultApiKey) {\n          showThrottleMessage();\n        }\n\n        return Promise.resolve(true);\n      }\n    };\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n\n}\n\n\"use strict\";\n\nvar __awaiter$c = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$y = new Logger(version$m);\n\nclass CloudflareProvider extends UrlJsonRpcProvider {\n  static getApiKey(apiKey) {\n    if (apiKey != null) {\n      logger$y.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n    }\n\n    return null;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network.name) {\n      case \"homestead\":\n        host = \"https://cloudflare-eth.com/\";\n        break;\n\n      default:\n        logger$y.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n\n    return host;\n  }\n\n  perform(method, params) {\n    const _super = Object.create(null, {\n      perform: {\n        get: () => super.perform\n      }\n    });\n\n    return __awaiter$c(this, void 0, void 0, function* () {\n      if (method === \"getBlockNumber\") {\n        const block = yield _super.perform.call(this, \"getBlock\", {\n          blockTag: \"latest\"\n        });\n        return block.number;\n      }\n\n      return _super.perform.call(this, method, params);\n    });\n  }\n\n}\n\n\"use strict\";\n\nvar __awaiter$d = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$z = new Logger(version$m);\n\nfunction getTransactionPostData(transaction) {\n  const result = {};\n\n  for (let key in transaction) {\n    if (transaction[key] == null) {\n      continue;\n    }\n\n    let value = transaction[key];\n\n    if ({\n      type: true,\n      gasLimit: true,\n      gasPrice: true,\n      nonce: true,\n      value: true\n    }[key]) {\n      value = hexValue(hexlify(value));\n    } else if (key === \"accessList\") {\n      const sets = accessListify(value);\n      value = \"[\" + sets.map(set => {\n        return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n      }).join(\",\") + \"]\";\n    } else {\n      value = hexlify(value);\n    }\n\n    result[key] = value;\n  }\n\n  return result;\n}\n\nfunction getResult$1(result) {\n  if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n    return result.result;\n  }\n\n  if (result.status != 1 || result.message != \"OK\") {\n    const error = new Error(\"invalid response\");\n    error.result = JSON.stringify(result);\n\n    if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n      error.throttleRetry = true;\n    }\n\n    throw error;\n  }\n\n  return result.result;\n}\n\nfunction getJsonResult(result) {\n  if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n    const error = new Error(\"throttled response\");\n    error.result = JSON.stringify(result);\n    error.throttleRetry = true;\n    throw error;\n  }\n\n  if (result.jsonrpc != \"2.0\") {\n    const error = new Error(\"invalid response\");\n    error.result = JSON.stringify(result);\n    throw error;\n  }\n\n  if (result.error) {\n    const error = new Error(result.error.message || \"unknown error\");\n\n    if (result.error.code) {\n      error.code = result.error.code;\n    }\n\n    if (result.error.data) {\n      error.data = result.error.data;\n    }\n\n    throw error;\n  }\n\n  return result.result;\n}\n\nfunction checkLogTag(blockTag) {\n  if (blockTag === \"pending\") {\n    throw new Error(\"pending not supported\");\n  }\n\n  if (blockTag === \"latest\") {\n    return blockTag;\n  }\n\n  return parseInt(blockTag.substring(2), 16);\n}\n\nconst defaultApiKey$1 = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\n\nfunction checkError$1(method, error, transaction) {\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    const e = error.error;\n\n    if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n      return e.data;\n    }\n  }\n\n  let message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR) {\n    if (error.error && typeof error.error.message === \"string\") {\n      message = error.error.message;\n    } else if (typeof error.body === \"string\") {\n      message = error.body;\n    } else if (typeof error.responseText === \"string\") {\n      message = error.responseText;\n    }\n  }\n\n  message = (message || \"\").toLowerCase();\n\n  if (message.match(/insufficient funds/)) {\n    logger$z.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (message.match(/same hash was already imported|transaction nonce is too low/)) {\n    logger$z.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (message.match(/another transaction with same nonce/)) {\n    logger$z.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  if (message.match(/execution failed due to an exception/)) {\n    logger$z.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error: error,\n      method: method,\n      transaction: transaction\n    });\n  }\n\n  throw error;\n}\n\nclass EtherscanProvider extends BaseProvider {\n  constructor(network, apiKey) {\n    logger$z.checkNew(new.target, EtherscanProvider);\n    super(network);\n    let name = \"invalid\";\n\n    if (this.network) {\n      name = this.network.name;\n    }\n\n    let baseUrl = null;\n\n    switch (name) {\n      case \"homestead\":\n        baseUrl = \"https://api.etherscan.io\";\n        break;\n\n      case \"ropsten\":\n        baseUrl = \"https://api-ropsten.etherscan.io\";\n        break;\n\n      case \"rinkeby\":\n        baseUrl = \"https://api-rinkeby.etherscan.io\";\n        break;\n\n      case \"kovan\":\n        baseUrl = \"https://api-kovan.etherscan.io\";\n        break;\n\n      case \"goerli\":\n        baseUrl = \"https://api-goerli.etherscan.io\";\n        break;\n\n      default:\n        throw new Error(\"unsupported network\");\n    }\n\n    defineReadOnly(this, \"baseUrl\", baseUrl);\n    defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey$1);\n  }\n\n  detectNetwork() {\n    return __awaiter$d(this, void 0, void 0, function* () {\n      return this.network;\n    });\n  }\n\n  perform(method, params) {\n    const _super = Object.create(null, {\n      perform: {\n        get: () => super.perform\n      }\n    });\n\n    return __awaiter$d(this, void 0, void 0, function* () {\n      let url = this.baseUrl + \"/api\";\n      let apiKey = \"\";\n\n      if (this.apiKey) {\n        apiKey += \"&apikey=\" + this.apiKey;\n      }\n\n      const get = (url, payload, procFunc) => __awaiter$d(this, void 0, void 0, function* () {\n        this.emit(\"debug\", {\n          action: \"request\",\n          request: url,\n          provider: this\n        });\n        const connection = {\n          url: url,\n          throttleSlotInterval: 1e3,\n          throttleCallback: (attempt, url) => {\n            if (this.isCommunityResource()) {\n              showThrottleMessage();\n            }\n\n            return Promise.resolve(true);\n          }\n        };\n        let payloadStr = null;\n\n        if (payload) {\n          connection.headers = {\n            \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n          };\n          payloadStr = Object.keys(payload).map(key => {\n            return `${key}=${payload[key]}`;\n          }).join(\"&\");\n        }\n\n        const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n        this.emit(\"debug\", {\n          action: \"response\",\n          request: url,\n          response: deepCopy(result),\n          provider: this\n        });\n        return result;\n      });\n\n      switch (method) {\n        case \"getBlockNumber\":\n          url += \"?module=proxy&action=eth_blockNumber\" + apiKey;\n          return get(url, null);\n\n        case \"getGasPrice\":\n          url += \"?module=proxy&action=eth_gasPrice\" + apiKey;\n          return get(url, null);\n\n        case \"getBalance\":\n          url += \"?module=account&action=balance&address=\" + params.address;\n          url += \"&tag=\" + params.blockTag + apiKey;\n          return get(url, null, getResult$1);\n\n        case \"getTransactionCount\":\n          url += \"?module=proxy&action=eth_getTransactionCount&address=\" + params.address;\n          url += \"&tag=\" + params.blockTag + apiKey;\n          return get(url, null);\n\n        case \"getCode\":\n          url += \"?module=proxy&action=eth_getCode&address=\" + params.address;\n          url += \"&tag=\" + params.blockTag + apiKey;\n          return get(url, null);\n\n        case \"getStorageAt\":\n          url += \"?module=proxy&action=eth_getStorageAt&address=\" + params.address;\n          url += \"&position=\" + params.position;\n          url += \"&tag=\" + params.blockTag + apiKey;\n          return get(url, null);\n\n        case \"sendTransaction\":\n          return get(url, {\n            module: \"proxy\",\n            action: \"eth_sendRawTransaction\",\n            hex: params.signedTransaction,\n            apikey: this.apiKey\n          }).catch(error => {\n            return checkError$1(\"sendTransaction\", error, params.signedTransaction);\n          });\n\n        case \"getBlock\":\n          if (params.blockTag) {\n            url += \"?module=proxy&action=eth_getBlockByNumber&tag=\" + params.blockTag;\n\n            if (params.includeTransactions) {\n              url += \"&boolean=true\";\n            } else {\n              url += \"&boolean=false\";\n            }\n\n            url += apiKey;\n            return get(url, null);\n          }\n\n          throw new Error(\"getBlock by blockHash not implemented\");\n\n        case \"getTransaction\":\n          url += \"?module=proxy&action=eth_getTransactionByHash&txhash=\" + params.transactionHash;\n          url += apiKey;\n          return get(url, null);\n\n        case \"getTransactionReceipt\":\n          url += \"?module=proxy&action=eth_getTransactionReceipt&txhash=\" + params.transactionHash;\n          url += apiKey;\n          return get(url, null);\n\n        case \"call\":\n          {\n            if (params.blockTag !== \"latest\") {\n              throw new Error(\"EtherscanProvider does not support blockTag for call\");\n            }\n\n            const postData = getTransactionPostData(params.transaction);\n            postData.module = \"proxy\";\n            postData.action = \"eth_call\";\n            postData.apikey = this.apiKey;\n\n            try {\n              return yield get(url, postData);\n            } catch (error) {\n              return checkError$1(\"call\", error, params.transaction);\n            }\n          }\n\n        case \"estimateGas\":\n          {\n            const postData = getTransactionPostData(params.transaction);\n            postData.module = \"proxy\";\n            postData.action = \"eth_estimateGas\";\n            postData.apikey = this.apiKey;\n\n            try {\n              return yield get(url, postData);\n            } catch (error) {\n              return checkError$1(\"estimateGas\", error, params.transaction);\n            }\n          }\n\n        case \"getLogs\":\n          {\n            url += \"?module=logs&action=getLogs\";\n\n            if (params.filter.fromBlock) {\n              url += \"&fromBlock=\" + checkLogTag(params.filter.fromBlock);\n            }\n\n            if (params.filter.toBlock) {\n              url += \"&toBlock=\" + checkLogTag(params.filter.toBlock);\n            }\n\n            if (params.filter.address) {\n              url += \"&address=\" + params.filter.address;\n            }\n\n            if (params.filter.topics && params.filter.topics.length > 0) {\n              if (params.filter.topics.length > 1) {\n                logger$z.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, {\n                  topics: params.filter.topics\n                });\n              }\n\n              if (params.filter.topics.length === 1) {\n                const topic0 = params.filter.topics[0];\n\n                if (typeof topic0 !== \"string\" || topic0.length !== 66) {\n                  logger$z.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    topic0: topic0\n                  });\n                }\n\n                url += \"&topic0=\" + topic0;\n              }\n            }\n\n            url += apiKey;\n            const logs = yield get(url, null, getResult$1);\n            let blocks = {};\n\n            for (let i = 0; i < logs.length; i++) {\n              const log = logs[i];\n\n              if (log.blockHash != null) {\n                continue;\n              }\n\n              if (blocks[log.blockNumber] == null) {\n                const block = yield this.getBlock(log.blockNumber);\n\n                if (block) {\n                  blocks[log.blockNumber] = block.hash;\n                }\n              }\n\n              log.blockHash = blocks[log.blockNumber];\n            }\n\n            return logs;\n          }\n\n        case \"getEtherPrice\":\n          if (this.network.name !== \"homestead\") {\n            return 0;\n          }\n\n          url += \"?module=stats&action=ethprice\";\n          url += apiKey;\n          return parseFloat((yield get(url, null, getResult$1)).ethusd);\n\n        default:\n          break;\n      }\n\n      return _super.perform.call(this, method, params);\n    });\n  }\n\n  getHistory(addressOrName, startBlock, endBlock) {\n    let url = this.baseUrl;\n    let apiKey = \"\";\n\n    if (this.apiKey) {\n      apiKey += \"&apikey=\" + this.apiKey;\n    }\n\n    if (startBlock == null) {\n      startBlock = 0;\n    }\n\n    if (endBlock == null) {\n      endBlock = 99999999;\n    }\n\n    return this.resolveName(addressOrName).then(address => {\n      url += \"/api?module=account&action=txlist&address=\" + address;\n      url += \"&startblock=\" + startBlock;\n      url += \"&endblock=\" + endBlock;\n      url += \"&sort=asc\" + apiKey;\n      this.emit(\"debug\", {\n        action: \"request\",\n        request: url,\n        provider: this\n      });\n      const connection = {\n        url: url,\n        throttleSlotInterval: 1e3,\n        throttleCallback: (attempt, url) => {\n          if (this.apiKey === defaultApiKey$1) {\n            showThrottleMessage();\n          }\n\n          return Promise.resolve(true);\n        }\n      };\n      return fetchJson(connection, null, getResult$1).then(result => {\n        this.emit(\"debug\", {\n          action: \"response\",\n          request: url,\n          response: deepCopy(result),\n          provider: this\n        });\n        let output = [];\n        result.forEach(tx => {\n          [\"contractAddress\", \"to\"].forEach(function (key) {\n            if (tx[key] == \"\") {\n              delete tx[key];\n            }\n          });\n\n          if (tx.creates == null && tx.contractAddress != null) {\n            tx.creates = tx.contractAddress;\n          }\n\n          let item = this.formatter.transactionResponse(tx);\n\n          if (tx.timeStamp) {\n            item.timestamp = parseInt(tx.timeStamp);\n          }\n\n          output.push(item);\n        });\n        return output;\n      });\n    });\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey$1;\n  }\n\n}\n\n\"use strict\";\n\nvar __awaiter$e = window && window.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$A = new Logger(version$m);\n\nfunction now() {\n  return new Date().getTime();\n}\n\nfunction checkNetworks(networks) {\n  let result = null;\n\n  for (let i = 0; i < networks.length; i++) {\n    const network = networks[i];\n\n    if (network == null) {\n      return null;\n    }\n\n    if (result) {\n      if (!(result.name === network.name && result.chainId === network.chainId && (result.ensAddress === network.ensAddress || result.ensAddress == null && network.ensAddress == null))) {\n        logger$A.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n      }\n    } else {\n      result = network;\n    }\n  }\n\n  return result;\n}\n\nfunction median(values, maxDelta) {\n  values = values.slice().sort();\n  const middle = Math.floor(values.length / 2);\n\n  if (values.length % 2) {\n    return values[middle];\n  }\n\n  const a = values[middle - 1],\n        b = values[middle];\n\n  if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n    return null;\n  }\n\n  return (a + b) / 2;\n}\n\nfunction serialize$1(value) {\n  if (value === null) {\n    return \"null\";\n  } else if (typeof value === \"number\" || typeof value === \"boolean\") {\n    return JSON.stringify(value);\n  } else if (typeof value === \"string\") {\n    return value;\n  } else if (BigNumber.isBigNumber(value)) {\n    return value.toString();\n  } else if (Array.isArray(value)) {\n    return JSON.stringify(value.map(i => serialize$1(i)));\n  } else if (typeof value === \"object\") {\n    const keys = Object.keys(value);\n    keys.sort();\n    return \"{\" + keys.map(key => {\n      let v = value[key];\n\n      if (typeof v === \"function\") {\n        v = \"[function]\";\n      } else {\n        v = serialize$1(v);\n      }\n\n      return JSON.stringify(key) + \":\" + v;\n    }).join(\",\") + \"}\";\n  }\n\n  throw new Error(\"unknown value type: \" + typeof value);\n}\n\nlet nextRid = 1;\n\nfunction stall$1(duration) {\n  let cancel = null;\n  let timer = null;\n  let promise = new Promise(resolve => {\n    cancel = function () {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      resolve();\n    };\n\n    timer = setTimeout(cancel, duration);\n  });\n\n  const wait = func => {\n    promise = promise.then(func);\n    return promise;\n  };\n\n  function getPromise() {\n    return promise;\n  }\n\n  return {\n    cancel: cancel,\n    getPromise: getPromise,\n    wait: wait\n  };\n}\n\nconst ForwardErrors = [Logger.errors.CALL_EXCEPTION, Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED, Logger.errors.UNPREDICTABLE_GAS_LIMIT];\nconst ForwardProperties = [\"address\", \"args\", \"errorArgs\", \"errorSignature\", \"method\", \"transaction\"];\n\nfunction exposeDebugConfig(config, now) {\n  const result = {\n    weight: config.weight\n  };\n  Object.defineProperty(result, \"provider\", {\n    get: () => config.provider\n  });\n\n  if (config.start) {\n    result.start = config.start;\n  }\n\n  if (now) {\n    result.duration = now - config.start;\n  }\n\n  if (config.done) {\n    if (config.error) {\n      result.error = config.error;\n    } else {\n      result.result = config.result || null;\n    }\n  }\n\n  return result;\n}\n\nfunction normalizedTally(normalize, quorum) {\n  return function (configs) {\n    const tally = {};\n    configs.forEach(c => {\n      const value = normalize(c.result);\n\n      if (!tally[value]) {\n        tally[value] = {\n          count: 0,\n          result: c.result\n        };\n      }\n\n      tally[value].count++;\n    });\n    const keys = Object.keys(tally);\n\n    for (let i = 0; i < keys.length; i++) {\n      const check = tally[keys[i]];\n\n      if (check.count >= quorum) {\n        return check.result;\n      }\n    }\n\n    return undefined;\n  };\n}\n\nfunction getProcessFunc(provider, method, params) {\n  let normalize = serialize$1;\n\n  switch (method) {\n    case \"getBlockNumber\":\n      return function (configs) {\n        const values = configs.map(c => c.result);\n        let blockNumber = median(configs.map(c => c.result), 2);\n\n        if (blockNumber == null) {\n          return undefined;\n        }\n\n        blockNumber = Math.ceil(blockNumber);\n\n        if (values.indexOf(blockNumber + 1) >= 0) {\n          blockNumber++;\n        }\n\n        if (blockNumber >= provider._highestBlockNumber) {\n          provider._highestBlockNumber = blockNumber;\n        }\n\n        return provider._highestBlockNumber;\n      };\n\n    case \"getGasPrice\":\n      return function (configs) {\n        const values = configs.map(c => c.result);\n        values.sort();\n        return values[Math.floor(values.length / 2)];\n      };\n\n    case \"getEtherPrice\":\n      return function (configs) {\n        return median(configs.map(c => c.result));\n      };\n\n    case \"getBalance\":\n    case \"getTransactionCount\":\n    case \"getCode\":\n    case \"getStorageAt\":\n    case \"call\":\n    case \"estimateGas\":\n    case \"getLogs\":\n      break;\n\n    case \"getTransaction\":\n    case \"getTransactionReceipt\":\n      normalize = function (tx) {\n        if (tx == null) {\n          return null;\n        }\n\n        tx = shallowCopy(tx);\n        tx.confirmations = -1;\n        return serialize$1(tx);\n      };\n\n      break;\n\n    case \"getBlock\":\n      if (params.includeTransactions) {\n        normalize = function (block) {\n          if (block == null) {\n            return null;\n          }\n\n          block = shallowCopy(block);\n          block.transactions = block.transactions.map(tx => {\n            tx = shallowCopy(tx);\n            tx.confirmations = -1;\n            return tx;\n          });\n          return serialize$1(block);\n        };\n      } else {\n        normalize = function (block) {\n          if (block == null) {\n            return null;\n          }\n\n          return serialize$1(block);\n        };\n      }\n\n      break;\n\n    default:\n      throw new Error(\"unknown method: \" + method);\n  }\n\n  return normalizedTally(normalize, provider.quorum);\n}\n\nfunction waitForSync(config, blockNumber) {\n  return __awaiter$e(this, void 0, void 0, function* () {\n    const provider = config.provider;\n\n    if (provider.blockNumber != null && provider.blockNumber >= blockNumber || blockNumber === -1) {\n      return provider;\n    }\n\n    return poll(() => {\n      return new Promise((resolve, reject) => {\n        setTimeout(function () {\n          if (provider.blockNumber >= blockNumber) {\n            return resolve(provider);\n          }\n\n          if (config.cancelled) {\n            return resolve(null);\n          }\n\n          return resolve(undefined);\n        }, 0);\n      });\n    }, {\n      oncePoll: provider\n    });\n  });\n}\n\nfunction getRunner(config, currentBlockNumber, method, params) {\n  return __awaiter$e(this, void 0, void 0, function* () {\n    let provider = config.provider;\n\n    switch (method) {\n      case \"getBlockNumber\":\n      case \"getGasPrice\":\n        return provider[method]();\n\n      case \"getEtherPrice\":\n        if (provider.getEtherPrice) {\n          return provider.getEtherPrice();\n        }\n\n        break;\n\n      case \"getBalance\":\n      case \"getTransactionCount\":\n      case \"getCode\":\n        if (params.blockTag && isHexString(params.blockTag)) {\n          provider = yield waitForSync(config, currentBlockNumber);\n        }\n\n        return provider[method](params.address, params.blockTag || \"latest\");\n\n      case \"getStorageAt\":\n        if (params.blockTag && isHexString(params.blockTag)) {\n          provider = yield waitForSync(config, currentBlockNumber);\n        }\n\n        return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n\n      case \"getBlock\":\n        if (params.blockTag && isHexString(params.blockTag)) {\n          provider = yield waitForSync(config, currentBlockNumber);\n        }\n\n        return provider[params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\"](params.blockTag || params.blockHash);\n\n      case \"call\":\n      case \"estimateGas\":\n        if (params.blockTag && isHexString(params.blockTag)) {\n          provider = yield waitForSync(config, currentBlockNumber);\n        }\n\n        return provider[method](params.transaction);\n\n      case \"getTransaction\":\n      case \"getTransactionReceipt\":\n        return provider[method](params.transactionHash);\n\n      case \"getLogs\":\n        {\n          let filter = params.filter;\n\n          if (filter.fromBlock && isHexString(filter.fromBlock) || filter.toBlock && isHexString(filter.toBlock)) {\n            provider = yield waitForSync(config, currentBlockNumber);\n          }\n\n          return provider.getLogs(filter);\n        }\n    }\n\n    return logger$A.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n      method: method,\n      params: params\n    });\n  });\n}\n\nclass FallbackProvider extends BaseProvider {\n  constructor(providers, quorum) {\n    logger$A.checkNew(new.target, FallbackProvider);\n\n    if (providers.length === 0) {\n      logger$A.throwArgumentError(\"missing providers\", \"providers\", providers);\n    }\n\n    const providerConfigs = providers.map((configOrProvider, index) => {\n      if (Provider.isProvider(configOrProvider)) {\n        const stallTimeout = isCommunityResource(configOrProvider) ? 2e3 : 750;\n        const priority = 1;\n        return Object.freeze({\n          provider: configOrProvider,\n          weight: 1,\n          stallTimeout: stallTimeout,\n          priority: priority\n        });\n      }\n\n      const config = shallowCopy(configOrProvider);\n\n      if (config.priority == null) {\n        config.priority = 1;\n      }\n\n      if (config.stallTimeout == null) {\n        config.stallTimeout = isCommunityResource(configOrProvider) ? 2e3 : 750;\n      }\n\n      if (config.weight == null) {\n        config.weight = 1;\n      }\n\n      const weight = config.weight;\n\n      if (weight % 1 || weight > 512 || weight < 1) {\n        logger$A.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n      }\n\n      return Object.freeze(config);\n    });\n    const total = providerConfigs.reduce((accum, c) => accum + c.weight, 0);\n\n    if (quorum == null) {\n      quorum = total / 2;\n    } else if (quorum > total) {\n      logger$A.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n    }\n\n    let networkOrReady = checkNetworks(providerConfigs.map(c => c.provider.network));\n\n    if (networkOrReady == null) {\n      networkOrReady = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          this.detectNetwork().then(resolve, reject);\n        }, 0);\n      });\n    }\n\n    super(networkOrReady);\n    defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n    defineReadOnly(this, \"quorum\", quorum);\n    this._highestBlockNumber = -1;\n  }\n\n  detectNetwork() {\n    return __awaiter$e(this, void 0, void 0, function* () {\n      const networks = yield Promise.all(this.providerConfigs.map(c => c.provider.getNetwork()));\n      return checkNetworks(networks);\n    });\n  }\n\n  perform(method, params) {\n    return __awaiter$e(this, void 0, void 0, function* () {\n      if (method === \"sendTransaction\") {\n        const results = yield Promise.all(this.providerConfigs.map(c => {\n          return c.provider.sendTransaction(params.signedTransaction).then(result => {\n            return result.hash;\n          }, error => {\n            return error;\n          });\n        }));\n\n        for (let i = 0; i < results.length; i++) {\n          const result = results[i];\n\n          if (typeof result === \"string\") {\n            return result;\n          }\n        }\n\n        throw results[0];\n      }\n\n      if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n        yield this.getBlockNumber();\n      }\n\n      const processFunc = getProcessFunc(this, method, params);\n      const configs = shuffled(this.providerConfigs.map(shallowCopy));\n      configs.sort((a, b) => a.priority - b.priority);\n      const currentBlockNumber = this._highestBlockNumber;\n      let i = 0;\n      let first = true;\n\n      while (true) {\n        const t0 = now();\n        let inflightWeight = configs.filter(c => c.runner && t0 - c.start < c.stallTimeout).reduce((accum, c) => accum + c.weight, 0);\n\n        while (inflightWeight < this.quorum && i < configs.length) {\n          const config = configs[i++];\n          const rid = nextRid++;\n          config.start = now();\n          config.staller = stall$1(config.stallTimeout);\n          config.staller.wait(() => {\n            config.staller = null;\n          });\n          config.runner = getRunner(config, currentBlockNumber, method, params).then(result => {\n            config.done = true;\n            config.result = result;\n\n            if (this.listenerCount(\"debug\")) {\n              this.emit(\"debug\", {\n                action: \"request\",\n                rid: rid,\n                backend: exposeDebugConfig(config, now()),\n                request: {\n                  method: method,\n                  params: deepCopy(params)\n                },\n                provider: this\n              });\n            }\n          }, error => {\n            config.done = true;\n            config.error = error;\n\n            if (this.listenerCount(\"debug\")) {\n              this.emit(\"debug\", {\n                action: \"request\",\n                rid: rid,\n                backend: exposeDebugConfig(config, now()),\n                request: {\n                  method: method,\n                  params: deepCopy(params)\n                },\n                provider: this\n              });\n            }\n          });\n\n          if (this.listenerCount(\"debug\")) {\n            this.emit(\"debug\", {\n              action: \"request\",\n              rid: rid,\n              backend: exposeDebugConfig(config, null),\n              request: {\n                method: method,\n                params: deepCopy(params)\n              },\n              provider: this\n            });\n          }\n\n          inflightWeight += config.weight;\n        }\n\n        const waiting = [];\n        configs.forEach(c => {\n          if (c.done || !c.runner) {\n            return;\n          }\n\n          waiting.push(c.runner);\n\n          if (c.staller) {\n            waiting.push(c.staller.getPromise());\n          }\n        });\n\n        if (waiting.length) {\n          yield Promise.race(waiting);\n        }\n\n        const results = configs.filter(c => c.done && c.error == null);\n\n        if (results.length >= this.quorum) {\n          const result = processFunc(results);\n\n          if (result !== undefined) {\n            configs.forEach(c => {\n              if (c.staller) {\n                c.staller.cancel();\n              }\n\n              c.cancelled = true;\n            });\n            return result;\n          }\n\n          if (!first) {\n            yield stall$1(100).getPromise();\n          }\n\n          first = false;\n        }\n\n        const errors = configs.reduce((accum, c) => {\n          if (!c.done || c.error == null) {\n            return accum;\n          }\n\n          const code = c.error.code;\n\n          if (ForwardErrors.indexOf(code) >= 0) {\n            if (!accum[code]) {\n              accum[code] = {\n                error: c.error,\n                weight: 0\n              };\n            }\n\n            accum[code].weight += c.weight;\n          }\n\n          return accum;\n        }, {});\n        Object.keys(errors).forEach(errorCode => {\n          const tally = errors[errorCode];\n\n          if (tally.weight < this.quorum) {\n            return;\n          }\n\n          configs.forEach(c => {\n            if (c.staller) {\n              c.staller.cancel();\n            }\n\n            c.cancelled = true;\n          });\n          const e = tally.error;\n          const props = {};\n          ForwardProperties.forEach(name => {\n            if (e[name] == null) {\n              return;\n            }\n\n            props[name] = e[name];\n          });\n          logger$A.throwError(e.reason || e.message, errorCode, props);\n        });\n\n        if (configs.filter(c => !c.done).length === 0) {\n          break;\n        }\n      }\n\n      configs.forEach(c => {\n        if (c.staller) {\n          c.staller.cancel();\n        }\n\n        c.cancelled = true;\n      });\n      return logger$A.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n        method: method,\n        params: params,\n        results: configs.map(c => exposeDebugConfig(c)),\n        provider: this\n      });\n    });\n  }\n\n}\n\n\"use strict\";\n\nconst IpcProvider = null;\n\"use strict\";\n\nconst logger$B = new Logger(version$m);\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\n\nclass InfuraWebSocketProvider extends WebSocketProvider {\n  constructor(network, apiKey) {\n    const provider = new InfuraProvider(network, apiKey);\n    const connection = provider.connection;\n\n    if (connection.password) {\n      logger$B.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"InfuraProvider.getWebSocketProvider()\"\n      });\n    }\n\n    const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n    super(url, network);\n    defineReadOnly(this, \"apiKey\", provider.projectId);\n    defineReadOnly(this, \"projectId\", provider.projectId);\n    defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n  }\n\n  isCommunityResource() {\n    return this.projectId === defaultProjectId;\n  }\n\n}\n\nclass InfuraProvider extends UrlJsonRpcProvider {\n  static getWebSocketProvider(network, apiKey) {\n    return new InfuraWebSocketProvider(network, apiKey);\n  }\n\n  static getApiKey(apiKey) {\n    const apiKeyObj = {\n      apiKey: defaultProjectId,\n      projectId: defaultProjectId,\n      projectSecret: null\n    };\n\n    if (apiKey == null) {\n      return apiKeyObj;\n    }\n\n    if (typeof apiKey === \"string\") {\n      apiKeyObj.projectId = apiKey;\n    } else if (apiKey.projectSecret != null) {\n      logger$B.assertArgument(typeof apiKey.projectId === \"string\", \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n      logger$B.assertArgument(typeof apiKey.projectSecret === \"string\", \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n      apiKeyObj.projectId = apiKey.projectId;\n      apiKeyObj.projectSecret = apiKey.projectSecret;\n    } else if (apiKey.projectId) {\n      apiKeyObj.projectId = apiKey.projectId;\n    }\n\n    apiKeyObj.apiKey = apiKeyObj.projectId;\n    return apiKeyObj;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network ? network.name : \"unknown\") {\n      case \"homestead\":\n        host = \"mainnet.infura.io\";\n        break;\n\n      case \"ropsten\":\n        host = \"ropsten.infura.io\";\n        break;\n\n      case \"rinkeby\":\n        host = \"rinkeby.infura.io\";\n        break;\n\n      case \"kovan\":\n        host = \"kovan.infura.io\";\n        break;\n\n      case \"goerli\":\n        host = \"goerli.infura.io\";\n        break;\n\n      default:\n        logger$B.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"network\",\n          value: network\n        });\n    }\n\n    const connection = {\n      allowGzip: true,\n      url: \"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId,\n      throttleCallback: (attempt, url) => {\n        if (apiKey.projectId === defaultProjectId) {\n          showThrottleMessage();\n        }\n\n        return Promise.resolve(true);\n      }\n    };\n\n    if (apiKey.projectSecret != null) {\n      connection.user = \"\";\n      connection.password = apiKey.projectSecret;\n    }\n\n    return connection;\n  }\n\n  isCommunityResource() {\n    return this.projectId === defaultProjectId;\n  }\n\n}\n\nclass JsonRpcBatchProvider extends JsonRpcProvider {\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n\n    if (this._pendingBatch == null) {\n      this._pendingBatch = [];\n    }\n\n    const inflightRequest = {\n      request: request,\n      resolve: null,\n      reject: null\n    };\n    const promise = new Promise((resolve, reject) => {\n      inflightRequest.resolve = resolve;\n      inflightRequest.reject = reject;\n    });\n\n    this._pendingBatch.push(inflightRequest);\n\n    if (!this._pendingBatchAggregator) {\n      this._pendingBatchAggregator = setTimeout(() => {\n        const batch = this._pendingBatch;\n        this._pendingBatch = null;\n        this._pendingBatchAggregator = null;\n        const request = batch.map(inflight => inflight.request);\n        this.emit(\"debug\", {\n          action: \"requestBatch\",\n          request: deepCopy(request),\n          provider: this\n        });\n        return fetchJson(this.connection, JSON.stringify(request)).then(result => {\n          this.emit(\"debug\", {\n            action: \"response\",\n            request: request,\n            response: result,\n            provider: this\n          });\n          batch.forEach((inflightRequest, index) => {\n            const payload = result[index];\n\n            if (payload.error) {\n              const error = new Error(payload.error.message);\n              error.code = payload.error.code;\n              error.data = payload.error.data;\n              inflightRequest.reject(error);\n            } else {\n              inflightRequest.resolve(payload.result);\n            }\n          });\n        }, error => {\n          this.emit(\"debug\", {\n            action: \"response\",\n            error: error,\n            request: request,\n            provider: this\n          });\n          batch.forEach(inflightRequest => {\n            inflightRequest.reject(error);\n          });\n        });\n      }, 10);\n    }\n\n    return promise;\n  }\n\n}\n\n\"use strict\";\n\nconst logger$C = new Logger(version$m);\nconst defaultApiKey$2 = \"ETHERS_JS_SHARED\";\n\nclass NodesmithProvider extends UrlJsonRpcProvider {\n  static getApiKey(apiKey) {\n    if (apiKey && typeof apiKey !== \"string\") {\n      logger$C.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKey || defaultApiKey$2;\n  }\n\n  static getUrl(network, apiKey) {\n    logger$C.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n    let host = null;\n\n    switch (network.name) {\n      case \"homestead\":\n        host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n        break;\n\n      case \"ropsten\":\n        host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n        break;\n\n      case \"rinkeby\":\n        host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n        break;\n\n      case \"goerli\":\n        host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n        break;\n\n      case \"kovan\":\n        host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n        break;\n\n      default:\n        logger$C.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n\n    return host + \"?apiKey=\" + apiKey;\n  }\n\n}\n\n\"use strict\";\n\nconst logger$D = new Logger(version$m);\nconst defaultApplicationIds = {\n  homestead: \"6004bcd10040261633ade990\",\n  ropsten: \"6004bd4d0040261633ade991\",\n  rinkeby: \"6004bda20040261633ade994\",\n  goerli: \"6004bd860040261633ade992\"\n};\n\nclass PocketProvider extends UrlJsonRpcProvider {\n  constructor(network, apiKey) {\n    if (apiKey == null) {\n      const n = getStatic(new.target, \"getNetwork\")(network);\n\n      if (n) {\n        const applicationId = defaultApplicationIds[n.name];\n\n        if (applicationId) {\n          apiKey = {\n            applicationId: applicationId,\n            loadBalancer: true\n          };\n        }\n      }\n\n      if (apiKey == null) {\n        logger$D.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"network\",\n          value: network\n        });\n      }\n    }\n\n    super(network, apiKey);\n  }\n\n  static getApiKey(apiKey) {\n    if (apiKey == null) {\n      logger$D.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n    }\n\n    const apiKeyObj = {\n      applicationId: null,\n      loadBalancer: false,\n      applicationSecretKey: null\n    };\n\n    if (typeof apiKey === \"string\") {\n      apiKeyObj.applicationId = apiKey;\n    } else if (apiKey.applicationSecretKey != null) {\n      logger$D.assertArgument(typeof apiKey.applicationId === \"string\", \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n      logger$D.assertArgument(typeof apiKey.applicationSecretKey === \"string\", \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n      apiKeyObj.applicationId = apiKey.applicationId;\n      apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n      apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n    } else if (apiKey.applicationId) {\n      logger$D.assertArgument(typeof apiKey.applicationId === \"string\", \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n      apiKeyObj.applicationId = apiKey.applicationId;\n      apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n    } else {\n      logger$D.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKeyObj;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network ? network.name : \"unknown\") {\n      case \"homestead\":\n        host = \"eth-mainnet.gateway.pokt.network\";\n        break;\n\n      case \"ropsten\":\n        host = \"eth-ropsten.gateway.pokt.network\";\n        break;\n\n      case \"rinkeby\":\n        host = \"eth-rinkeby.gateway.pokt.network\";\n        break;\n\n      case \"goerli\":\n        host = \"eth-goerli.gateway.pokt.network\";\n        break;\n\n      default:\n        logger$D.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"network\",\n          value: network\n        });\n    }\n\n    let url = null;\n\n    if (apiKey.loadBalancer) {\n      url = `https://${host}/v1/lb/${apiKey.applicationId}`;\n    } else {\n      url = `https://${host}/v1/${apiKey.applicationId}`;\n    }\n\n    const connection = {\n      url: url\n    };\n    connection.headers = {};\n\n    if (apiKey.applicationSecretKey != null) {\n      connection.user = \"\";\n      connection.password = apiKey.applicationSecretKey;\n    }\n\n    return connection;\n  }\n\n  isCommunityResource() {\n    return this.applicationId === defaultApplicationIds[this.network.name];\n  }\n\n}\n\n\"use strict\";\n\nconst logger$E = new Logger(version$m);\nlet _nextId = 1;\n\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  return function (method, params) {\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    const request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise((resolve, reject) => {\n      sendFunc(request, function (error, result) {\n        if (error) {\n          return reject(error);\n        }\n\n        if (result.error) {\n          const error = new Error(result.error.message);\n          error.code = result.error.code;\n          error.data = result.error.data;\n          return reject(error);\n        }\n\n        resolve(result.result);\n      });\n    });\n  };\n}\n\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    if (params == null) {\n      params = [];\n    }\n\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    return provider.request({\n      method: method,\n      params: params\n    });\n  };\n}\n\nclass Web3Provider extends JsonRpcProvider {\n  constructor(provider, network) {\n    logger$E.checkNew(new.target, Web3Provider);\n\n    if (provider == null) {\n      logger$E.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n\n    let path = null;\n    let jsonRpcFetchFunc = null;\n    let subprovider = null;\n\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n\n      subprovider = provider;\n\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger$E.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n\n    super(path, network);\n    defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(this, \"provider\", subprovider);\n  }\n\n  send(method, params) {\n    return this.jsonRpcFetchFunc(method, params);\n  }\n\n}\n\n\"use strict\";\n\nconst logger$F = new Logger(version$m);\n\nfunction getDefaultProvider(network, options) {\n  if (network == null) {\n    network = \"homestead\";\n  }\n\n  if (typeof network === \"string\") {\n    const match = network.match(/^(ws|http)s?:/i);\n\n    if (match) {\n      switch (match[1]) {\n        case \"http\":\n          return new JsonRpcProvider(network);\n\n        case \"ws\":\n          return new WebSocketProvider(network);\n\n        default:\n          logger$F.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n      }\n    }\n  }\n\n  const n = getNetwork(network);\n\n  if (!n || !n._defaultProvider) {\n    logger$F.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n      operation: \"getDefaultProvider\",\n      network: network\n    });\n  }\n\n  return n._defaultProvider({\n    FallbackProvider: FallbackProvider,\n    AlchemyProvider: AlchemyProvider,\n    CloudflareProvider: CloudflareProvider,\n    EtherscanProvider: EtherscanProvider,\n    InfuraProvider: InfuraProvider,\n    JsonRpcProvider: JsonRpcProvider,\n    NodesmithProvider: NodesmithProvider,\n    PocketProvider: PocketProvider,\n    Web3Provider: Web3Provider,\n    IpcProvider: IpcProvider\n  }, options);\n}\n\nvar index$3 = Object.freeze({\n  __proto__: null,\n  Provider: Provider,\n  BaseProvider: BaseProvider,\n  Resolver: Resolver,\n  UrlJsonRpcProvider: UrlJsonRpcProvider,\n  FallbackProvider: FallbackProvider,\n  AlchemyProvider: AlchemyProvider,\n  AlchemyWebSocketProvider: AlchemyWebSocketProvider,\n  CloudflareProvider: CloudflareProvider,\n  EtherscanProvider: EtherscanProvider,\n  InfuraProvider: InfuraProvider,\n  InfuraWebSocketProvider: InfuraWebSocketProvider,\n  JsonRpcProvider: JsonRpcProvider,\n  JsonRpcBatchProvider: JsonRpcBatchProvider,\n  NodesmithProvider: NodesmithProvider,\n  PocketProvider: PocketProvider,\n  StaticJsonRpcProvider: StaticJsonRpcProvider,\n  Web3Provider: Web3Provider,\n  WebSocketProvider: WebSocketProvider,\n  IpcProvider: IpcProvider,\n  JsonRpcSigner: JsonRpcSigner,\n  getDefaultProvider: getDefaultProvider,\n  getNetwork: getNetwork,\n  isCommunityResource: isCommunityResource,\n  isCommunityResourcable: isCommunityResourcable,\n  showThrottleMessage: showThrottleMessage,\n  Formatter: Formatter\n});\n\"use strict\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros$1 = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nfunction _pack(type, value, isArray) {\n  switch (type) {\n    case \"address\":\n      if (isArray) {\n        return zeroPad(value, 32);\n      }\n\n      return arrayify(value);\n\n    case \"string\":\n      return toUtf8Bytes(value);\n\n    case \"bytes\":\n      return arrayify(value);\n\n    case \"bool\":\n      value = value ? \"0x01\" : \"0x00\";\n\n      if (isArray) {\n        return zeroPad(value, 32);\n      }\n\n      return arrayify(value);\n  }\n\n  let match = type.match(regexNumber);\n\n  if (match) {\n    let size = parseInt(match[2] || \"256\");\n\n    if (match[2] && String(size) !== match[2] || size % 8 !== 0 || size === 0 || size > 256) {\n      throw new Error(\"invalid number type - \" + type);\n    }\n\n    if (isArray) {\n      size = 256;\n    }\n\n    value = BigNumber.from(value).toTwos(size);\n    return zeroPad(value, size / 8);\n  }\n\n  match = type.match(regexBytes);\n\n  if (match) {\n    const size = parseInt(match[1]);\n\n    if (String(size) !== match[1] || size === 0 || size > 32) {\n      throw new Error(\"invalid bytes type - \" + type);\n    }\n\n    if (arrayify(value).byteLength !== size) {\n      throw new Error(\"invalid value for \" + type);\n    }\n\n    if (isArray) {\n      return arrayify((value + Zeros$1).substring(0, 66));\n    }\n\n    return value;\n  }\n\n  match = type.match(regexArray);\n\n  if (match && Array.isArray(value)) {\n    const baseType = match[1];\n    const count = parseInt(match[2] || String(value.length));\n\n    if (count != value.length) {\n      throw new Error(\"invalid value for \" + type);\n    }\n\n    const result = [];\n    value.forEach(function (value) {\n      result.push(_pack(baseType, value, true));\n    });\n    return concat(result);\n  }\n\n  throw new Error(\"invalid type - \" + type);\n}\n\nfunction pack$1(types, values) {\n  if (types.length != values.length) {\n    throw new Error(\"type/value count mismatch\");\n  }\n\n  const tight = [];\n  types.forEach(function (type, index) {\n    tight.push(_pack(type, values[index]));\n  });\n  return hexlify(concat(tight));\n}\n\nfunction keccak256$1(types, values) {\n  return keccak256(pack$1(types, values));\n}\n\nfunction sha256$2(types, values) {\n  return sha256$1(pack$1(types, values));\n}\n\nconst version$n = \"units/5.1.0\";\n\"use strict\";\n\nconst logger$G = new Logger(version$n);\nconst names = [\"wei\", \"kwei\", \"mwei\", \"gwei\", \"szabo\", \"finney\", \"ether\"];\n\nfunction commify(value) {\n  const comps = String(value).split(\".\");\n\n  if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === \".\" || value === \"-.\") {\n    logger$G.throwArgumentError(\"invalid value\", \"value\", value);\n  }\n\n  let whole = comps[0];\n  let negative = \"\";\n\n  if (whole.substring(0, 1) === \"-\") {\n    negative = \"-\";\n    whole = whole.substring(1);\n  }\n\n  while (whole.substring(0, 1) === \"0\") {\n    whole = whole.substring(1);\n  }\n\n  if (whole === \"\") {\n    whole = \"0\";\n  }\n\n  let suffix = \"\";\n\n  if (comps.length === 2) {\n    suffix = \".\" + (comps[1] || \"0\");\n  }\n\n  while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n    suffix = suffix.substring(0, suffix.length - 1);\n  }\n\n  const formatted = [];\n\n  while (whole.length) {\n    if (whole.length <= 3) {\n      formatted.unshift(whole);\n      break;\n    } else {\n      const index = whole.length - 3;\n      formatted.unshift(whole.substring(index));\n      whole = whole.substring(0, index);\n    }\n  }\n\n  return negative + formatted.join(\",\") + suffix;\n}\n\nfunction formatUnits(value, unitName) {\n  if (typeof unitName === \"string\") {\n    const index = names.indexOf(unitName);\n\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n\n  return formatFixed(value, unitName != null ? unitName : 18);\n}\n\nfunction parseUnits(value, unitName) {\n  if (typeof value !== \"string\") {\n    logger$G.throwArgumentError(\"value must be a string\", \"value\", value);\n  }\n\n  if (typeof unitName === \"string\") {\n    const index = names.indexOf(unitName);\n\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n\n  return parseFixed(value, unitName != null ? unitName : 18);\n}\n\nfunction formatEther(wei) {\n  return formatUnits(wei, 18);\n}\n\nfunction parseEther(ether) {\n  return parseUnits(ether, 18);\n}\n\n\"use strict\";\n\nvar utils$1 = Object.freeze({\n  __proto__: null,\n  AbiCoder: AbiCoder,\n  defaultAbiCoder: defaultAbiCoder,\n  Fragment: Fragment,\n  EventFragment: EventFragment,\n  FunctionFragment: FunctionFragment,\n  ParamType: ParamType,\n  FormatTypes: FormatTypes,\n  checkResultErrors: checkResultErrors,\n  Logger: Logger,\n  RLP: index,\n  _fetchData: _fetchData,\n  fetchJson: fetchJson,\n  poll: poll,\n  checkProperties: checkProperties,\n  deepCopy: deepCopy,\n  defineReadOnly: defineReadOnly,\n  getStatic: getStatic,\n  resolveProperties: resolveProperties,\n  shallowCopy: shallowCopy,\n  arrayify: arrayify,\n  concat: concat,\n  stripZeros: stripZeros,\n  zeroPad: zeroPad,\n  isBytes: isBytes,\n  isBytesLike: isBytesLike,\n  defaultPath: defaultPath,\n  HDNode: HDNode,\n  SigningKey: SigningKey,\n  Interface: Interface,\n  LogDescription: LogDescription,\n  TransactionDescription: TransactionDescription,\n  base58: Base58,\n  base64: index$2,\n  hexlify: hexlify,\n  isHexString: isHexString,\n  hexConcat: hexConcat,\n  hexStripZeros: hexStripZeros,\n  hexValue: hexValue,\n  hexZeroPad: hexZeroPad,\n  hexDataLength: hexDataLength,\n  hexDataSlice: hexDataSlice,\n  nameprep: nameprep,\n  _toEscapedUtf8String: _toEscapedUtf8String,\n  toUtf8Bytes: toUtf8Bytes,\n  toUtf8CodePoints: toUtf8CodePoints,\n  toUtf8String: toUtf8String,\n  Utf8ErrorFuncs: Utf8ErrorFuncs,\n  formatBytes32String: formatBytes32String,\n  parseBytes32String: parseBytes32String,\n  hashMessage: hashMessage,\n  namehash: namehash,\n  isValidName: isValidName,\n  id: id,\n  _TypedDataEncoder: TypedDataEncoder,\n  getAddress: getAddress,\n  getIcapAddress: getIcapAddress,\n  getContractAddress: getContractAddress,\n  getCreate2Address: getCreate2Address,\n  isAddress: isAddress,\n  formatEther: formatEther,\n  parseEther: parseEther,\n  formatUnits: formatUnits,\n  parseUnits: parseUnits,\n  commify: commify,\n  computeHmac: computeHmac,\n  keccak256: keccak256,\n  ripemd160: ripemd160$1,\n  sha256: sha256$1,\n  sha512: sha512$1,\n  randomBytes: randomBytes,\n  shuffled: shuffled,\n  solidityPack: pack$1,\n  solidityKeccak256: keccak256$1,\n  soliditySha256: sha256$2,\n  splitSignature: splitSignature,\n  joinSignature: joinSignature,\n  accessListify: accessListify,\n  parseTransaction: parse,\n  serializeTransaction: serialize,\n  getJsonWalletAddress: getJsonWalletAddress,\n  computeAddress: computeAddress,\n  recoverAddress: recoverAddress,\n  computePublicKey: computePublicKey,\n  recoverPublicKey: recoverPublicKey,\n  verifyMessage: verifyMessage,\n  verifyTypedData: verifyTypedData,\n  mnemonicToEntropy: mnemonicToEntropy,\n  entropyToMnemonic: entropyToMnemonic,\n  isValidMnemonic: isValidMnemonic,\n  mnemonicToSeed: mnemonicToSeed,\n\n  get SupportedAlgorithm() {\n    return SupportedAlgorithm;\n  },\n\n  get UnicodeNormalizationForm() {\n    return UnicodeNormalizationForm;\n  },\n\n  get Utf8ErrorReason() {\n    return Utf8ErrorReason;\n  },\n\n  Indexed: Indexed\n});\nconst version$o = \"ethers/5.1.4\";\n\"use strict\";\n\nconst logger$H = new Logger(version$o);\nvar ethers = Object.freeze({\n  __proto__: null,\n  Signer: Signer,\n  Wallet: Wallet,\n  VoidSigner: VoidSigner,\n  getDefaultProvider: getDefaultProvider,\n  providers: index$3,\n  BaseContract: BaseContract,\n  Contract: Contract,\n  ContractFactory: ContractFactory,\n  BigNumber: BigNumber,\n  FixedNumber: FixedNumber,\n  constants: index$1,\n\n  get errors() {\n    return ErrorCode;\n  },\n\n  logger: logger$H,\n  utils: utils$1,\n  wordlists: wordlists,\n  version: version$o,\n  Wordlist: Wordlist\n});\n\"use strict\";\n\ntry {\n  const anyGlobal = window;\n\n  if (anyGlobal._ethers == null) {\n    anyGlobal._ethers = ethers;\n  }\n} catch (error) {}\n\nexport { BaseContract, BigNumber, Contract, ContractFactory, FixedNumber, Signer, VoidSigner, Wallet, Wordlist, index$1 as constants, ErrorCode as errors, ethers, getDefaultProvider, logger$H as logger, index$3 as providers, utils$1 as utils, version$o as version, wordlists };\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22;\n\n$RefreshReg$(_c, \"Table_B_1_flags$\\\"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\\\".split(\\\",\\\").map\");\n$RefreshReg$(_c2, \"Table_B_1_flags\");\n$RefreshReg$(_c3, \"BlockHash\");\n$RefreshReg$(_c4, \"SHA1\");\n$RefreshReg$(_c5, \"SHA256\");\n$RefreshReg$(_c6, \"SHA224\");\n$RefreshReg$(_c7, \"SHA512\");\n$RefreshReg$(_c8, \"SHA384\");\n$RefreshReg$(_c9, \"RIPEMD160\");\n$RefreshReg$(_c10, \"K\");\n$RefreshReg$(_c11, \"Kh\");\n$RefreshReg$(_c12, \"Hmac\");\n$RefreshReg$(_c13, \"BaseCurve\");\n$RefreshReg$(_c14, \"BasePoint\");\n$RefreshReg$(_c15, \"ShortCurve\");\n$RefreshReg$(_c16, \"Point\");\n$RefreshReg$(_c17, \"JPoint\");\n$RefreshReg$(_c18, \"HmacDRBG\");\n$RefreshReg$(_c19, \"KeyPair\");\n$RefreshReg$(_c20, \"Signature\");\n$RefreshReg$(_c21, \"Position\");\n$RefreshReg$(_c22, \"EC\");","map":{"version":3,"sources":["C:/Users/Juan/Documents/Crypto/LaunchPad/safe-frontend/src/ethers_library.js"],"names":["commonjsGlobal","globalThis","window","global","self","getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","undefined","getDefaultExportFromNamespaceIfPresent","n","getDefaultExportFromNamespaceIfNotNamed","keys","length","getAugmentedNamespace","a","defineProperty","value","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","Error","bn","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","endian","isBN","negative","words","red","_init","wordSize","Buffer","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","toArray","Math","ceil","i","j","w","off","strip","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseLength","parseBase","str","end","mul","len","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","b","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","lo","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","ireduce","rlen","split","imulK","_strip","input","K256","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","version","_permanentCensorErrors","_censorErrors","LogLevels","debug","default","info","warning","error","_logLevel","_globalLogger","_checkNormalize","missing","form","normalize","push","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","Logger","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","key","JSON","stringify","reason","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","from","version$1","logger","isHexable","toHexString","addSlice","array","slice","arguments","Uint8Array","isBytesLike","isHexString","isBytes","v","arrayify","options","result","unshift","parseInt","allowMissingPrefix","substring","hex","hexPad","concat","items","objects","map","item","reduce","accum","offset","object","set","stripZeros","zeroPad","match","HexCharacters","hexlify","floor","hexDataLength","data","hexDataSlice","endOffset","hexConcat","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","signature","_vs","recoveryParam","bytes","vs","joinSignature","version$2","logger$1","_constructorGuard","MAX_SAFE","isBigNumberish","BigNumber","isBigNumber","_warnedToStringRadix","constructorGuard","new","_hex","_isBigNumber","freeze","toBigNumber","toBN","other","throwFault","isNegative","shr","toBigInt","BigInt","type","toHex","anyValue","_base36To16","_base16To36","logger$2","_constructorGuard$1","Zero","NegativeOne","throwFault$1","getMultiplier","decimals","formatFixed","multiplier","fraction","whole","parseFixed","comps","wholeValue","fractionValue","wei","FixedFormat","signed","_multiplier","check","defaultValue","FixedNumber","format","_value","_isFixedNumber","_checkFormat","addUnsafe","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","ONE","ceiling","factor","BUMP","toUnsafeFloat","parseFloat","toFormat","fromString","fixedFormat","numeric","decimal","fromBytes","isFixedNumber","version$3","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","rejected","done","then","logger$3","defineReadOnly","getStatic","getPrototypeOf","resolveProperties","promises","results","all","checkProperties","properties","shallowCopy","opaque","bigint","boolean","function","_isFrozen","isFrozen","_deepCopy","deepCopy","Description","version$4","logger$4","_constructorGuard$2","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","parseParamType","param","allowIndexed","originalParam","newNode","parent","node","state","allowType","indexed","allowParams","verifyType","components","child","allowName","allowArray","sibling","readArray","populate","FormatTypes","sighash","minimal","full","json","paramTypeArray","RegExp","ParamType","arrayLength","arrayChildren","fromObject","baseType","_isParamType","comp","parse","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","trim","anonymous","inputs","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","gas","parseModifiers","constant","payable","stateMutability","verifyState","isConstructorFragment","parens","outputs","isFunctionFragment","returns","regexIdentifier","depth","logger$5","checkResultErrors","checkErrors","childPath","Coder","localName","dynamic","_throwError","Writer","_data","_dataLength","_padding","_writeData","appendWriter","writer","writeBytes","paddingOffset","_getValue","BUFFER_OVERRUN","writeValue","writeUpdatableValue","Reader","coerceFunc","allowLoose","_offset","consumed","coerce","_coerceFunc","_peekBytes","loose","alignedLength","subReader","readBytes","readValue","sha3","root","NODE_JS","JS_SHA3_NO_NODE_JS","process","versions","COMMON_JS","JS_SHA3_NO_COMMON_JS","HEX_CHARS","SHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","createOutputMethod","outputType","Keccak","update","createShakeOutputMethod","outputBits","createMethod","method","create","createShakeMethod","algorithms","methods","methodNames","algorithm","methodName","blocks","reset","block","blockCount","byteCount","outputBlocks","extraBytes","notString","ArrayBuffer","lastByteIndex","f","finalize","arrayBuffer","buffer","Uint32Array","digest","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak256","keccak_256","version$5","logger$6","arrayifyInteger","unarrayifyInteger","_encode","payload","encode","_decodeChildren","childOffset","decoded","_decode","lengthLength","decode","__proto__","version$6","logger$7","getChecksumAddress","address","chars","expanded","hashed","toUpperCase","MAX_SAFE_INTEGER","log10","LN10","ibanLookup","safeDigits","ibanChecksum","checksum","getAddress","isAddress","getIcapAddress","base36","getContractAddress","transaction","nonce","getCreate2Address","salt","initCodeHash","AddressCoder","reader","AnonymousCoder","coder","logger$8","pack","coders","values","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","func","unpack","baseReader","offsetReader","uniqueNames","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","NullCoder","AddressZero","NegativeOne$1","Zero$1","One","Two","WeiPerEther","MaxUint256","HashZero","EtherSymbol","index$1","NumberCoder","maxUintValue","bounds","version$7","logger$9","UnicodeNormalizationForm","Utf8ErrorReason","errorFunc","badCodepoint","ignoreFunc","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","replaceFunc","OVERLONG","Utf8ErrorFuncs","ignore","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","pair","escapeChar","_toEscapedUtf8String","codePoint","_toUtf8String","codePoints","toUtf8String","toUtf8CodePoints","formatBytes32String","text","parseBytes32String","bytes2","createTable","createRangeTable","matchMap","ranges","range","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","_nameprepTableA1","codepoint","_nameprepTableB2","codes","complex","_nameprepTableC","nameprep","codesTableB2","NFKC","StringCoder","TupleCoder","types","logger$a","paramTypeBytes","paramTypeNumber","AbiCoder","_getCoder","component","_getWordSize","_getReader","_getWriter","getDefaultValue","defaultAbiCoder","id","version$8","logger$b","Zeros","fill","Partition","isValidName","namehash","partition","label","messagePrefix","hashMessage","__awaiter$1","logger$c","NegativeOne$2","Zero$2","One$1","MaxUint256$1","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","chainId","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","TypedDataEncoder","links","parents","subtypes","field","encoder","primaryTypes","filter","checkCircular","found","subtype","primaryType","st","sort","_types","getEncoder","_encoderCache","_getEncoder","subEncoder","encodedType","encodeData","hashStruct","hash","_visit","callback","visit","getPrimaryType","hashDomain","domain","domainFields","EIP712Domain","resolveNames","resolveName","ensCache","getPayload","domainValues","domainTypes","typesWithDomain","logger$d","LogDescription","TransactionDescription","Indexed","isIndexed","_isIndexed","wrapAccessError","property","wrap","Interface","fragments","abi","fragment","bucket","deploy","functions","events","getAbiCoder","getSighash","functionFragment","getEventTopic","eventFragment","getFunction","nameOrSignatureOrSighash","matching","getEvent","nameOrSignatureOrTopic","topichash","_decodeParams","_abiCoder","_encodeParams","encodeDeploy","decodeFunctionData","encodeFunctionData","decodeFunctionResult","errorSignature","CALL_EXCEPTION","errorArgs","encodeFunctionResult","encodeFilterTopics","topics","encodeTopic","pop","encodeEventLog","dataTypes","dataValues","decodeEventLog","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","parseTransaction","tx","parseLog","topic","isInterface","_isInterface","version$9","logger$e","ForkEvent","isForkEvent","_isForkEvent","BlockForkEvent","blockHash","expiry","_isBlockForkEvent","TransactionForkEvent","_isTransactionForkEvent","TransactionOrderForkEvent","beforeHash","afterHash","_isTransactionOrderForkEvent","Provider","addListener","eventName","listener","on","removeListener","isProvider","_isProvider","version$a","__awaiter$2","logger$f","allowedTransactionKeys","forwardErrors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","Signer","getBalance","blockTag","_checkProvider","provider","getTransactionCount","estimateGas","checkTransaction","sendTransaction","populateTransaction","signTransaction","signedTx","getChainId","network","getNetwork","getGasPrice","to","gasPrice","gasLimit","catch","UNPREDICTABLE_GAS_LIMIT","isSigner","_isSigner","VoidSigner","_fail","signMessage","_signTypedData","connect","minimalisticAssert","equal","assertEqual","inherits_browser","configurable","util","inherits_1","enc","toArray_1","toHex$1","zero2","toHex_1","htonl","htonl_1","toHex32","zero8","toHex32_1","zero2_1","zero8_1","join32","join32_1","split32","split32_1","rotr32","rotr32_1","rotl32","rotl32_1","sum32","sum32_1","sum32_3","sum32_3_1","sum32_4","sum32_4_1","sum32_5","sum32_5_1","sum64","buf","pos","ah","al","bh","bl","sum64_1","sum64_hi","sum64_hi_1","sum64_lo","sum64_lo_1","sum64_4_hi","ch","cl","dh","dl","sum64_4_hi_1","sum64_4_lo","sum64_4_lo_1","sum64_5_hi","eh","el","sum64_5_hi_1","sum64_5_lo","sum64_5_lo_1","rotr64_hi","rotr64_hi_1","rotr64_lo","rotr64_lo_1","shr64_hi","shr64_hi_1","shr64_lo","shr64_lo_1","utils","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","BlockHash_1","_update","_pad","_digest","pad","common","rotr32$1","ft_1","ch32","p32","maj32","ft_1_1","ch32_1","maj32_1","p32_1","s0_256","s0_256_1","s1_256","s1_256_1","g0_256","g0_256_1","g1_256","g1_256_1","common$1","rotl32$1","sum32$1","sum32_5$1","ft_1$1","BlockHash$1","sha1_K","SHA1","W","_1","sum32$2","sum32_4$1","sum32_5$2","ch32$1","maj32$1","s0_256$1","s1_256$1","g0_256$1","g1_256$1","BlockHash$2","sha256_K","SHA256","_256","T1","T2","SHA224","_224","rotr64_hi$1","rotr64_lo$1","shr64_hi$1","shr64_lo$1","sum64$1","sum64_hi$1","sum64_lo$1","sum64_4_hi$1","sum64_4_lo$1","sum64_5_hi$1","sum64_5_lo$1","BlockHash$3","sha512_K","SHA512","_512","_prepareBlock","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","zl","SHA384","_384","sha1","sha224","sha256","sha384","sha512","sha","rotl32$2","sum32$3","sum32_3$1","sum32_4$2","BlockHash$4","RIPEMD160","ripemd160","E","Ah","Bh","Ch","Dh","Eh","T","K","rh","Kh","sh","ripemd","Hmac","Hash","inner","outer","hmac","hash_1","commonjsGlobal$1","getDefaultExportFromCjs$1","createCommonjsModule$1","commonjsRequire$1","getDefaultExportFromNamespaceIfPresent$1","getDefaultExportFromNamespaceIfNotNamed$1","getAugmentedNamespace$1","minimalisticAssert$1","assert$1","utils_1","arr","utils_1$1","getNAF","naf","getJSF","k1","k2","jsf","d1","d2","m8","m14","m24","u1","u2","cachedProperty","obj","computer","parseBytes","intFromLE","assert$1$1","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","point","validate","_fixedNafMul","precomputed","doubles","_getDoubles","I","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","BasePoint","curve","decodePoint","pointFromX","encodeCompressed","compact","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","inherits_browser$1","assert$2","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","short_1","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","l1","l2","aprxSqrt","y1","y2","prevR","len1","len2","_endoSplit","v1","v2","p1","p2","q1","q2","inf","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","Point","isRed","fromJSON","pre","endoMul","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","JPoint","zOne","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","curve_1","short","edwards","curves_1","curves","PresetCurve","defineCurve","crash","HmacDRBG","predResist","minEntropy","_reseed","reseedInterval","V","entropy","entropyEnc","nonceEnc","pers","persEnc","hmacDrbg","seed","_hmac","kmac","reseed","addEnc","generate","temp","assert$3","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","derive","sign","verify","assert$4","Signature","_importDER","Position","place","getLength","initial","octetLen","rmPadding","slen","constructLength","octets","LN2","toDER","backHalf","rand","assert$5","EC","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","canonical","signature$1","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic_1","elliptic","eddsa","EC$1","version$b","logger$g","_curve","getCurve","SigningKey","privateKey","_addPoint","p0","publicKey","signDigest","digestBytes","computeSharedSecret","otherKey","otherKeyPair","computePublicKey","isSigningKey","_isSigningKey","recoverPublicKey","sig","rs","compressed","signingKey","version$c","logger$h","handleAddress","handleNumber","transactionFields","maxLength","allowedTransactionKeys$1","computeAddress","recoverAddress","formatNumber","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip2930","accessList","_serialize","raw","fieldInfo","serialize","transactionType","_parseEip2930","recid","_parse","rawTransaction","version$d","__awaiter$3","logger$i","allowedTransactionKeys$2","resolver","nameOrPromise","resolveAddresses","paramType","contract","overrides","signer","override","resolved","resolvedAddress","interface","intrinsic","roValue","leftovers","buildPopulate","buildEstimate","signerOrProvider","buildCall","collapseSimple","deployTransaction","_deployed","buildSend","txRequest","wait","bind","confirmations","receipt","logs","event","parsed","eventSignature","getBlock","getTransaction","transactionHash","getTransactionReceipt","buildDefault","getEventTag","RunningEvent","tag","_listeners","once","removeAllListeners","listeners","listenerCount","run","argsCopy","setTimeout","prepareEvent","getEmit","ErrorRunningEvent","FragmentRunningEvent","contractInterface","decodeError","WildcardRunningEvent","BaseContract","addressOrName","Contract","uniqueFilters","filters","uniqueSignatures","callStatic","signatures","getInterface","deployed","_deployedPromise","getCode","contractAddress","fallback","attach","_normalizeRunningEvent","runningEvent","_runningEvents","_getRunningEvent","_checkRunningEvents","emit","_wrappedEmits","_wrapEvent","_addEventListener","wrappedEmit","queryFilter","fromBlockOrBlockhash","toBlock","fromBlock","getLogs","ContractFactory","bytecode","bytecodeHex","getDeployTransaction","unsignedTx","getContract","fromSolidity","compilerOutput","evm","BaseX","alphabet","charAt","_alphabetMap","source","digits","_leader","TypeError","byte","reverse","Base32","Base58","SupportedAlgorithm","version$e","logger$j","ripemd160$1","sha256$1","sha512$1","computeHmac","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","DK","block1","U","destPos","version$f","exportWordlist","logger$k","Wordlist","locale","mnemonic","wordlist","getWord","getWordIndex","register","lang","anyGlobal","_ethers","wordlists","loadWords","LangCz","langCz","words$1","wordlist$1","loadWords$1","LangEn","langEn","words$2","lookup","wordlist$2","dropDiacritic","expand","loadWords$2","LangEs","langEs","words$3","wordlist$3","lookup$1","dropDiacritic$1","expand$1","loadWords$3","LangFr","langFr","mapping","wordlist$4","KiYoKu","KyoKu","loadWords$4","kana","sortJapanese","LangJa","langJa","data$1","getHangul","wordlist$5","loadWords$5","LangKo","langKo","words$4","wordlist$6","loadWords$6","LangIt","langIt","data$2","deltaData","wordlist$7","zh_cn","zh_tw","Checks","codes$1","style","loadWords$7","deltaOffset","LangZh","country","langZhCn","langZhTw","cz","en","es","fr","it","ko","version$g","logger$l","MasterSecret","HardenedBit","getUpperMask","getLowerMask","bytes32","base58check","getWordlist","_constructorGuard$3","defaultPath","HDNode","parentFingerprint","chainCode","mnemonicOrPath","compressedPublicKey","extendedKey","neuter","_derive","IL","IR","ki","Ki","ek","srcMnemonic","phrase","fingerprint","derivePath","_fromSeed","seedArray","fromMnemonic","entropyToMnemonic","mnemonicToEntropy","mnemonicToSeed","fromSeed","fromExtendedKey","NFKD","entropyBits","checksumBits","checksumMask","indices","remainingBits","isValidMnemonic","version$h","logger$m","crypto","msCrypto","getRandomValues","randomBytes","shuffled","random","aesJs","checkInt","checkInts","arrayish","coerceArray","arg","isView","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","encodeURI","substr","convertHex","Hex","numberOfRounds","rcon","S","Si","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","rconpointer","tt","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","encrypted","xorSegment","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","pkcs7pad","padder","pkcs7strip","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utf8","pkcs7","_arrayTest","amd","_aesjs","version$i","looseArrayify","hexString","zpad","getPassword","searchPath","currentChild","matchingChild","uuidV4","logger$n","CrowdsaleAccount","isCrowdsaleAccount","_isCrowdsaleAccount","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","getJsonWalletAddress","scrypt","MAX_VALUE","h0","h1","h4","h5","h6","h7","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","dkLen","innerLen","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","R","src","srcPos","checkBufferish","ensureInteger","_scrypt","XY","totalOps","currentOp","lastPercent10","stop","i0","i1","Bi","limit","nextTick","setImmediate","incrementalSMix","steps","percent10","derivedKey","lib","progressCallback","lastProgress","progress","syncScrypt","__awaiter$4","logger$o","hasMnemonic","KeystoreAccount","isKeystoreAccount","_isKeystoreAccount","_decrypt","cipher","aesCtr","_getAccount","computedMAC","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","pbkdf2Sync","passwordBytes","prfFunc","pbkdf2$1","_computeKdfKey","pbkdf2Func","scryptFunc","kdf","prf","decryptSync","decrypt$1","client","uuidRandom","uuid","macPrefix","mac","Crypto","cipherparams","kdfparams","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","decryptJsonWallet","decryptJsonWalletSync","version$j","__awaiter$5","logger$p","isAccount","hasMnemonic$1","Wallet","_mnemonic","_signingKey","populated","createRandom","extraEntropy","fromEncryptedJson","fromEncryptedJsonSync","verifyMessage","verifyTypedData","version$k","logger$q","isRenetworkable","renetwork","ethDefaultProvider","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","skip","alchemy","PocketProvider","CloudflareProvider","FallbackProvider","quorum","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","classic","classicMorden","classicTestnet","classicKotti","standard","defaultProvider","decode$1","textData","atob","encode$1","btoa","index$2","version$l","__awaiter$6","getUrl","href","request","headers","body","cache","credentials","redirect","referrer","response","fetch","statusCode","status","statusMessage","statusText","__awaiter$7","logger$r","staller","duration","bodyify","_fetchData","connection","processFunc","attemptLimit","throttleLimit","throttleCallback","throttleSlotInterval","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","flatHeaders","header","runningTimeout","timer","promise","TIMEOUT","requestBody","requestMethod","cancel","clearTimeout","runningFetch","attempt","tryAgain","stall","retryAfter","SERVER_ERROR","serverError","throttleRetry","race","fetchJson","processJsonFunc","updated","hasContentType","poll","interval","retryLimit","oncePoll","onceBlock","ALPHABET","ALPHABET_MAP","polymodStep","prefixChk","prefix","chk","encode$2","LIMIT","__decode","lowered","uppered","lastIndexOf","wordChars","decodeUnsafe","decode$2","convert","inBits","outBits","maxV","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","bech32","version$m","logger$s","Formatter","formats","getDefaultFormats","bigNumber","strictData","allowNull","blockNumber","transactionIndex","uint256","creates","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","parentHash","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","filterLog","removed","allowFalsish","strict","callAddress","_block","author","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","__awaiter$8","logger$t","checkTopic","serializeTopics","sorted","deserializeTopics","getEventTag$1","getTime","PollableEvents","Event","pollable","coinInfos","symbol","p2pkh","p2sh","ilk","bytes32ify","base58Encode","Resolver","formatter","_fetchBytes","selector","parameters","_getAddress","coinType","hexBytes","coinInfo","getContentHash","ipfs","swarm","getText","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","ready","NETWORK_ERROR","_getInternalBlockNumber","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","pollingInterval","previousBlockNumber","eventBlockNumber","runner","resetEventsBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","_getFastBlockNumber","getBlockNumber","waitForTransaction","handler","unref","_getBlockTag","getStorageAt","position","_wrapTransaction","expectedHash","returnedHash","signedTransaction","hexTx","_getTransactionRequest","_getFilter","_getBlock","blockHashOrBlockTag","includeTransactions","getBlockWithTransactions","getEtherPrice","getResolver","_getResolver","lookupAddress","reverseName","resolverAddress","NOT_IMPLEMENTED","_startEvent","_stopEvent","stopped","eventTag","__awaiter$9","logger$u","errorGas","checkError","responseText","getResult","getLowerCase","_constructorGuard$4","JsonRpcSigner","addressOrIndex","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","send","accounts","sendUncheckedTransaction","fromAddress","estimate","sender","hexlifyTransaction","unlock","allowedTransactionKeys$3","networkOrReady","_nextId","_cache","_eventLoopCache","defaultUrl","_uncachedDetectNetwork","getSigner","getUncheckedSigner","listAccounts","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","__awaiter$a","logger$v","NextId","WebSocketProvider","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_detectNetwork","rid","_subscribe","subIdPromise","_subIds","subId","emitReceipt","destroy","readyState","CONNECTING","onerror","close","__awaiter$b","logger$w","StaticJsonRpcProvider","_super","UrlJsonRpcProvider","apiKey","getApiKey","logger$x","defaultApiKey","AlchemyWebSocketProvider","getWebSocketProvider","host","__awaiter$c","logger$y","__awaiter$d","logger$z","getTransactionPostData","sets","getResult$1","getJsonResult","checkLogTag","defaultApiKey$1","checkError$1","baseUrl","procFunc","payloadStr","apikey","postData","topic0","ethusd","getHistory","startBlock","endBlock","timeStamp","__awaiter$e","logger$A","checkNetworks","median","maxDelta","middle","serialize$1","nextRid","stall$1","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","normalizedTally","configs","tally","getProcessFunc","_highestBlockNumber","waitForSync","cancelled","getRunner","currentBlockNumber","providerConfigs","configOrProvider","stallTimeout","priority","first","t0","inflightWeight","backend","waiting","errorCode","props","IpcProvider","logger$B","defaultProjectId","InfuraWebSocketProvider","projectId","projectSecret","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","logger$C","defaultApiKey$2","NodesmithProvider","logger$D","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","logger$E","buildWeb3LegacyFetcher","sendFunc","isMetaMask","isStatus","buildEip1193Fetcher","Web3Provider","jsonRpcFetchFunc","subprovider","sendAsync","logger$F","getDefaultProvider","index$3","regexBytes","regexNumber","regexArray","Zeros$1","_pack","pack$1","tight","keccak256$1","sha256$2","version$n","logger$G","names","commify","suffix","formatted","formatUnits","unitName","parseUnits","formatEther","parseEther","ether","utils$1","RLP","base58","base64","_TypedDataEncoder","solidityPack","solidityKeccak256","soliditySha256","serializeTransaction","version$o","logger$H","ethers","constants"],"mappings":"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","sourcesContent":["var commonjsGlobal=typeof globalThis!==\"undefined\"?globalThis:typeof window!==\"undefined\"?window:typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:{};function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,\"default\")?x[\"default\"]:x}function createCommonjsModule(fn,basedir,module){return module={path:basedir,exports:{},require:function(path,base){return commonjsRequire(path,base===undefined||base===null?module.path:base)}},fn(module,module.exports),module.exports}function getDefaultExportFromNamespaceIfPresent(n){return n&&Object.prototype.hasOwnProperty.call(n,\"default\")?n[\"default\"]:n}function getDefaultExportFromNamespaceIfNotNamed(n){return n&&Object.prototype.hasOwnProperty.call(n,\"default\")&&Object.keys(n).length===1?n[\"default\"]:n}function getAugmentedNamespace(n){if(n.__esModule)return n;var a=Object.defineProperty({},\"__esModule\",{value:true});Object.keys(n).forEach(function(k){var d=Object.getOwnPropertyDescriptor(n,k);Object.defineProperty(a,k,d.get?d:{enumerable:true,get:function(){return n[k]}})});return a}function commonjsRequire(){throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\")}var bn=createCommonjsModule(function(module){(function(module,exports){\"use strict\";function assert(val,msg){if(!val)throw new Error(msg||\"Assertion failed\")}function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}function BN(number,base,endian){if(BN.isBN(number)){return number}this.negative=0;this.words=null;this.length=0;this.red=null;if(number!==null){if(base===\"le\"||base===\"be\"){endian=base;base=10}this._init(number||0,base||10,endian||\"be\")}}if(typeof module===\"object\"){module.exports=BN}else{exports.BN=BN}BN.BN=BN;BN.wordSize=26;var Buffer;try{if(typeof window!==\"undefined\"&&typeof window.Buffer!==\"undefined\"){Buffer=window.Buffer}else{Buffer=null.Buffer}}catch(e){}BN.isBN=function isBN(num){if(num instanceof BN){return true}return num!==null&&typeof num===\"object\"&&num.constructor.wordSize===BN.wordSize&&Array.isArray(num.words)};BN.max=function max(left,right){if(left.cmp(right)>0)return left;return right};BN.min=function min(left,right){if(left.cmp(right)<0)return left;return right};BN.prototype._init=function init(number,base,endian){if(typeof number===\"number\"){return this._initNumber(number,base,endian)}if(typeof number===\"object\"){return this._initArray(number,base,endian)}if(base===\"hex\"){base=16}assert(base===(base|0)&&base>=2&&base<=36);number=number.toString().replace(/\\s+/g,\"\");var start=0;if(number[0]===\"-\"){start++;this.negative=1}if(start<number.length){if(base===16){this._parseHex(number,start,endian)}else{this._parseBase(number,base,start);if(endian===\"le\"){this._initArray(this.toArray(),base,endian)}}}};BN.prototype._initNumber=function _initNumber(number,base,endian){if(number<0){this.negative=1;number=-number}if(number<67108864){this.words=[number&67108863];this.length=1}else if(number<4503599627370496){this.words=[number&67108863,number/67108864&67108863];this.length=2}else{assert(number<9007199254740992);this.words=[number&67108863,number/67108864&67108863,1];this.length=3}if(endian!==\"le\")return;this._initArray(this.toArray(),base,endian)};BN.prototype._initArray=function _initArray(number,base,endian){assert(typeof number.length===\"number\");if(number.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(number.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var j,w;var off=0;if(endian===\"be\"){for(i=number.length-1,j=0;i>=0;i-=3){w=number[i]|number[i-1]<<8|number[i-2]<<16;this.words[j]|=w<<off&67108863;this.words[j+1]=w>>>26-off&67108863;off+=24;if(off>=26){off-=26;j++}}}else if(endian===\"le\"){for(i=0,j=0;i<number.length;i+=3){w=number[i]|number[i+1]<<8|number[i+2]<<16;this.words[j]|=w<<off&67108863;this.words[j+1]=w>>>26-off&67108863;off+=24;if(off>=26){off-=26;j++}}}return this.strip()};function parseHex4Bits(string,index){var c=string.charCodeAt(index);if(c>=65&&c<=70){return c-55}else if(c>=97&&c<=102){return c-87}else{return c-48&15}}function parseHexByte(string,lowerBound,index){var r=parseHex4Bits(string,index);if(index-1>=lowerBound){r|=parseHex4Bits(string,index-1)<<4}return r}BN.prototype._parseHex=function _parseHex(number,start,endian){this.length=Math.ceil((number.length-start)/6);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var off=0;var j=0;var w;if(endian===\"be\"){for(i=number.length-1;i>=start;i-=2){w=parseHexByte(number,start,i)<<off;this.words[j]|=w&67108863;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26}else{off+=8}}}else{var parseLength=number.length-start;for(i=parseLength%2===0?start+1:start;i<number.length;i+=2){w=parseHexByte(number,start,i)<<off;this.words[j]|=w&67108863;if(off>=18){off-=18;j+=1;this.words[j]|=w>>>26}else{off+=8}}}this.strip()};function parseBase(str,start,end,mul){var r=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r*=mul;if(c>=49){r+=c-49+10}else if(c>=17){r+=c-17+10}else{r+=c}}return r}BN.prototype._parseBase=function _parseBase(number,base,start){this.words=[0];this.length=1;for(var limbLen=0,limbPow=1;limbPow<=67108863;limbPow*=base){limbLen++}limbLen--;limbPow=limbPow/base|0;var total=number.length-start;var mod=total%limbLen;var end=Math.min(total,total-mod)+start;var word=0;for(var i=start;i<end;i+=limbLen){word=parseBase(number,i,i+limbLen,base);this.imuln(limbPow);if(this.words[0]+word<67108864){this.words[0]+=word}else{this._iaddn(word)}}if(mod!==0){var pow=1;word=parseBase(number,i,number.length,base);for(i=0;i<mod;i++){pow*=base}this.imuln(pow);if(this.words[0]+word<67108864){this.words[0]+=word}else{this._iaddn(word)}}this.strip()};BN.prototype.copy=function copy(dest){dest.words=new Array(this.length);for(var i=0;i<this.length;i++){dest.words[i]=this.words[i]}dest.length=this.length;dest.negative=this.negative;dest.red=this.red};BN.prototype.clone=function clone(){var r=new BN(null);this.copy(r);return r};BN.prototype._expand=function _expand(size){while(this.length<size){this.words[this.length++]=0}return this};BN.prototype.strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};BN.prototype.inspect=function inspect(){return(this.red?\"<BN-R: \":\"<BN: \")+this.toString(16)+\">\"};var zeros=[\"\",\"0\",\"00\",\"000\",\"0000\",\"00000\",\"000000\",\"0000000\",\"00000000\",\"000000000\",\"0000000000\",\"00000000000\",\"000000000000\",\"0000000000000\",\"00000000000000\",\"000000000000000\",\"0000000000000000\",\"00000000000000000\",\"000000000000000000\",\"0000000000000000000\",\"00000000000000000000\",\"000000000000000000000\",\"0000000000000000000000\",\"00000000000000000000000\",\"000000000000000000000000\",\"0000000000000000000000000\"];var groupSizes=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var groupBases=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(base,padding){base=base||10;padding=padding|0||1;var out;if(base===16||base===\"hex\"){out=\"\";var off=0;var carry=0;for(var i=0;i<this.length;i++){var w=this.words[i];var word=((w<<off|carry)&16777215).toString(16);carry=w>>>24-off&16777215;if(carry!==0||i!==this.length-1){out=zeros[6-word.length]+word+out}else{out=word+out}off+=2;if(off>=26){off-=26;i--}}if(carry!==0){out=carry.toString(16)+out}while(out.length%padding!==0){out=\"0\"+out}if(this.negative!==0){out=\"-\"+out}return out}if(base===(base|0)&&base>=2&&base<=36){var groupSize=groupSizes[base];var groupBase=groupBases[base];out=\"\";var c=this.clone();c.negative=0;while(!c.isZero()){var r=c.modn(groupBase).toString(base);c=c.idivn(groupBase);if(!c.isZero()){out=zeros[groupSize-r.length]+r+out}else{out=r+out}}if(this.isZero()){out=\"0\"+out}while(out.length%padding!==0){out=\"0\"+out}if(this.negative!==0){out=\"-\"+out}return out}assert(false,\"Base should be between 2 and 36\")};BN.prototype.toNumber=function toNumber(){var ret=this.words[0];if(this.length===2){ret+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){ret+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert(false,\"Number can only safely store up to 53 bits\")}return this.negative!==0?-ret:ret};BN.prototype.toJSON=function toJSON(){return this.toString(16)};BN.prototype.toBuffer=function toBuffer(endian,length){assert(typeof Buffer!==\"undefined\");return this.toArrayLike(Buffer,endian,length)};BN.prototype.toArray=function toArray(endian,length){return this.toArrayLike(Array,endian,length)};BN.prototype.toArrayLike=function toArrayLike(ArrayType,endian,length){var byteLength=this.byteLength();var reqLength=length||Math.max(1,byteLength);assert(byteLength<=reqLength,\"byte array longer than desired length\");assert(reqLength>0,\"Requested array length <= 0\");this.strip();var littleEndian=endian===\"le\";var res=new ArrayType(reqLength);var b,i;var q=this.clone();if(!littleEndian){for(i=0;i<reqLength-byteLength;i++){res[i]=0}for(i=0;!q.isZero();i++){b=q.andln(255);q.iushrn(8);res[reqLength-i-1]=b}}else{for(i=0;!q.isZero();i++){b=q.andln(255);q.iushrn(8);res[i]=b}for(;i<reqLength;i++){res[i]=0}}return res};if(Math.clz32){BN.prototype._countBits=function _countBits(w){return 32-Math.clz32(w)}}else{BN.prototype._countBits=function _countBits(w){var t=w;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN.prototype._zeroBits=function _zeroBits(w){if(w===0)return 26;var t=w;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN.prototype.bitLength=function bitLength(){var w=this.words[this.length-1];var hi=this._countBits(w);return(this.length-1)*26+hi};function toBitArray(num){var w=new Array(num.bitLength());for(var bit=0;bit<w.length;bit++){var off=bit/26|0;var wbit=bit%26;w[bit]=(num.words[off]&1<<wbit)>>>wbit}return w}BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var r=0;for(var i=0;i<this.length;i++){var b=this._zeroBits(this.words[i]);r+=b;if(b!==26)break}return r};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN.prototype.toTwos=function toTwos(width){if(this.negative!==0){return this.abs().inotn(width).iaddn(1)}return this.clone()};BN.prototype.fromTwos=function fromTwos(width){if(this.testn(width-1)){return this.notn(width).iaddn(1).ineg()}return this.clone()};BN.prototype.isNeg=function isNeg(){return this.negative!==0};BN.prototype.neg=function neg(){return this.clone().ineg()};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN.prototype.iuor=function iuor(num){while(this.length<num.length){this.words[this.length++]=0}for(var i=0;i<num.length;i++){this.words[i]=this.words[i]|num.words[i]}return this.strip()};BN.prototype.ior=function ior(num){assert((this.negative|num.negative)===0);return this.iuor(num)};BN.prototype.or=function or(num){if(this.length>num.length)return this.clone().ior(num);return num.clone().ior(this)};BN.prototype.uor=function uor(num){if(this.length>num.length)return this.clone().iuor(num);return num.clone().iuor(this)};BN.prototype.iuand=function iuand(num){var b;if(this.length>num.length){b=num}else{b=this}for(var i=0;i<b.length;i++){this.words[i]=this.words[i]&num.words[i]}this.length=b.length;return this.strip()};BN.prototype.iand=function iand(num){assert((this.negative|num.negative)===0);return this.iuand(num)};BN.prototype.and=function and(num){if(this.length>num.length)return this.clone().iand(num);return num.clone().iand(this)};BN.prototype.uand=function uand(num){if(this.length>num.length)return this.clone().iuand(num);return num.clone().iuand(this)};BN.prototype.iuxor=function iuxor(num){var a;var b;if(this.length>num.length){a=this;b=num}else{a=num;b=this}for(var i=0;i<b.length;i++){this.words[i]=a.words[i]^b.words[i]}if(this!==a){for(;i<a.length;i++){this.words[i]=a.words[i]}}this.length=a.length;return this.strip()};BN.prototype.ixor=function ixor(num){assert((this.negative|num.negative)===0);return this.iuxor(num)};BN.prototype.xor=function xor(num){if(this.length>num.length)return this.clone().ixor(num);return num.clone().ixor(this)};BN.prototype.uxor=function uxor(num){if(this.length>num.length)return this.clone().iuxor(num);return num.clone().iuxor(this)};BN.prototype.inotn=function inotn(width){assert(typeof width===\"number\"&&width>=0);var bytesNeeded=Math.ceil(width/26)|0;var bitsLeft=width%26;this._expand(bytesNeeded);if(bitsLeft>0){bytesNeeded--}for(var i=0;i<bytesNeeded;i++){this.words[i]=~this.words[i]&67108863}if(bitsLeft>0){this.words[i]=~this.words[i]&67108863>>26-bitsLeft}return this.strip()};BN.prototype.notn=function notn(width){return this.clone().inotn(width)};BN.prototype.setn=function setn(bit,val){assert(typeof bit===\"number\"&&bit>=0);var off=bit/26|0;var wbit=bit%26;this._expand(off+1);if(val){this.words[off]=this.words[off]|1<<wbit}else{this.words[off]=this.words[off]&~(1<<wbit)}return this.strip()};BN.prototype.iadd=function iadd(num){var r;if(this.negative!==0&&num.negative===0){this.negative=0;r=this.isub(num);this.negative^=1;return this._normSign()}else if(this.negative===0&&num.negative!==0){num.negative=0;r=this.isub(num);num.negative=1;return r._normSign()}var a,b;if(this.length>num.length){a=this;b=num}else{a=num;b=this}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)+(b.words[i]|0)+carry;this.words[i]=r&67108863;carry=r>>>26}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;this.words[i]=r&67108863;carry=r>>>26}this.length=a.length;if(carry!==0){this.words[this.length]=carry;this.length++}else if(a!==this){for(;i<a.length;i++){this.words[i]=a.words[i]}}return this};BN.prototype.add=function add(num){var res;if(num.negative!==0&&this.negative===0){num.negative=0;res=this.sub(num);num.negative^=1;return res}else if(num.negative===0&&this.negative!==0){this.negative=0;res=num.sub(this);this.negative=1;return res}if(this.length>num.length)return this.clone().iadd(num);return num.clone().iadd(this)};BN.prototype.isub=function isub(num){if(num.negative!==0){num.negative=0;var r=this.iadd(num);num.negative=1;return r._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(num);this.negative=1;return this._normSign()}var cmp=this.cmp(num);if(cmp===0){this.negative=0;this.length=1;this.words[0]=0;return this}var a,b;if(cmp>0){a=this;b=num}else{a=num;b=this}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)-(b.words[i]|0)+carry;carry=r>>26;this.words[i]=r&67108863}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;carry=r>>26;this.words[i]=r&67108863}if(carry===0&&i<a.length&&a!==this){for(;i<a.length;i++){this.words[i]=a.words[i]}}this.length=Math.max(this.length,i);if(a!==this){this.negative=1}return this.strip()};BN.prototype.sub=function sub(num){return this.clone().isub(num)};function smallMulTo(self,num,out){out.negative=num.negative^self.negative;var len=self.length+num.length|0;out.length=len;len=len-1|0;var a=self.words[0]|0;var b=num.words[0]|0;var r=a*b;var lo=r&67108863;var carry=r/67108864|0;out.words[0]=lo;for(var k=1;k<len;k++){var ncarry=carry>>>26;var rword=carry&67108863;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j|0;a=self.words[i]|0;b=num.words[j]|0;r=a*b+rword;ncarry+=r/67108864|0;rword=r&67108863}out.words[k]=rword|0;carry=ncarry|0}if(carry!==0){out.words[k]=carry|0}else{out.length--}return out.strip()}var comb10MulTo=function comb10MulTo(self,num,out){var a=self.words;var b=num.words;var o=out.words;var c=0;var lo;var mid;var hi;var a0=a[0]|0;var al0=a0&8191;var ah0=a0>>>13;var a1=a[1]|0;var al1=a1&8191;var ah1=a1>>>13;var a2=a[2]|0;var al2=a2&8191;var ah2=a2>>>13;var a3=a[3]|0;var al3=a3&8191;var ah3=a3>>>13;var a4=a[4]|0;var al4=a4&8191;var ah4=a4>>>13;var a5=a[5]|0;var al5=a5&8191;var ah5=a5>>>13;var a6=a[6]|0;var al6=a6&8191;var ah6=a6>>>13;var a7=a[7]|0;var al7=a7&8191;var ah7=a7>>>13;var a8=a[8]|0;var al8=a8&8191;var ah8=a8>>>13;var a9=a[9]|0;var al9=a9&8191;var ah9=a9>>>13;var b0=b[0]|0;var bl0=b0&8191;var bh0=b0>>>13;var b1=b[1]|0;var bl1=b1&8191;var bh1=b1>>>13;var b2=b[2]|0;var bl2=b2&8191;var bh2=b2>>>13;var b3=b[3]|0;var bl3=b3&8191;var bh3=b3>>>13;var b4=b[4]|0;var bl4=b4&8191;var bh4=b4>>>13;var b5=b[5]|0;var bl5=b5&8191;var bh5=b5>>>13;var b6=b[6]|0;var bl6=b6&8191;var bh6=b6>>>13;var b7=b[7]|0;var bl7=b7&8191;var bh7=b7>>>13;var b8=b[8]|0;var bl8=b8&8191;var bh8=b8>>>13;var b9=b[9]|0;var bl9=b9&8191;var bh9=b9>>>13;out.negative=self.negative^num.negative;out.length=19;lo=Math.imul(al0,bl0);mid=Math.imul(al0,bh0);mid=mid+Math.imul(ah0,bl0)|0;hi=Math.imul(ah0,bh0);var w0=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w0>>>26)|0;w0&=67108863;lo=Math.imul(al1,bl0);mid=Math.imul(al1,bh0);mid=mid+Math.imul(ah1,bl0)|0;hi=Math.imul(ah1,bh0);lo=lo+Math.imul(al0,bl1)|0;mid=mid+Math.imul(al0,bh1)|0;mid=mid+Math.imul(ah0,bl1)|0;hi=hi+Math.imul(ah0,bh1)|0;var w1=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w1>>>26)|0;w1&=67108863;lo=Math.imul(al2,bl0);mid=Math.imul(al2,bh0);mid=mid+Math.imul(ah2,bl0)|0;hi=Math.imul(ah2,bh0);lo=lo+Math.imul(al1,bl1)|0;mid=mid+Math.imul(al1,bh1)|0;mid=mid+Math.imul(ah1,bl1)|0;hi=hi+Math.imul(ah1,bh1)|0;lo=lo+Math.imul(al0,bl2)|0;mid=mid+Math.imul(al0,bh2)|0;mid=mid+Math.imul(ah0,bl2)|0;hi=hi+Math.imul(ah0,bh2)|0;var w2=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w2>>>26)|0;w2&=67108863;lo=Math.imul(al3,bl0);mid=Math.imul(al3,bh0);mid=mid+Math.imul(ah3,bl0)|0;hi=Math.imul(ah3,bh0);lo=lo+Math.imul(al2,bl1)|0;mid=mid+Math.imul(al2,bh1)|0;mid=mid+Math.imul(ah2,bl1)|0;hi=hi+Math.imul(ah2,bh1)|0;lo=lo+Math.imul(al1,bl2)|0;mid=mid+Math.imul(al1,bh2)|0;mid=mid+Math.imul(ah1,bl2)|0;hi=hi+Math.imul(ah1,bh2)|0;lo=lo+Math.imul(al0,bl3)|0;mid=mid+Math.imul(al0,bh3)|0;mid=mid+Math.imul(ah0,bl3)|0;hi=hi+Math.imul(ah0,bh3)|0;var w3=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w3>>>26)|0;w3&=67108863;lo=Math.imul(al4,bl0);mid=Math.imul(al4,bh0);mid=mid+Math.imul(ah4,bl0)|0;hi=Math.imul(ah4,bh0);lo=lo+Math.imul(al3,bl1)|0;mid=mid+Math.imul(al3,bh1)|0;mid=mid+Math.imul(ah3,bl1)|0;hi=hi+Math.imul(ah3,bh1)|0;lo=lo+Math.imul(al2,bl2)|0;mid=mid+Math.imul(al2,bh2)|0;mid=mid+Math.imul(ah2,bl2)|0;hi=hi+Math.imul(ah2,bh2)|0;lo=lo+Math.imul(al1,bl3)|0;mid=mid+Math.imul(al1,bh3)|0;mid=mid+Math.imul(ah1,bl3)|0;hi=hi+Math.imul(ah1,bh3)|0;lo=lo+Math.imul(al0,bl4)|0;mid=mid+Math.imul(al0,bh4)|0;mid=mid+Math.imul(ah0,bl4)|0;hi=hi+Math.imul(ah0,bh4)|0;var w4=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w4>>>26)|0;w4&=67108863;lo=Math.imul(al5,bl0);mid=Math.imul(al5,bh0);mid=mid+Math.imul(ah5,bl0)|0;hi=Math.imul(ah5,bh0);lo=lo+Math.imul(al4,bl1)|0;mid=mid+Math.imul(al4,bh1)|0;mid=mid+Math.imul(ah4,bl1)|0;hi=hi+Math.imul(ah4,bh1)|0;lo=lo+Math.imul(al3,bl2)|0;mid=mid+Math.imul(al3,bh2)|0;mid=mid+Math.imul(ah3,bl2)|0;hi=hi+Math.imul(ah3,bh2)|0;lo=lo+Math.imul(al2,bl3)|0;mid=mid+Math.imul(al2,bh3)|0;mid=mid+Math.imul(ah2,bl3)|0;hi=hi+Math.imul(ah2,bh3)|0;lo=lo+Math.imul(al1,bl4)|0;mid=mid+Math.imul(al1,bh4)|0;mid=mid+Math.imul(ah1,bl4)|0;hi=hi+Math.imul(ah1,bh4)|0;lo=lo+Math.imul(al0,bl5)|0;mid=mid+Math.imul(al0,bh5)|0;mid=mid+Math.imul(ah0,bl5)|0;hi=hi+Math.imul(ah0,bh5)|0;var w5=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w5>>>26)|0;w5&=67108863;lo=Math.imul(al6,bl0);mid=Math.imul(al6,bh0);mid=mid+Math.imul(ah6,bl0)|0;hi=Math.imul(ah6,bh0);lo=lo+Math.imul(al5,bl1)|0;mid=mid+Math.imul(al5,bh1)|0;mid=mid+Math.imul(ah5,bl1)|0;hi=hi+Math.imul(ah5,bh1)|0;lo=lo+Math.imul(al4,bl2)|0;mid=mid+Math.imul(al4,bh2)|0;mid=mid+Math.imul(ah4,bl2)|0;hi=hi+Math.imul(ah4,bh2)|0;lo=lo+Math.imul(al3,bl3)|0;mid=mid+Math.imul(al3,bh3)|0;mid=mid+Math.imul(ah3,bl3)|0;hi=hi+Math.imul(ah3,bh3)|0;lo=lo+Math.imul(al2,bl4)|0;mid=mid+Math.imul(al2,bh4)|0;mid=mid+Math.imul(ah2,bl4)|0;hi=hi+Math.imul(ah2,bh4)|0;lo=lo+Math.imul(al1,bl5)|0;mid=mid+Math.imul(al1,bh5)|0;mid=mid+Math.imul(ah1,bl5)|0;hi=hi+Math.imul(ah1,bh5)|0;lo=lo+Math.imul(al0,bl6)|0;mid=mid+Math.imul(al0,bh6)|0;mid=mid+Math.imul(ah0,bl6)|0;hi=hi+Math.imul(ah0,bh6)|0;var w6=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w6>>>26)|0;w6&=67108863;lo=Math.imul(al7,bl0);mid=Math.imul(al7,bh0);mid=mid+Math.imul(ah7,bl0)|0;hi=Math.imul(ah7,bh0);lo=lo+Math.imul(al6,bl1)|0;mid=mid+Math.imul(al6,bh1)|0;mid=mid+Math.imul(ah6,bl1)|0;hi=hi+Math.imul(ah6,bh1)|0;lo=lo+Math.imul(al5,bl2)|0;mid=mid+Math.imul(al5,bh2)|0;mid=mid+Math.imul(ah5,bl2)|0;hi=hi+Math.imul(ah5,bh2)|0;lo=lo+Math.imul(al4,bl3)|0;mid=mid+Math.imul(al4,bh3)|0;mid=mid+Math.imul(ah4,bl3)|0;hi=hi+Math.imul(ah4,bh3)|0;lo=lo+Math.imul(al3,bl4)|0;mid=mid+Math.imul(al3,bh4)|0;mid=mid+Math.imul(ah3,bl4)|0;hi=hi+Math.imul(ah3,bh4)|0;lo=lo+Math.imul(al2,bl5)|0;mid=mid+Math.imul(al2,bh5)|0;mid=mid+Math.imul(ah2,bl5)|0;hi=hi+Math.imul(ah2,bh5)|0;lo=lo+Math.imul(al1,bl6)|0;mid=mid+Math.imul(al1,bh6)|0;mid=mid+Math.imul(ah1,bl6)|0;hi=hi+Math.imul(ah1,bh6)|0;lo=lo+Math.imul(al0,bl7)|0;mid=mid+Math.imul(al0,bh7)|0;mid=mid+Math.imul(ah0,bl7)|0;hi=hi+Math.imul(ah0,bh7)|0;var w7=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w7>>>26)|0;w7&=67108863;lo=Math.imul(al8,bl0);mid=Math.imul(al8,bh0);mid=mid+Math.imul(ah8,bl0)|0;hi=Math.imul(ah8,bh0);lo=lo+Math.imul(al7,bl1)|0;mid=mid+Math.imul(al7,bh1)|0;mid=mid+Math.imul(ah7,bl1)|0;hi=hi+Math.imul(ah7,bh1)|0;lo=lo+Math.imul(al6,bl2)|0;mid=mid+Math.imul(al6,bh2)|0;mid=mid+Math.imul(ah6,bl2)|0;hi=hi+Math.imul(ah6,bh2)|0;lo=lo+Math.imul(al5,bl3)|0;mid=mid+Math.imul(al5,bh3)|0;mid=mid+Math.imul(ah5,bl3)|0;hi=hi+Math.imul(ah5,bh3)|0;lo=lo+Math.imul(al4,bl4)|0;mid=mid+Math.imul(al4,bh4)|0;mid=mid+Math.imul(ah4,bl4)|0;hi=hi+Math.imul(ah4,bh4)|0;lo=lo+Math.imul(al3,bl5)|0;mid=mid+Math.imul(al3,bh5)|0;mid=mid+Math.imul(ah3,bl5)|0;hi=hi+Math.imul(ah3,bh5)|0;lo=lo+Math.imul(al2,bl6)|0;mid=mid+Math.imul(al2,bh6)|0;mid=mid+Math.imul(ah2,bl6)|0;hi=hi+Math.imul(ah2,bh6)|0;lo=lo+Math.imul(al1,bl7)|0;mid=mid+Math.imul(al1,bh7)|0;mid=mid+Math.imul(ah1,bl7)|0;hi=hi+Math.imul(ah1,bh7)|0;lo=lo+Math.imul(al0,bl8)|0;mid=mid+Math.imul(al0,bh8)|0;mid=mid+Math.imul(ah0,bl8)|0;hi=hi+Math.imul(ah0,bh8)|0;var w8=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w8>>>26)|0;w8&=67108863;lo=Math.imul(al9,bl0);mid=Math.imul(al9,bh0);mid=mid+Math.imul(ah9,bl0)|0;hi=Math.imul(ah9,bh0);lo=lo+Math.imul(al8,bl1)|0;mid=mid+Math.imul(al8,bh1)|0;mid=mid+Math.imul(ah8,bl1)|0;hi=hi+Math.imul(ah8,bh1)|0;lo=lo+Math.imul(al7,bl2)|0;mid=mid+Math.imul(al7,bh2)|0;mid=mid+Math.imul(ah7,bl2)|0;hi=hi+Math.imul(ah7,bh2)|0;lo=lo+Math.imul(al6,bl3)|0;mid=mid+Math.imul(al6,bh3)|0;mid=mid+Math.imul(ah6,bl3)|0;hi=hi+Math.imul(ah6,bh3)|0;lo=lo+Math.imul(al5,bl4)|0;mid=mid+Math.imul(al5,bh4)|0;mid=mid+Math.imul(ah5,bl4)|0;hi=hi+Math.imul(ah5,bh4)|0;lo=lo+Math.imul(al4,bl5)|0;mid=mid+Math.imul(al4,bh5)|0;mid=mid+Math.imul(ah4,bl5)|0;hi=hi+Math.imul(ah4,bh5)|0;lo=lo+Math.imul(al3,bl6)|0;mid=mid+Math.imul(al3,bh6)|0;mid=mid+Math.imul(ah3,bl6)|0;hi=hi+Math.imul(ah3,bh6)|0;lo=lo+Math.imul(al2,bl7)|0;mid=mid+Math.imul(al2,bh7)|0;mid=mid+Math.imul(ah2,bl7)|0;hi=hi+Math.imul(ah2,bh7)|0;lo=lo+Math.imul(al1,bl8)|0;mid=mid+Math.imul(al1,bh8)|0;mid=mid+Math.imul(ah1,bl8)|0;hi=hi+Math.imul(ah1,bh8)|0;lo=lo+Math.imul(al0,bl9)|0;mid=mid+Math.imul(al0,bh9)|0;mid=mid+Math.imul(ah0,bl9)|0;hi=hi+Math.imul(ah0,bh9)|0;var w9=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w9>>>26)|0;w9&=67108863;lo=Math.imul(al9,bl1);mid=Math.imul(al9,bh1);mid=mid+Math.imul(ah9,bl1)|0;hi=Math.imul(ah9,bh1);lo=lo+Math.imul(al8,bl2)|0;mid=mid+Math.imul(al8,bh2)|0;mid=mid+Math.imul(ah8,bl2)|0;hi=hi+Math.imul(ah8,bh2)|0;lo=lo+Math.imul(al7,bl3)|0;mid=mid+Math.imul(al7,bh3)|0;mid=mid+Math.imul(ah7,bl3)|0;hi=hi+Math.imul(ah7,bh3)|0;lo=lo+Math.imul(al6,bl4)|0;mid=mid+Math.imul(al6,bh4)|0;mid=mid+Math.imul(ah6,bl4)|0;hi=hi+Math.imul(ah6,bh4)|0;lo=lo+Math.imul(al5,bl5)|0;mid=mid+Math.imul(al5,bh5)|0;mid=mid+Math.imul(ah5,bl5)|0;hi=hi+Math.imul(ah5,bh5)|0;lo=lo+Math.imul(al4,bl6)|0;mid=mid+Math.imul(al4,bh6)|0;mid=mid+Math.imul(ah4,bl6)|0;hi=hi+Math.imul(ah4,bh6)|0;lo=lo+Math.imul(al3,bl7)|0;mid=mid+Math.imul(al3,bh7)|0;mid=mid+Math.imul(ah3,bl7)|0;hi=hi+Math.imul(ah3,bh7)|0;lo=lo+Math.imul(al2,bl8)|0;mid=mid+Math.imul(al2,bh8)|0;mid=mid+Math.imul(ah2,bl8)|0;hi=hi+Math.imul(ah2,bh8)|0;lo=lo+Math.imul(al1,bl9)|0;mid=mid+Math.imul(al1,bh9)|0;mid=mid+Math.imul(ah1,bl9)|0;hi=hi+Math.imul(ah1,bh9)|0;var w10=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w10>>>26)|0;w10&=67108863;lo=Math.imul(al9,bl2);mid=Math.imul(al9,bh2);mid=mid+Math.imul(ah9,bl2)|0;hi=Math.imul(ah9,bh2);lo=lo+Math.imul(al8,bl3)|0;mid=mid+Math.imul(al8,bh3)|0;mid=mid+Math.imul(ah8,bl3)|0;hi=hi+Math.imul(ah8,bh3)|0;lo=lo+Math.imul(al7,bl4)|0;mid=mid+Math.imul(al7,bh4)|0;mid=mid+Math.imul(ah7,bl4)|0;hi=hi+Math.imul(ah7,bh4)|0;lo=lo+Math.imul(al6,bl5)|0;mid=mid+Math.imul(al6,bh5)|0;mid=mid+Math.imul(ah6,bl5)|0;hi=hi+Math.imul(ah6,bh5)|0;lo=lo+Math.imul(al5,bl6)|0;mid=mid+Math.imul(al5,bh6)|0;mid=mid+Math.imul(ah5,bl6)|0;hi=hi+Math.imul(ah5,bh6)|0;lo=lo+Math.imul(al4,bl7)|0;mid=mid+Math.imul(al4,bh7)|0;mid=mid+Math.imul(ah4,bl7)|0;hi=hi+Math.imul(ah4,bh7)|0;lo=lo+Math.imul(al3,bl8)|0;mid=mid+Math.imul(al3,bh8)|0;mid=mid+Math.imul(ah3,bl8)|0;hi=hi+Math.imul(ah3,bh8)|0;lo=lo+Math.imul(al2,bl9)|0;mid=mid+Math.imul(al2,bh9)|0;mid=mid+Math.imul(ah2,bl9)|0;hi=hi+Math.imul(ah2,bh9)|0;var w11=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w11>>>26)|0;w11&=67108863;lo=Math.imul(al9,bl3);mid=Math.imul(al9,bh3);mid=mid+Math.imul(ah9,bl3)|0;hi=Math.imul(ah9,bh3);lo=lo+Math.imul(al8,bl4)|0;mid=mid+Math.imul(al8,bh4)|0;mid=mid+Math.imul(ah8,bl4)|0;hi=hi+Math.imul(ah8,bh4)|0;lo=lo+Math.imul(al7,bl5)|0;mid=mid+Math.imul(al7,bh5)|0;mid=mid+Math.imul(ah7,bl5)|0;hi=hi+Math.imul(ah7,bh5)|0;lo=lo+Math.imul(al6,bl6)|0;mid=mid+Math.imul(al6,bh6)|0;mid=mid+Math.imul(ah6,bl6)|0;hi=hi+Math.imul(ah6,bh6)|0;lo=lo+Math.imul(al5,bl7)|0;mid=mid+Math.imul(al5,bh7)|0;mid=mid+Math.imul(ah5,bl7)|0;hi=hi+Math.imul(ah5,bh7)|0;lo=lo+Math.imul(al4,bl8)|0;mid=mid+Math.imul(al4,bh8)|0;mid=mid+Math.imul(ah4,bl8)|0;hi=hi+Math.imul(ah4,bh8)|0;lo=lo+Math.imul(al3,bl9)|0;mid=mid+Math.imul(al3,bh9)|0;mid=mid+Math.imul(ah3,bl9)|0;hi=hi+Math.imul(ah3,bh9)|0;var w12=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w12>>>26)|0;w12&=67108863;lo=Math.imul(al9,bl4);mid=Math.imul(al9,bh4);mid=mid+Math.imul(ah9,bl4)|0;hi=Math.imul(ah9,bh4);lo=lo+Math.imul(al8,bl5)|0;mid=mid+Math.imul(al8,bh5)|0;mid=mid+Math.imul(ah8,bl5)|0;hi=hi+Math.imul(ah8,bh5)|0;lo=lo+Math.imul(al7,bl6)|0;mid=mid+Math.imul(al7,bh6)|0;mid=mid+Math.imul(ah7,bl6)|0;hi=hi+Math.imul(ah7,bh6)|0;lo=lo+Math.imul(al6,bl7)|0;mid=mid+Math.imul(al6,bh7)|0;mid=mid+Math.imul(ah6,bl7)|0;hi=hi+Math.imul(ah6,bh7)|0;lo=lo+Math.imul(al5,bl8)|0;mid=mid+Math.imul(al5,bh8)|0;mid=mid+Math.imul(ah5,bl8)|0;hi=hi+Math.imul(ah5,bh8)|0;lo=lo+Math.imul(al4,bl9)|0;mid=mid+Math.imul(al4,bh9)|0;mid=mid+Math.imul(ah4,bl9)|0;hi=hi+Math.imul(ah4,bh9)|0;var w13=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w13>>>26)|0;w13&=67108863;lo=Math.imul(al9,bl5);mid=Math.imul(al9,bh5);mid=mid+Math.imul(ah9,bl5)|0;hi=Math.imul(ah9,bh5);lo=lo+Math.imul(al8,bl6)|0;mid=mid+Math.imul(al8,bh6)|0;mid=mid+Math.imul(ah8,bl6)|0;hi=hi+Math.imul(ah8,bh6)|0;lo=lo+Math.imul(al7,bl7)|0;mid=mid+Math.imul(al7,bh7)|0;mid=mid+Math.imul(ah7,bl7)|0;hi=hi+Math.imul(ah7,bh7)|0;lo=lo+Math.imul(al6,bl8)|0;mid=mid+Math.imul(al6,bh8)|0;mid=mid+Math.imul(ah6,bl8)|0;hi=hi+Math.imul(ah6,bh8)|0;lo=lo+Math.imul(al5,bl9)|0;mid=mid+Math.imul(al5,bh9)|0;mid=mid+Math.imul(ah5,bl9)|0;hi=hi+Math.imul(ah5,bh9)|0;var w14=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w14>>>26)|0;w14&=67108863;lo=Math.imul(al9,bl6);mid=Math.imul(al9,bh6);mid=mid+Math.imul(ah9,bl6)|0;hi=Math.imul(ah9,bh6);lo=lo+Math.imul(al8,bl7)|0;mid=mid+Math.imul(al8,bh7)|0;mid=mid+Math.imul(ah8,bl7)|0;hi=hi+Math.imul(ah8,bh7)|0;lo=lo+Math.imul(al7,bl8)|0;mid=mid+Math.imul(al7,bh8)|0;mid=mid+Math.imul(ah7,bl8)|0;hi=hi+Math.imul(ah7,bh8)|0;lo=lo+Math.imul(al6,bl9)|0;mid=mid+Math.imul(al6,bh9)|0;mid=mid+Math.imul(ah6,bl9)|0;hi=hi+Math.imul(ah6,bh9)|0;var w15=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w15>>>26)|0;w15&=67108863;lo=Math.imul(al9,bl7);mid=Math.imul(al9,bh7);mid=mid+Math.imul(ah9,bl7)|0;hi=Math.imul(ah9,bh7);lo=lo+Math.imul(al8,bl8)|0;mid=mid+Math.imul(al8,bh8)|0;mid=mid+Math.imul(ah8,bl8)|0;hi=hi+Math.imul(ah8,bh8)|0;lo=lo+Math.imul(al7,bl9)|0;mid=mid+Math.imul(al7,bh9)|0;mid=mid+Math.imul(ah7,bl9)|0;hi=hi+Math.imul(ah7,bh9)|0;var w16=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w16>>>26)|0;w16&=67108863;lo=Math.imul(al9,bl8);mid=Math.imul(al9,bh8);mid=mid+Math.imul(ah9,bl8)|0;hi=Math.imul(ah9,bh8);lo=lo+Math.imul(al8,bl9)|0;mid=mid+Math.imul(al8,bh9)|0;mid=mid+Math.imul(ah8,bl9)|0;hi=hi+Math.imul(ah8,bh9)|0;var w17=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w17>>>26)|0;w17&=67108863;lo=Math.imul(al9,bl9);mid=Math.imul(al9,bh9);mid=mid+Math.imul(ah9,bl9)|0;hi=Math.imul(ah9,bh9);var w18=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w18>>>26)|0;w18&=67108863;o[0]=w0;o[1]=w1;o[2]=w2;o[3]=w3;o[4]=w4;o[5]=w5;o[6]=w6;o[7]=w7;o[8]=w8;o[9]=w9;o[10]=w10;o[11]=w11;o[12]=w12;o[13]=w13;o[14]=w14;o[15]=w15;o[16]=w16;o[17]=w17;o[18]=w18;if(c!==0){o[19]=c;out.length++}return out};if(!Math.imul){comb10MulTo=smallMulTo}function bigMulTo(self,num,out){out.negative=num.negative^self.negative;out.length=self.length+num.length;var carry=0;var hncarry=0;for(var k=0;k<out.length-1;k++){var ncarry=hncarry;hncarry=0;var rword=carry&67108863;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j;var a=self.words[i]|0;var b=num.words[j]|0;var r=a*b;var lo=r&67108863;ncarry=ncarry+(r/67108864|0)|0;lo=lo+rword|0;rword=lo&67108863;ncarry=ncarry+(lo>>>26)|0;hncarry+=ncarry>>>26;ncarry&=67108863}out.words[k]=rword;carry=ncarry;ncarry=hncarry}if(carry!==0){out.words[k]=carry}else{out.length--}return out.strip()}function jumboMulTo(self,num,out){var fftm=new FFTM;return fftm.mulp(self,num,out)}BN.prototype.mulTo=function mulTo(num,out){var res;var len=this.length+num.length;if(this.length===10&&num.length===10){res=comb10MulTo(this,num,out)}else if(len<63){res=smallMulTo(this,num,out)}else if(len<1024){res=bigMulTo(this,num,out)}else{res=jumboMulTo(this,num,out)}return res};function FFTM(x,y){this.x=x;this.y=y}FFTM.prototype.makeRBT=function makeRBT(N){var t=new Array(N);var l=BN.prototype._countBits(N)-1;for(var i=0;i<N;i++){t[i]=this.revBin(i,l,N)}return t};FFTM.prototype.revBin=function revBin(x,l,N){if(x===0||x===N-1)return x;var rb=0;for(var i=0;i<l;i++){rb|=(x&1)<<l-i-1;x>>=1}return rb};FFTM.prototype.permute=function permute(rbt,rws,iws,rtws,itws,N){for(var i=0;i<N;i++){rtws[i]=rws[rbt[i]];itws[i]=iws[rbt[i]]}};FFTM.prototype.transform=function transform(rws,iws,rtws,itws,N,rbt){this.permute(rbt,rws,iws,rtws,itws,N);for(var s=1;s<N;s<<=1){var l=s<<1;var rtwdf=Math.cos(2*Math.PI/l);var itwdf=Math.sin(2*Math.PI/l);for(var p=0;p<N;p+=l){var rtwdf_=rtwdf;var itwdf_=itwdf;for(var j=0;j<s;j++){var re=rtws[p+j];var ie=itws[p+j];var ro=rtws[p+j+s];var io=itws[p+j+s];var rx=rtwdf_*ro-itwdf_*io;io=rtwdf_*io+itwdf_*ro;ro=rx;rtws[p+j]=re+ro;itws[p+j]=ie+io;rtws[p+j+s]=re-ro;itws[p+j+s]=ie-io;if(j!==l){rx=rtwdf*rtwdf_-itwdf*itwdf_;itwdf_=rtwdf*itwdf_+itwdf*rtwdf_;rtwdf_=rx}}}}};FFTM.prototype.guessLen13b=function guessLen13b(n,m){var N=Math.max(m,n)|1;var odd=N&1;var i=0;for(N=N/2|0;N;N=N>>>1){i++}return 1<<i+1+odd};FFTM.prototype.conjugate=function conjugate(rws,iws,N){if(N<=1)return;for(var i=0;i<N/2;i++){var t=rws[i];rws[i]=rws[N-i-1];rws[N-i-1]=t;t=iws[i];iws[i]=-iws[N-i-1];iws[N-i-1]=-t}};FFTM.prototype.normalize13b=function normalize13b(ws,N){var carry=0;for(var i=0;i<N/2;i++){var w=Math.round(ws[2*i+1]/N)*8192+Math.round(ws[2*i]/N)+carry;ws[i]=w&67108863;if(w<67108864){carry=0}else{carry=w/67108864|0}}return ws};FFTM.prototype.convert13b=function convert13b(ws,len,rws,N){var carry=0;for(var i=0;i<len;i++){carry=carry+(ws[i]|0);rws[2*i]=carry&8191;carry=carry>>>13;rws[2*i+1]=carry&8191;carry=carry>>>13}for(i=2*len;i<N;++i){rws[i]=0}assert(carry===0);assert((carry&~8191)===0)};FFTM.prototype.stub=function stub(N){var ph=new Array(N);for(var i=0;i<N;i++){ph[i]=0}return ph};FFTM.prototype.mulp=function mulp(x,y,out){var N=2*this.guessLen13b(x.length,y.length);var rbt=this.makeRBT(N);var _=this.stub(N);var rws=new Array(N);var rwst=new Array(N);var iwst=new Array(N);var nrws=new Array(N);var nrwst=new Array(N);var niwst=new Array(N);var rmws=out.words;rmws.length=N;this.convert13b(x.words,x.length,rws,N);this.convert13b(y.words,y.length,nrws,N);this.transform(rws,_,rwst,iwst,N,rbt);this.transform(nrws,_,nrwst,niwst,N,rbt);for(var i=0;i<N;i++){var rx=rwst[i]*nrwst[i]-iwst[i]*niwst[i];iwst[i]=rwst[i]*niwst[i]+iwst[i]*nrwst[i];rwst[i]=rx}this.conjugate(rwst,iwst,N);this.transform(rwst,iwst,rmws,_,N,rbt);this.conjugate(rmws,_,N);this.normalize13b(rmws,N);out.negative=x.negative^y.negative;out.length=x.length+y.length;return out.strip()};BN.prototype.mul=function mul(num){var out=new BN(null);out.words=new Array(this.length+num.length);return this.mulTo(num,out)};BN.prototype.mulf=function mulf(num){var out=new BN(null);out.words=new Array(this.length+num.length);return jumboMulTo(this,num,out)};BN.prototype.imul=function imul(num){return this.clone().mulTo(num,this)};BN.prototype.imuln=function imuln(num){assert(typeof num===\"number\");assert(num<67108864);var carry=0;for(var i=0;i<this.length;i++){var w=(this.words[i]|0)*num;var lo=(w&67108863)+(carry&67108863);carry>>=26;carry+=w/67108864|0;carry+=lo>>>26;this.words[i]=lo&67108863}if(carry!==0){this.words[i]=carry;this.length++}return this};BN.prototype.muln=function muln(num){return this.clone().imuln(num)};BN.prototype.sqr=function sqr(){return this.mul(this)};BN.prototype.isqr=function isqr(){return this.imul(this.clone())};BN.prototype.pow=function pow(num){var w=toBitArray(num);if(w.length===0)return new BN(1);var res=this;for(var i=0;i<w.length;i++,res=res.sqr()){if(w[i]!==0)break}if(++i<w.length){for(var q=res.sqr();i<w.length;i++,q=q.sqr()){if(w[i]===0)continue;res=res.mul(q)}}return res};BN.prototype.iushln=function iushln(bits){assert(typeof bits===\"number\"&&bits>=0);var r=bits%26;var s=(bits-r)/26;var carryMask=67108863>>>26-r<<26-r;var i;if(r!==0){var carry=0;for(i=0;i<this.length;i++){var newCarry=this.words[i]&carryMask;var c=(this.words[i]|0)-newCarry<<r;this.words[i]=c|carry;carry=newCarry>>>26-r}if(carry){this.words[i]=carry;this.length++}}if(s!==0){for(i=this.length-1;i>=0;i--){this.words[i+s]=this.words[i]}for(i=0;i<s;i++){this.words[i]=0}this.length+=s}return this.strip()};BN.prototype.ishln=function ishln(bits){assert(this.negative===0);return this.iushln(bits)};BN.prototype.iushrn=function iushrn(bits,hint,extended){assert(typeof bits===\"number\"&&bits>=0);var h;if(hint){h=(hint-hint%26)/26}else{h=0}var r=bits%26;var s=Math.min((bits-r)/26,this.length);var mask=67108863^67108863>>>r<<r;var maskedWords=extended;h-=s;h=Math.max(0,h);if(maskedWords){for(var i=0;i<s;i++){maskedWords.words[i]=this.words[i]}maskedWords.length=s}if(s===0){}else if(this.length>s){this.length-=s;for(i=0;i<this.length;i++){this.words[i]=this.words[i+s]}}else{this.words[0]=0;this.length=1}var carry=0;for(i=this.length-1;i>=0&&(carry!==0||i>=h);i--){var word=this.words[i]|0;this.words[i]=carry<<26-r|word>>>r;carry=word&mask}if(maskedWords&&carry!==0){maskedWords.words[maskedWords.length++]=carry}if(this.length===0){this.words[0]=0;this.length=1}return this.strip()};BN.prototype.ishrn=function ishrn(bits,hint,extended){assert(this.negative===0);return this.iushrn(bits,hint,extended)};BN.prototype.shln=function shln(bits){return this.clone().ishln(bits)};BN.prototype.ushln=function ushln(bits){return this.clone().iushln(bits)};BN.prototype.shrn=function shrn(bits){return this.clone().ishrn(bits)};BN.prototype.ushrn=function ushrn(bits){return this.clone().iushrn(bits)};BN.prototype.testn=function testn(bit){assert(typeof bit===\"number\"&&bit>=0);var r=bit%26;var s=(bit-r)/26;var q=1<<r;if(this.length<=s)return false;var w=this.words[s];return!!(w&q)};BN.prototype.imaskn=function imaskn(bits){assert(typeof bits===\"number\"&&bits>=0);var r=bits%26;var s=(bits-r)/26;assert(this.negative===0,\"imaskn works only with positive numbers\");if(this.length<=s){return this}if(r!==0){s++}this.length=Math.min(s,this.length);if(r!==0){var mask=67108863^67108863>>>r<<r;this.words[this.length-1]&=mask}return this.strip()};BN.prototype.maskn=function maskn(bits){return this.clone().imaskn(bits)};BN.prototype.iaddn=function iaddn(num){assert(typeof num===\"number\");assert(num<67108864);if(num<0)return this.isubn(-num);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<num){this.words[0]=num-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(num);this.negative=1;return this}return this._iaddn(num)};BN.prototype._iaddn=function _iaddn(num){this.words[0]+=num;for(var i=0;i<this.length&&this.words[i]>=67108864;i++){this.words[i]-=67108864;if(i===this.length-1){this.words[i+1]=1}else{this.words[i+1]++}}this.length=Math.max(this.length,i+1);return this};BN.prototype.isubn=function isubn(num){assert(typeof num===\"number\");assert(num<67108864);if(num<0)return this.iaddn(-num);if(this.negative!==0){this.negative=0;this.iaddn(num);this.negative=1;return this}this.words[0]-=num;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var i=0;i<this.length&&this.words[i]<0;i++){this.words[i]+=67108864;this.words[i+1]-=1}}return this.strip()};BN.prototype.addn=function addn(num){return this.clone().iaddn(num)};BN.prototype.subn=function subn(num){return this.clone().isubn(num)};BN.prototype.iabs=function iabs(){this.negative=0;return this};BN.prototype.abs=function abs(){return this.clone().iabs()};BN.prototype._ishlnsubmul=function _ishlnsubmul(num,mul,shift){var len=num.length+shift;var i;this._expand(len);var w;var carry=0;for(i=0;i<num.length;i++){w=(this.words[i+shift]|0)+carry;var right=(num.words[i]|0)*mul;w-=right&67108863;carry=(w>>26)-(right/67108864|0);this.words[i+shift]=w&67108863}for(;i<this.length-shift;i++){w=(this.words[i+shift]|0)+carry;carry=w>>26;this.words[i+shift]=w&67108863}if(carry===0)return this.strip();assert(carry===-1);carry=0;for(i=0;i<this.length;i++){w=-(this.words[i]|0)+carry;carry=w>>26;this.words[i]=w&67108863}this.negative=1;return this.strip()};BN.prototype._wordDiv=function _wordDiv(num,mode){var shift=this.length-num.length;var a=this.clone();var b=num;var bhi=b.words[b.length-1]|0;var bhiBits=this._countBits(bhi);shift=26-bhiBits;if(shift!==0){b=b.ushln(shift);a.iushln(shift);bhi=b.words[b.length-1]|0}var m=a.length-b.length;var q;if(mode!==\"mod\"){q=new BN(null);q.length=m+1;q.words=new Array(q.length);for(var i=0;i<q.length;i++){q.words[i]=0}}var diff=a.clone()._ishlnsubmul(b,1,m);if(diff.negative===0){a=diff;if(q){q.words[m]=1}}for(var j=m-1;j>=0;j--){var qj=(a.words[b.length+j]|0)*67108864+(a.words[b.length+j-1]|0);qj=Math.min(qj/bhi|0,67108863);a._ishlnsubmul(b,qj,j);while(a.negative!==0){qj--;a.negative=0;a._ishlnsubmul(b,1,j);if(!a.isZero()){a.negative^=1}}if(q){q.words[j]=qj}}if(q){q.strip()}a.strip();if(mode!==\"div\"&&shift!==0){a.iushrn(shift)}return{div:q||null,mod:a}};BN.prototype.divmod=function divmod(num,mode,positive){assert(!num.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)}}var div,mod,res;if(this.negative!==0&&num.negative===0){res=this.neg().divmod(num,mode);if(mode!==\"mod\"){div=res.div.neg()}if(mode!==\"div\"){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.iadd(num)}}return{div:div,mod:mod}}if(this.negative===0&&num.negative!==0){res=this.divmod(num.neg(),mode);if(mode!==\"mod\"){div=res.div.neg()}return{div:div,mod:res.mod}}if((this.negative&num.negative)!==0){res=this.neg().divmod(num.neg(),mode);if(mode!==\"div\"){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.isub(num)}}return{div:res.div,mod:mod}}if(num.length>this.length||this.cmp(num)<0){return{div:new BN(0),mod:this}}if(num.length===1){if(mode===\"div\"){return{div:this.divn(num.words[0]),mod:null}}if(mode===\"mod\"){return{div:null,mod:new BN(this.modn(num.words[0]))}}return{div:this.divn(num.words[0]),mod:new BN(this.modn(num.words[0]))}}return this._wordDiv(num,mode)};BN.prototype.div=function div(num){return this.divmod(num,\"div\",false).div};BN.prototype.mod=function mod(num){return this.divmod(num,\"mod\",false).mod};BN.prototype.umod=function umod(num){return this.divmod(num,\"mod\",true).mod};BN.prototype.divRound=function divRound(num){var dm=this.divmod(num);if(dm.mod.isZero())return dm.div;var mod=dm.div.negative!==0?dm.mod.isub(num):dm.mod;var half=num.ushrn(1);var r2=num.andln(1);var cmp=mod.cmp(half);if(cmp<0||r2===1&&cmp===0)return dm.div;return dm.div.negative!==0?dm.div.isubn(1):dm.div.iaddn(1)};BN.prototype.modn=function modn(num){assert(num<=67108863);var p=(1<<26)%num;var acc=0;for(var i=this.length-1;i>=0;i--){acc=(p*acc+(this.words[i]|0))%num}return acc};BN.prototype.idivn=function idivn(num){assert(num<=67108863);var carry=0;for(var i=this.length-1;i>=0;i--){var w=(this.words[i]|0)+carry*67108864;this.words[i]=w/num|0;carry=w%num}return this.strip()};BN.prototype.divn=function divn(num){return this.clone().idivn(num)};BN.prototype.egcd=function egcd(p){assert(p.negative===0);assert(!p.isZero());var x=this;var y=p.clone();if(x.negative!==0){x=x.umod(p)}else{x=x.clone()}var A=new BN(1);var B=new BN(0);var C=new BN(0);var D=new BN(1);var g=0;while(x.isEven()&&y.isEven()){x.iushrn(1);y.iushrn(1);++g}var yp=y.clone();var xp=x.clone();while(!x.isZero()){for(var i=0,im=1;(x.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){x.iushrn(i);while(i-- >0){if(A.isOdd()||B.isOdd()){A.iadd(yp);B.isub(xp)}A.iushrn(1);B.iushrn(1)}}for(var j=0,jm=1;(y.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){y.iushrn(j);while(j-- >0){if(C.isOdd()||D.isOdd()){C.iadd(yp);D.isub(xp)}C.iushrn(1);D.iushrn(1)}}if(x.cmp(y)>=0){x.isub(y);A.isub(C);B.isub(D)}else{y.isub(x);C.isub(A);D.isub(B)}}return{a:C,b:D,gcd:y.iushln(g)}};BN.prototype._invmp=function _invmp(p){assert(p.negative===0);assert(!p.isZero());var a=this;var b=p.clone();if(a.negative!==0){a=a.umod(p)}else{a=a.clone()}var x1=new BN(1);var x2=new BN(0);var delta=b.clone();while(a.cmpn(1)>0&&b.cmpn(1)>0){for(var i=0,im=1;(a.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){a.iushrn(i);while(i-- >0){if(x1.isOdd()){x1.iadd(delta)}x1.iushrn(1)}}for(var j=0,jm=1;(b.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){b.iushrn(j);while(j-- >0){if(x2.isOdd()){x2.iadd(delta)}x2.iushrn(1)}}if(a.cmp(b)>=0){a.isub(b);x1.isub(x2)}else{b.isub(a);x2.isub(x1)}}var res;if(a.cmpn(1)===0){res=x1}else{res=x2}if(res.cmpn(0)<0){res.iadd(p)}return res};BN.prototype.gcd=function gcd(num){if(this.isZero())return num.abs();if(num.isZero())return this.abs();var a=this.clone();var b=num.clone();a.negative=0;b.negative=0;for(var shift=0;a.isEven()&&b.isEven();shift++){a.iushrn(1);b.iushrn(1)}do{while(a.isEven()){a.iushrn(1)}while(b.isEven()){b.iushrn(1)}var r=a.cmp(b);if(r<0){var t=a;a=b;b=t}else if(r===0||b.cmpn(1)===0){break}a.isub(b)}while(true);return b.iushln(shift)};BN.prototype.invm=function invm(num){return this.egcd(num).a.umod(num)};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN.prototype.andln=function andln(num){return this.words[0]&num};BN.prototype.bincn=function bincn(bit){assert(typeof bit===\"number\");var r=bit%26;var s=(bit-r)/26;var q=1<<r;if(this.length<=s){this._expand(s+1);this.words[s]|=q;return this}var carry=q;for(var i=s;carry!==0&&i<this.length;i++){var w=this.words[i]|0;w+=carry;carry=w>>>26;w&=67108863;this.words[i]=w}if(carry!==0){this.words[i]=carry;this.length++}return this};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN.prototype.cmpn=function cmpn(num){var negative=num<0;if(this.negative!==0&&!negative)return-1;if(this.negative===0&&negative)return 1;this.strip();var res;if(this.length>1){res=1}else{if(negative){num=-num}assert(num<=67108863,\"Number is too big\");var w=this.words[0]|0;res=w===num?0:w<num?-1:1}if(this.negative!==0)return-res|0;return res};BN.prototype.cmp=function cmp(num){if(this.negative!==0&&num.negative===0)return-1;if(this.negative===0&&num.negative!==0)return 1;var res=this.ucmp(num);if(this.negative!==0)return-res|0;return res};BN.prototype.ucmp=function ucmp(num){if(this.length>num.length)return 1;if(this.length<num.length)return-1;var res=0;for(var i=this.length-1;i>=0;i--){var a=this.words[i]|0;var b=num.words[i]|0;if(a===b)continue;if(a<b){res=-1}else if(a>b){res=1}break}return res};BN.prototype.gtn=function gtn(num){return this.cmpn(num)===1};BN.prototype.gt=function gt(num){return this.cmp(num)===1};BN.prototype.gten=function gten(num){return this.cmpn(num)>=0};BN.prototype.gte=function gte(num){return this.cmp(num)>=0};BN.prototype.ltn=function ltn(num){return this.cmpn(num)===-1};BN.prototype.lt=function lt(num){return this.cmp(num)===-1};BN.prototype.lten=function lten(num){return this.cmpn(num)<=0};BN.prototype.lte=function lte(num){return this.cmp(num)<=0};BN.prototype.eqn=function eqn(num){return this.cmpn(num)===0};BN.prototype.eq=function eq(num){return this.cmp(num)===0};BN.red=function red(num){return new Red(num)};BN.prototype.toRed=function toRed(ctx){assert(!this.red,\"Already a number in reduction context\");assert(this.negative===0,\"red works only with positives\");return ctx.convertTo(this)._forceRed(ctx)};BN.prototype.fromRed=function fromRed(){assert(this.red,\"fromRed works only with numbers in reduction context\");return this.red.convertFrom(this)};BN.prototype._forceRed=function _forceRed(ctx){this.red=ctx;return this};BN.prototype.forceRed=function forceRed(ctx){assert(!this.red,\"Already a number in reduction context\");return this._forceRed(ctx)};BN.prototype.redAdd=function redAdd(num){assert(this.red,\"redAdd works only with red numbers\");return this.red.add(this,num)};BN.prototype.redIAdd=function redIAdd(num){assert(this.red,\"redIAdd works only with red numbers\");return this.red.iadd(this,num)};BN.prototype.redSub=function redSub(num){assert(this.red,\"redSub works only with red numbers\");return this.red.sub(this,num)};BN.prototype.redISub=function redISub(num){assert(this.red,\"redISub works only with red numbers\");return this.red.isub(this,num)};BN.prototype.redShl=function redShl(num){assert(this.red,\"redShl works only with red numbers\");return this.red.shl(this,num)};BN.prototype.redMul=function redMul(num){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,num);return this.red.mul(this,num)};BN.prototype.redIMul=function redIMul(num){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,num);return this.red.imul(this,num)};BN.prototype.redSqr=function redSqr(){assert(this.red,\"redSqr works only with red numbers\");this.red._verify1(this);return this.red.sqr(this)};BN.prototype.redISqr=function redISqr(){assert(this.red,\"redISqr works only with red numbers\");this.red._verify1(this);return this.red.isqr(this)};BN.prototype.redSqrt=function redSqrt(){assert(this.red,\"redSqrt works only with red numbers\");this.red._verify1(this);return this.red.sqrt(this)};BN.prototype.redInvm=function redInvm(){assert(this.red,\"redInvm works only with red numbers\");this.red._verify1(this);return this.red.invm(this)};BN.prototype.redNeg=function redNeg(){assert(this.red,\"redNeg works only with red numbers\");this.red._verify1(this);return this.red.neg(this)};BN.prototype.redPow=function redPow(num){assert(this.red&&!num.red,\"redPow(normalNum)\");this.red._verify1(this);return this.red.pow(this,num)};var primes={k256:null,p224:null,p192:null,p25519:null};function MPrime(name,p){this.name=name;this.p=new BN(p,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var tmp=new BN(null);tmp.words=new Array(Math.ceil(this.n/13));return tmp};MPrime.prototype.ireduce=function ireduce(num){var r=num;var rlen;do{this.split(r,this.tmp);r=this.imulK(r);r=r.iadd(this.tmp);rlen=r.bitLength()}while(rlen>this.n);var cmp=rlen<this.n?-1:r.ucmp(this.p);if(cmp===0){r.words[0]=0;r.length=1}else if(cmp>0){r.isub(this.p)}else{if(r.strip!==undefined){r.strip()}else{r._strip()}}return r};MPrime.prototype.split=function split(input,out){input.iushrn(this.n,0,out)};MPrime.prototype.imulK=function imulK(num){return num.imul(this.k)};function K256(){MPrime.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}inherits(K256,MPrime);K256.prototype.split=function split(input,output){var mask=4194303;var outLen=Math.min(input.length,9);for(var i=0;i<outLen;i++){output.words[i]=input.words[i]}output.length=outLen;if(input.length<=9){input.words[0]=0;input.length=1;return}var prev=input.words[9];output.words[output.length++]=prev&mask;for(i=10;i<input.length;i++){var next=input.words[i]|0;input.words[i-10]=(next&mask)<<4|prev>>>22;prev=next}prev>>>=22;input.words[i-10]=prev;if(prev===0&&input.length>10){input.length-=10}else{input.length-=9}};K256.prototype.imulK=function imulK(num){num.words[num.length]=0;num.words[num.length+1]=0;num.length+=2;var lo=0;for(var i=0;i<num.length;i++){var w=num.words[i]|0;lo+=w*977;num.words[i]=lo&67108863;lo=w*64+(lo/67108864|0)}if(num.words[num.length-1]===0){num.length--;if(num.words[num.length-1]===0){num.length--}}return num};function P224(){MPrime.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}inherits(P224,MPrime);function P192(){MPrime.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}inherits(P192,MPrime);function P25519(){MPrime.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(num){var carry=0;for(var i=0;i<num.length;i++){var hi=(num.words[i]|0)*19+carry;var lo=hi&67108863;hi>>>=26;num.words[i]=lo;carry=hi}if(carry!==0){num.words[num.length++]=carry}return num};BN._prime=function prime(name){if(primes[name])return primes[name];var prime;if(name===\"k256\"){prime=new K256}else if(name===\"p224\"){prime=new P224}else if(name===\"p192\"){prime=new P192}else if(name===\"p25519\"){prime=new P25519}else{throw new Error(\"Unknown prime \"+name)}primes[name]=prime;return prime};function Red(m){if(typeof m===\"string\"){var prime=BN._prime(m);this.m=prime.p;this.prime=prime}else{assert(m.gtn(1),\"modulus must be greater than 1\");this.m=m;this.prime=null}}Red.prototype._verify1=function _verify1(a){assert(a.negative===0,\"red works only with positives\");assert(a.red,\"red works only with red numbers\")};Red.prototype._verify2=function _verify2(a,b){assert((a.negative|b.negative)===0,\"red works only with positives\");assert(a.red&&a.red===b.red,\"red works only with red numbers\")};Red.prototype.imod=function imod(a){if(this.prime)return this.prime.ireduce(a)._forceRed(this);return a.umod(this.m)._forceRed(this)};Red.prototype.neg=function neg(a){if(a.isZero()){return a.clone()}return this.m.sub(a)._forceRed(this)};Red.prototype.add=function add(a,b){this._verify2(a,b);var res=a.add(b);if(res.cmp(this.m)>=0){res.isub(this.m)}return res._forceRed(this)};Red.prototype.iadd=function iadd(a,b){this._verify2(a,b);var res=a.iadd(b);if(res.cmp(this.m)>=0){res.isub(this.m)}return res};Red.prototype.sub=function sub(a,b){this._verify2(a,b);var res=a.sub(b);if(res.cmpn(0)<0){res.iadd(this.m)}return res._forceRed(this)};Red.prototype.isub=function isub(a,b){this._verify2(a,b);var res=a.isub(b);if(res.cmpn(0)<0){res.iadd(this.m)}return res};Red.prototype.shl=function shl(a,num){this._verify1(a);return this.imod(a.ushln(num))};Red.prototype.imul=function imul(a,b){this._verify2(a,b);return this.imod(a.imul(b))};Red.prototype.mul=function mul(a,b){this._verify2(a,b);return this.imod(a.mul(b))};Red.prototype.isqr=function isqr(a){return this.imul(a,a.clone())};Red.prototype.sqr=function sqr(a){return this.mul(a,a)};Red.prototype.sqrt=function sqrt(a){if(a.isZero())return a.clone();var mod3=this.m.andln(3);assert(mod3%2===1);if(mod3===3){var pow=this.m.add(new BN(1)).iushrn(2);return this.pow(a,pow)}var q=this.m.subn(1);var s=0;while(!q.isZero()&&q.andln(1)===0){s++;q.iushrn(1)}assert(!q.isZero());var one=new BN(1).toRed(this);var nOne=one.redNeg();var lpow=this.m.subn(1).iushrn(1);var z=this.m.bitLength();z=new BN(2*z*z).toRed(this);while(this.pow(z,lpow).cmp(nOne)!==0){z.redIAdd(nOne)}var c=this.pow(z,q);var r=this.pow(a,q.addn(1).iushrn(1));var t=this.pow(a,q);var m=s;while(t.cmp(one)!==0){var tmp=t;for(var i=0;tmp.cmp(one)!==0;i++){tmp=tmp.redSqr()}assert(i<m);var b=this.pow(c,new BN(1).iushln(m-i-1));r=r.redMul(b);c=b.redSqr();t=t.redMul(c);m=i}return r};Red.prototype.invm=function invm(a){var inv=a._invmp(this.m);if(inv.negative!==0){inv.negative=0;return this.imod(inv).redNeg()}else{return this.imod(inv)}};Red.prototype.pow=function pow(a,num){if(num.isZero())return new BN(1).toRed(this);if(num.cmpn(1)===0)return a.clone();var windowSize=4;var wnd=new Array(1<<windowSize);wnd[0]=new BN(1).toRed(this);wnd[1]=a;for(var i=2;i<wnd.length;i++){wnd[i]=this.mul(wnd[i-1],a)}var res=wnd[0];var current=0;var currentLen=0;var start=num.bitLength()%26;if(start===0){start=26}for(i=num.length-1;i>=0;i--){var word=num.words[i];for(var j=start-1;j>=0;j--){var bit=word>>j&1;if(res!==wnd[0]){res=this.sqr(res)}if(bit===0&&current===0){currentLen=0;continue}current<<=1;current|=bit;currentLen++;if(currentLen!==windowSize&&(i!==0||j!==0))continue;res=this.mul(res,wnd[current]);currentLen=0;current=0}start=26}return res};Red.prototype.convertTo=function convertTo(num){var r=num.umod(this.m);return r===num?r.clone():r};Red.prototype.convertFrom=function convertFrom(num){var res=num.clone();res.red=null;return res};BN.mont=function mont(num){return new Mont(num)};function Mont(m){Red.call(this,m);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(num){return this.imod(num.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(num){var r=this.imod(num.mul(this.rinv));r.red=null;return r};Mont.prototype.imul=function imul(a,b){if(a.isZero()||b.isZero()){a.words[0]=0;a.length=1;return a}var t=a.imul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m)}else if(u.cmpn(0)<0){res=u.iadd(this.m)}return res._forceRed(this)};Mont.prototype.mul=function mul(a,b){if(a.isZero()||b.isZero())return new BN(0)._forceRed(this);var t=a.mul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m)}else if(u.cmpn(0)<0){res=u.iadd(this.m)}return res._forceRed(this)};Mont.prototype.invm=function invm(a){var res=this.imod(a._invmp(this.m).mul(this.r2));return res._forceRed(this)}})(\"object\"===\"undefined\"||module,commonjsGlobal)});const version=\"logger/5.1.0\";\"use strict\";let _permanentCensorErrors=false;let _censorErrors=false;const LogLevels={debug:1,default:2,info:2,warning:3,error:4,off:5};let _logLevel=LogLevels[\"default\"];let _globalLogger=null;function _checkNormalize(){try{const missing=[];[\"NFD\",\"NFC\",\"NFKD\",\"NFKC\"].forEach(form=>{try{if(\"test\".normalize(form)!==\"test\"){throw new Error(\"bad normalize\")}}catch(error){missing.push(form)}});if(missing.length){throw new Error(\"missing \"+missing.join(\", \"))}if(String.fromCharCode(233).normalize(\"NFD\")!==String.fromCharCode(101,769)){throw new Error(\"broken implementation\")}}catch(error){return error.message}return null}const _normalizeError=_checkNormalize();var LogLevel;(function(LogLevel){LogLevel[\"DEBUG\"]=\"DEBUG\";LogLevel[\"INFO\"]=\"INFO\";LogLevel[\"WARNING\"]=\"WARNING\";LogLevel[\"ERROR\"]=\"ERROR\";LogLevel[\"OFF\"]=\"OFF\"})(LogLevel||(LogLevel={}));var ErrorCode;(function(ErrorCode){ErrorCode[\"UNKNOWN_ERROR\"]=\"UNKNOWN_ERROR\";ErrorCode[\"NOT_IMPLEMENTED\"]=\"NOT_IMPLEMENTED\";ErrorCode[\"UNSUPPORTED_OPERATION\"]=\"UNSUPPORTED_OPERATION\";ErrorCode[\"NETWORK_ERROR\"]=\"NETWORK_ERROR\";ErrorCode[\"SERVER_ERROR\"]=\"SERVER_ERROR\";ErrorCode[\"TIMEOUT\"]=\"TIMEOUT\";ErrorCode[\"BUFFER_OVERRUN\"]=\"BUFFER_OVERRUN\";ErrorCode[\"NUMERIC_FAULT\"]=\"NUMERIC_FAULT\";ErrorCode[\"MISSING_NEW\"]=\"MISSING_NEW\";ErrorCode[\"INVALID_ARGUMENT\"]=\"INVALID_ARGUMENT\";ErrorCode[\"MISSING_ARGUMENT\"]=\"MISSING_ARGUMENT\";ErrorCode[\"UNEXPECTED_ARGUMENT\"]=\"UNEXPECTED_ARGUMENT\";ErrorCode[\"CALL_EXCEPTION\"]=\"CALL_EXCEPTION\";ErrorCode[\"INSUFFICIENT_FUNDS\"]=\"INSUFFICIENT_FUNDS\";ErrorCode[\"NONCE_EXPIRED\"]=\"NONCE_EXPIRED\";ErrorCode[\"REPLACEMENT_UNDERPRICED\"]=\"REPLACEMENT_UNDERPRICED\";ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"]=\"UNPREDICTABLE_GAS_LIMIT\"})(ErrorCode||(ErrorCode={}));class Logger{constructor(version){Object.defineProperty(this,\"version\",{enumerable:true,value:version,writable:false})}_log(logLevel,args){const level=logLevel.toLowerCase();if(LogLevels[level]==null){this.throwArgumentError(\"invalid log level name\",\"logLevel\",logLevel)}if(_logLevel>LogLevels[level]){return}console.log.apply(console,args)}debug(...args){this._log(Logger.levels.DEBUG,args)}info(...args){this._log(Logger.levels.INFO,args)}warn(...args){this._log(Logger.levels.WARNING,args)}makeError(message,code,params){if(_censorErrors){return this.makeError(\"censored error\",code,{})}if(!code){code=Logger.errors.UNKNOWN_ERROR}if(!params){params={}}const messageDetails=[];Object.keys(params).forEach(key=>{try{messageDetails.push(key+\"=\"+JSON.stringify(params[key]))}catch(error){messageDetails.push(key+\"=\"+JSON.stringify(params[key].toString()))}});messageDetails.push(`code=${code}`);messageDetails.push(`version=${this.version}`);const reason=message;if(messageDetails.length){message+=\" (\"+messageDetails.join(\", \")+\")\"}const error=new Error(message);error.reason=reason;error.code=code;Object.keys(params).forEach(function(key){error[key]=params[key]});return error}throwError(message,code,params){throw this.makeError(message,code,params)}throwArgumentError(message,name,value){return this.throwError(message,Logger.errors.INVALID_ARGUMENT,{argument:name,value:value})}assert(condition,message,code,params){if(!!condition){return}this.throwError(message,code,params)}assertArgument(condition,message,name,value){if(!!condition){return}this.throwArgumentError(message,name,value)}checkNormalize(message){if(message==null){message=\"platform missing String.prototype.normalize\"}if(_normalizeError){this.throwError(\"platform missing String.prototype.normalize\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"String.prototype.normalize\",form:_normalizeError})}}checkSafeUint53(value,message){if(typeof value!==\"number\"){return}if(message==null){message=\"value not safe\"}if(value<0||value>=9007199254740991){this.throwError(message,Logger.errors.NUMERIC_FAULT,{operation:\"checkSafeInteger\",fault:\"out-of-safe-range\",value:value})}if(value%1){this.throwError(message,Logger.errors.NUMERIC_FAULT,{operation:\"checkSafeInteger\",fault:\"non-integer\",value:value})}}checkArgumentCount(count,expectedCount,message){if(message){message=\": \"+message}else{message=\"\"}if(count<expectedCount){this.throwError(\"missing argument\"+message,Logger.errors.MISSING_ARGUMENT,{count:count,expectedCount:expectedCount})}if(count>expectedCount){this.throwError(\"too many arguments\"+message,Logger.errors.UNEXPECTED_ARGUMENT,{count:count,expectedCount:expectedCount})}}checkNew(target,kind){if(target===Object||target==null){this.throwError(\"missing new\",Logger.errors.MISSING_NEW,{name:kind.name})}}checkAbstract(target,kind){if(target===kind){this.throwError(\"cannot instantiate abstract class \"+JSON.stringify(kind.name)+\" directly; use a sub-class\",Logger.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:\"new\"})}else if(target===Object||target==null){this.throwError(\"missing new\",Logger.errors.MISSING_NEW,{name:kind.name})}}static globalLogger(){if(!_globalLogger){_globalLogger=new Logger(version)}return _globalLogger}static setCensorship(censorship,permanent){if(!censorship&&permanent){this.globalLogger().throwError(\"cannot permanently disable censorship\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"setCensorship\"})}if(_permanentCensorErrors){if(!censorship){return}this.globalLogger().throwError(\"error censorship permanent\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"setCensorship\"})}_censorErrors=!!censorship;_permanentCensorErrors=!!permanent}static setLogLevel(logLevel){const level=LogLevels[logLevel.toLowerCase()];if(level==null){Logger.globalLogger().warn(\"invalid log level - \"+logLevel);return}_logLevel=level}static from(version){return new Logger(version)}}Logger.errors=ErrorCode;Logger.levels=LogLevel;const version$1=\"bytes/5.1.0\";\"use strict\";const logger=new Logger(version$1);function isHexable(value){return!!value.toHexString}function addSlice(array){if(array.slice){return array}array.slice=function(){const args=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(array,args)))};return array}function isBytesLike(value){return isHexString(value)&&!(value.length%2)||isBytes(value)}function isBytes(value){if(value==null){return false}if(value.constructor===Uint8Array){return true}if(typeof value===\"string\"){return false}if(value.length==null){return false}for(let i=0;i<value.length;i++){const v=value[i];if(typeof v!==\"number\"||v<0||v>=256||v%1){return false}}return true}function arrayify(value,options){if(!options){options={}}if(typeof value===\"number\"){logger.checkSafeUint53(value,\"invalid arrayify value\");const result=[];while(value){result.unshift(value&255);value=parseInt(String(value/256))}if(result.length===0){result.push(0)}return addSlice(new Uint8Array(result))}if(options.allowMissingPrefix&&typeof value===\"string\"&&value.substring(0,2)!==\"0x\"){value=\"0x\"+value}if(isHexable(value)){value=value.toHexString()}if(isHexString(value)){let hex=value.substring(2);if(hex.length%2){if(options.hexPad===\"left\"){hex=\"0x0\"+hex.substring(2)}else if(options.hexPad===\"right\"){hex+=\"0\"}else{logger.throwArgumentError(\"hex data is odd-length\",\"value\",value)}}const result=[];for(let i=0;i<hex.length;i+=2){result.push(parseInt(hex.substring(i,i+2),16))}return addSlice(new Uint8Array(result))}if(isBytes(value)){return addSlice(new Uint8Array(value))}return logger.throwArgumentError(\"invalid arrayify value\",\"value\",value)}function concat(items){const objects=items.map(item=>arrayify(item));const length=objects.reduce((accum,item)=>accum+item.length,0);const result=new Uint8Array(length);objects.reduce((offset,object)=>{result.set(object,offset);return offset+object.length},0);return addSlice(result)}function stripZeros(value){let result=arrayify(value);if(result.length===0){return result}let start=0;while(start<result.length&&result[start]===0){start++}if(start){result=result.slice(start)}return result}function zeroPad(value,length){value=arrayify(value);if(value.length>length){logger.throwArgumentError(\"value out of range\",\"value\",arguments[0])}const result=new Uint8Array(length);result.set(value,length-value.length);return addSlice(result)}function isHexString(value,length){if(typeof value!==\"string\"||!value.match(/^0x[0-9A-Fa-f]*$/)){return false}if(length&&value.length!==2+2*length){return false}return true}const HexCharacters=\"0123456789abcdef\";function hexlify(value,options){if(!options){options={}}if(typeof value===\"number\"){logger.checkSafeUint53(value,\"invalid hexlify value\");let hex=\"\";while(value){hex=HexCharacters[value&15]+hex;value=Math.floor(value/16)}if(hex.length){if(hex.length%2){hex=\"0\"+hex}return\"0x\"+hex}return\"0x00\"}if(options.allowMissingPrefix&&typeof value===\"string\"&&value.substring(0,2)!==\"0x\"){value=\"0x\"+value}if(isHexable(value)){return value.toHexString()}if(isHexString(value)){if(value.length%2){if(options.hexPad===\"left\"){value=\"0x0\"+value.substring(2)}else if(options.hexPad===\"right\"){value+=\"0\"}else{logger.throwArgumentError(\"hex data is odd-length\",\"value\",value)}}return value.toLowerCase()}if(isBytes(value)){let result=\"0x\";for(let i=0;i<value.length;i++){let v=value[i];result+=HexCharacters[(v&240)>>4]+HexCharacters[v&15]}return result}return logger.throwArgumentError(\"invalid hexlify value\",\"value\",value)}function hexDataLength(data){if(typeof data!==\"string\"){data=hexlify(data)}else if(!isHexString(data)||data.length%2){return null}return(data.length-2)/2}function hexDataSlice(data,offset,endOffset){if(typeof data!==\"string\"){data=hexlify(data)}else if(!isHexString(data)||data.length%2){logger.throwArgumentError(\"invalid hexData\",\"value\",data)}offset=2+2*offset;if(endOffset!=null){return\"0x\"+data.substring(offset,2+2*endOffset)}return\"0x\"+data.substring(offset)}function hexConcat(items){let result=\"0x\";items.forEach(item=>{result+=hexlify(item).substring(2)});return result}function hexValue(value){const trimmed=hexStripZeros(hexlify(value,{hexPad:\"left\"}));if(trimmed===\"0x\"){return\"0x0\"}return trimmed}function hexStripZeros(value){if(typeof value!==\"string\"){value=hexlify(value)}if(!isHexString(value)){logger.throwArgumentError(\"invalid hex string\",\"value\",value)}value=value.substring(2);let offset=0;while(offset<value.length&&value[offset]===\"0\"){offset++}return\"0x\"+value.substring(offset)}function hexZeroPad(value,length){if(typeof value!==\"string\"){value=hexlify(value)}else if(!isHexString(value)){logger.throwArgumentError(\"invalid hex string\",\"value\",value)}if(value.length>2*length+2){logger.throwArgumentError(\"value out of range\",\"value\",arguments[1])}while(value.length<2*length+2){value=\"0x0\"+value.substring(2)}return value}function splitSignature(signature){const result={r:\"0x\",s:\"0x\",_vs:\"0x\",recoveryParam:0,v:0};if(isBytesLike(signature)){const bytes=arrayify(signature);if(bytes.length!==65){logger.throwArgumentError(\"invalid signature string; must be 65 bytes\",\"signature\",signature)}result.r=hexlify(bytes.slice(0,32));result.s=hexlify(bytes.slice(32,64));result.v=bytes[64];if(result.v<27){if(result.v===0||result.v===1){result.v+=27}else{logger.throwArgumentError(\"signature invalid v byte\",\"signature\",signature)}}result.recoveryParam=1-result.v%2;if(result.recoveryParam){bytes[32]|=128}result._vs=hexlify(bytes.slice(32,64))}else{result.r=signature.r;result.s=signature.s;result.v=signature.v;result.recoveryParam=signature.recoveryParam;result._vs=signature._vs;if(result._vs!=null){const vs=zeroPad(arrayify(result._vs),32);result._vs=hexlify(vs);const recoveryParam=vs[0]>=128?1:0;if(result.recoveryParam==null){result.recoveryParam=recoveryParam}else if(result.recoveryParam!==recoveryParam){logger.throwArgumentError(\"signature recoveryParam mismatch _vs\",\"signature\",signature)}vs[0]&=127;const s=hexlify(vs);if(result.s==null){result.s=s}else if(result.s!==s){logger.throwArgumentError(\"signature v mismatch _vs\",\"signature\",signature)}}if(result.recoveryParam==null){if(result.v==null){logger.throwArgumentError(\"signature missing v and recoveryParam\",\"signature\",signature)}else if(result.v===0||result.v===1){result.recoveryParam=result.v}else{result.recoveryParam=1-result.v%2}}else{if(result.v==null){result.v=27+result.recoveryParam}else if(result.recoveryParam!==1-result.v%2){logger.throwArgumentError(\"signature recoveryParam mismatch v\",\"signature\",signature)}}if(result.r==null||!isHexString(result.r)){logger.throwArgumentError(\"signature missing or invalid r\",\"signature\",signature)}else{result.r=hexZeroPad(result.r,32)}if(result.s==null||!isHexString(result.s)){logger.throwArgumentError(\"signature missing or invalid s\",\"signature\",signature)}else{result.s=hexZeroPad(result.s,32)}const vs=arrayify(result.s);if(vs[0]>=128){logger.throwArgumentError(\"signature s out of range\",\"signature\",signature)}if(result.recoveryParam){vs[0]|=128}const _vs=hexlify(vs);if(result._vs){if(!isHexString(result._vs)){logger.throwArgumentError(\"signature invalid _vs\",\"signature\",signature)}result._vs=hexZeroPad(result._vs,32)}if(result._vs==null){result._vs=_vs}else if(result._vs!==_vs){logger.throwArgumentError(\"signature _vs mismatch v and s\",\"signature\",signature)}}return result}function joinSignature(signature){signature=splitSignature(signature);return hexlify(concat([signature.r,signature.s,signature.recoveryParam?\"0x1c\":\"0x1b\"]))}const version$2=\"bignumber/5.1.1\";\"use strict\";var BN=bn.BN;const logger$1=new Logger(version$2);const _constructorGuard={};const MAX_SAFE=9007199254740991;function isBigNumberish(value){return value!=null&&(BigNumber.isBigNumber(value)||typeof value===\"number\"&&value%1===0||typeof value===\"string\"&&!!value.match(/^-?[0-9]+$/)||isHexString(value)||typeof value===\"bigint\"||isBytes(value))}let _warnedToStringRadix=false;class BigNumber{constructor(constructorGuard,hex){logger$1.checkNew(new.target,BigNumber);if(constructorGuard!==_constructorGuard){logger$1.throwError(\"cannot call constructor directly; use BigNumber.from\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"new (BigNumber)\"})}this._hex=hex;this._isBigNumber=true;Object.freeze(this)}fromTwos(value){return toBigNumber(toBN(this).fromTwos(value))}toTwos(value){return toBigNumber(toBN(this).toTwos(value))}abs(){if(this._hex[0]===\"-\"){return BigNumber.from(this._hex.substring(1))}return this}add(other){return toBigNumber(toBN(this).add(toBN(other)))}sub(other){return toBigNumber(toBN(this).sub(toBN(other)))}div(other){const o=BigNumber.from(other);if(o.isZero()){throwFault(\"division by zero\",\"div\")}return toBigNumber(toBN(this).div(toBN(other)))}mul(other){return toBigNumber(toBN(this).mul(toBN(other)))}mod(other){const value=toBN(other);if(value.isNeg()){throwFault(\"cannot modulo negative values\",\"mod\")}return toBigNumber(toBN(this).umod(value))}pow(other){const value=toBN(other);if(value.isNeg()){throwFault(\"cannot raise to negative values\",\"pow\")}return toBigNumber(toBN(this).pow(value))}and(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault(\"cannot 'and' negative values\",\"and\")}return toBigNumber(toBN(this).and(value))}or(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault(\"cannot 'or' negative values\",\"or\")}return toBigNumber(toBN(this).or(value))}xor(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault(\"cannot 'xor' negative values\",\"xor\")}return toBigNumber(toBN(this).xor(value))}mask(value){if(this.isNegative()||value<0){throwFault(\"cannot mask negative values\",\"mask\")}return toBigNumber(toBN(this).maskn(value))}shl(value){if(this.isNegative()||value<0){throwFault(\"cannot shift negative values\",\"shl\")}return toBigNumber(toBN(this).shln(value))}shr(value){if(this.isNegative()||value<0){throwFault(\"cannot shift negative values\",\"shr\")}return toBigNumber(toBN(this).shrn(value))}eq(other){return toBN(this).eq(toBN(other))}lt(other){return toBN(this).lt(toBN(other))}lte(other){return toBN(this).lte(toBN(other))}gt(other){return toBN(this).gt(toBN(other))}gte(other){return toBN(this).gte(toBN(other))}isNegative(){return this._hex[0]===\"-\"}isZero(){return toBN(this).isZero()}toNumber(){try{return toBN(this).toNumber()}catch(error){throwFault(\"overflow\",\"toNumber\",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(e){}return logger$1.throwError(\"this platform does not support BigInt\",Logger.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){if(arguments.length>0){if(arguments[0]===10){if(!_warnedToStringRadix){_warnedToStringRadix=true;logger$1.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\")}}else if(arguments[0]===16){logger$1.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\",Logger.errors.UNEXPECTED_ARGUMENT,{})}else{logger$1.throwError(\"BigNumber.toString does not accept parameters\",Logger.errors.UNEXPECTED_ARGUMENT,{})}}return toBN(this).toString(10)}toHexString(){return this._hex}toJSON(key){return{type:\"BigNumber\",hex:this.toHexString()}}static from(value){if(value instanceof BigNumber){return value}if(typeof value===\"string\"){if(value.match(/^-?0x[0-9a-f]+$/i)){return new BigNumber(_constructorGuard,toHex(value))}if(value.match(/^-?[0-9]+$/)){return new BigNumber(_constructorGuard,toHex(new BN(value)))}return logger$1.throwArgumentError(\"invalid BigNumber string\",\"value\",value)}if(typeof value===\"number\"){if(value%1){throwFault(\"underflow\",\"BigNumber.from\",value)}if(value>=MAX_SAFE||value<=-MAX_SAFE){throwFault(\"overflow\",\"BigNumber.from\",value)}return BigNumber.from(String(value))}const anyValue=value;if(typeof anyValue===\"bigint\"){return BigNumber.from(anyValue.toString())}if(isBytes(anyValue)){return BigNumber.from(hexlify(anyValue))}if(anyValue){if(anyValue.toHexString){const hex=anyValue.toHexString();if(typeof hex===\"string\"){return BigNumber.from(hex)}}else{let hex=anyValue._hex;if(hex==null&&anyValue.type===\"BigNumber\"){hex=anyValue.hex}if(typeof hex===\"string\"){if(isHexString(hex)||hex[0]===\"-\"&&isHexString(hex.substring(1))){return BigNumber.from(hex)}}}}return logger$1.throwArgumentError(\"invalid BigNumber value\",\"value\",value)}static isBigNumber(value){return!!(value&&value._isBigNumber)}}function toHex(value){if(typeof value!==\"string\"){return toHex(value.toString(16))}if(value[0]===\"-\"){value=value.substring(1);if(value[0]===\"-\"){logger$1.throwArgumentError(\"invalid hex\",\"value\",value)}value=toHex(value);if(value===\"0x00\"){return value}return\"-\"+value}if(value.substring(0,2)!==\"0x\"){value=\"0x\"+value}if(value===\"0x\"){return\"0x00\"}if(value.length%2){value=\"0x0\"+value.substring(2)}while(value.length>4&&value.substring(0,4)===\"0x00\"){value=\"0x\"+value.substring(4)}return value}function toBigNumber(value){return BigNumber.from(toHex(value))}function toBN(value){const hex=BigNumber.from(value).toHexString();if(hex[0]===\"-\"){return new BN(\"-\"+hex.substring(3),16)}return new BN(hex.substring(2),16)}function throwFault(fault,operation,value){const params={fault:fault,operation:operation};if(value!=null){params.value=value}return logger$1.throwError(fault,Logger.errors.NUMERIC_FAULT,params)}function _base36To16(value){return new BN(value,36).toString(16)}function _base16To36(value){return new BN(value,16).toString(36)}\"use strict\";const logger$2=new Logger(version$2);const _constructorGuard$1={};const Zero=BigNumber.from(0);const NegativeOne=BigNumber.from(-1);function throwFault$1(message,fault,operation,value){const params={fault:fault,operation:operation};if(value!==undefined){params.value=value}return logger$2.throwError(message,Logger.errors.NUMERIC_FAULT,params)}let zeros=\"0\";while(zeros.length<256){zeros+=zeros}function getMultiplier(decimals){if(typeof decimals!==\"number\"){try{decimals=BigNumber.from(decimals).toNumber()}catch(e){}}if(typeof decimals===\"number\"&&decimals>=0&&decimals<=256&&!(decimals%1)){return\"1\"+zeros.substring(0,decimals)}return logger$2.throwArgumentError(\"invalid decimal size\",\"decimals\",decimals)}function formatFixed(value,decimals){if(decimals==null){decimals=0}const multiplier=getMultiplier(decimals);value=BigNumber.from(value);const negative=value.lt(Zero);if(negative){value=value.mul(NegativeOne)}let fraction=value.mod(multiplier).toString();while(fraction.length<multiplier.length-1){fraction=\"0\"+fraction}fraction=fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];const whole=value.div(multiplier).toString();value=whole+\".\"+fraction;if(negative){value=\"-\"+value}return value}function parseFixed(value,decimals){if(decimals==null){decimals=0}const multiplier=getMultiplier(decimals);if(typeof value!==\"string\"||!value.match(/^-?[0-9.,]+$/)){logger$2.throwArgumentError(\"invalid decimal value\",\"value\",value)}if(multiplier.length-1===0){return BigNumber.from(value)}const negative=value.substring(0,1)===\"-\";if(negative){value=value.substring(1)}if(value===\".\"){logger$2.throwArgumentError(\"missing value\",\"value\",value)}const comps=value.split(\".\");if(comps.length>2){logger$2.throwArgumentError(\"too many decimal points\",\"value\",value)}let whole=comps[0],fraction=comps[1];if(!whole){whole=\"0\"}if(!fraction){fraction=\"0\"}if(fraction.length>multiplier.length-1){throwFault$1(\"fractional component exceeds decimals\",\"underflow\",\"parseFixed\")}while(fraction.length<multiplier.length-1){fraction+=\"0\"}const wholeValue=BigNumber.from(whole);const fractionValue=BigNumber.from(fraction);let wei=wholeValue.mul(multiplier).add(fractionValue);if(negative){wei=wei.mul(NegativeOne)}return wei}class FixedFormat{constructor(constructorGuard,signed,width,decimals){if(constructorGuard!==_constructorGuard$1){logger$2.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"new FixedFormat\"})}this.signed=signed;this.width=width;this.decimals=decimals;this.name=(signed?\"\":\"u\")+\"fixed\"+String(width)+\"x\"+String(decimals);this._multiplier=getMultiplier(decimals);Object.freeze(this)}static from(value){if(value instanceof FixedFormat){return value}let signed=true;let width=128;let decimals=18;if(typeof value===\"string\"){if(value===\"fixed\"){}else if(value===\"ufixed\"){signed=false}else if(value!=null){const match=value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);if(!match){logger$2.throwArgumentError(\"invalid fixed format\",\"format\",value)}signed=match[1]!==\"u\";width=parseInt(match[2]);decimals=parseInt(match[3])}}else if(value){const check=(key,type,defaultValue)=>{if(value[key]==null){return defaultValue}if(typeof value[key]!==type){logger$2.throwArgumentError(\"invalid fixed format (\"+key+\" not \"+type+\")\",\"format.\"+key,value[key])}return value[key]};signed=check(\"signed\",\"boolean\",signed);width=check(\"width\",\"number\",width);decimals=check(\"decimals\",\"number\",decimals)}if(width%8){logger$2.throwArgumentError(\"invalid fixed format width (not byte aligned)\",\"format.width\",width)}if(decimals>80){logger$2.throwArgumentError(\"invalid fixed format (decimals too large)\",\"format.decimals\",decimals)}return new FixedFormat(_constructorGuard$1,signed,width,decimals)}}class FixedNumber{constructor(constructorGuard,hex,value,format){logger$2.checkNew(new.target,FixedNumber);if(constructorGuard!==_constructorGuard$1){logger$2.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"new FixedFormat\"})}this.format=format;this._hex=hex;this._value=value;this._isFixedNumber=true;Object.freeze(this)}_checkFormat(other){if(this.format.name!==other.format.name){logger$2.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\",\"other\",other)}}addUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.add(b),this.format.decimals,this.format)}subUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.sub(b),this.format.decimals,this.format)}mulUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b),this.format.decimals,this.format)}floor(){let comps=this.toString().split(\".\");let result=FixedNumber.from(comps[0],this.format);const hasFraction=!comps[1].match(/^(0*)$/);if(this.isNegative()&&hasFraction){result=result.subUnsafe(ONE)}return result}ceiling(){let comps=this.toString().split(\".\");let result=FixedNumber.from(comps[0],this.format);const hasFraction=!comps[1].match(/^(0*)$/);if(!this.isNegative()&&hasFraction){result=result.addUnsafe(ONE)}return result}round(decimals){if(decimals==null){decimals=0}let comps=this.toString().split(\".\");if(decimals<0||decimals>80||decimals%1){logger$2.throwArgumentError(\"invalid decimal count\",\"decimals\",decimals)}if(comps[1].length<=decimals){return this}const factor=FixedNumber.from(\"1\"+zeros.substring(0,decimals));return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor)}isZero(){return this._value===\"0.0\"}isNegative(){return this._value[0]===\"-\"}toString(){return this._value}toHexString(width){if(width==null){return this._hex}if(width%8){logger$2.throwArgumentError(\"invalid byte width\",\"width\",width)}const hex=BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();return hexZeroPad(hex,width/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(format){return FixedNumber.fromString(this._value,format)}static fromValue(value,decimals,format){if(format==null&&decimals!=null&&!isBigNumberish(decimals)){format=decimals;decimals=null}if(decimals==null){decimals=0}if(format==null){format=\"fixed\"}return FixedNumber.fromString(formatFixed(value,decimals),FixedFormat.from(format))}static fromString(value,format){if(format==null){format=\"fixed\"}const fixedFormat=FixedFormat.from(format);const numeric=parseFixed(value,fixedFormat.decimals);if(!fixedFormat.signed&&numeric.lt(Zero)){throwFault$1(\"unsigned value cannot be negative\",\"overflow\",\"value\",value)}let hex=null;if(fixedFormat.signed){hex=numeric.toTwos(fixedFormat.width).toHexString()}else{hex=numeric.toHexString();hex=hexZeroPad(hex,fixedFormat.width/8)}const decimal=formatFixed(numeric,fixedFormat.decimals);return new FixedNumber(_constructorGuard$1,hex,decimal,fixedFormat)}static fromBytes(value,format){if(format==null){format=\"fixed\"}const fixedFormat=FixedFormat.from(format);if(arrayify(value).length>fixedFormat.width/8){throw new Error(\"overflow\")}let numeric=BigNumber.from(value);if(fixedFormat.signed){numeric=numeric.fromTwos(fixedFormat.width)}const hex=numeric.toTwos((fixedFormat.signed?0:1)+fixedFormat.width).toHexString();const decimal=formatFixed(numeric,fixedFormat.decimals);return new FixedNumber(_constructorGuard$1,hex,decimal,fixedFormat)}static from(value,format){if(typeof value===\"string\"){return FixedNumber.fromString(value,format)}if(isBytes(value)){return FixedNumber.fromBytes(value,format)}try{return FixedNumber.fromValue(value,0,format)}catch(error){if(error.code!==Logger.errors.INVALID_ARGUMENT){throw error}}return logger$2.throwArgumentError(\"invalid FixedNumber value\",\"value\",value)}static isFixedNumber(value){return!!(value&&value._isFixedNumber)}}const ONE=FixedNumber.from(1);const BUMP=FixedNumber.from(\"0.5\");const version$3=\"properties/5.1.0\";\"use strict\";var __awaiter=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$3=new Logger(version$3);function defineReadOnly(object,name,value){Object.defineProperty(object,name,{enumerable:true,value:value,writable:false})}function getStatic(ctor,key){for(let i=0;i<32;i++){if(ctor[key]){return ctor[key]}if(!ctor.prototype||typeof ctor.prototype!==\"object\"){break}ctor=Object.getPrototypeOf(ctor.prototype).constructor}return null}function resolveProperties(object){return __awaiter(this,void 0,void 0,function*(){const promises=Object.keys(object).map(key=>{const value=object[key];return Promise.resolve(value).then(v=>({key:key,value:v}))});const results=yield Promise.all(promises);return results.reduce((accum,result)=>{accum[result.key]=result.value;return accum},{})})}function checkProperties(object,properties){if(!object||typeof object!==\"object\"){logger$3.throwArgumentError(\"invalid object\",\"object\",object)}Object.keys(object).forEach(key=>{if(!properties[key]){logger$3.throwArgumentError(\"invalid object key - \"+key,\"transaction:\"+key,object)}})}function shallowCopy(object){const result={};for(const key in object){result[key]=object[key]}return result}const opaque={bigint:true,boolean:true,function:true,number:true,string:true};function _isFrozen(object){if(object===undefined||object===null||opaque[typeof object]){return true}if(Array.isArray(object)||typeof object===\"object\"){if(!Object.isFrozen(object)){return false}const keys=Object.keys(object);for(let i=0;i<keys.length;i++){if(!_isFrozen(object[keys[i]])){return false}}return true}return logger$3.throwArgumentError(`Cannot deepCopy ${typeof object}`,\"object\",object)}function _deepCopy(object){if(_isFrozen(object)){return object}if(Array.isArray(object)){return Object.freeze(object.map(item=>deepCopy(item)))}if(typeof object===\"object\"){const result={};for(const key in object){const value=object[key];if(value===undefined){continue}defineReadOnly(result,key,deepCopy(value))}return result}return logger$3.throwArgumentError(`Cannot deepCopy ${typeof object}`,\"object\",object)}function deepCopy(object){return _deepCopy(object)}class Description{constructor(info){for(const key in info){this[key]=deepCopy(info[key])}}}const version$4=\"abi/5.1.2\";\"use strict\";const logger$4=new Logger(version$4);const _constructorGuard$2={};let ModifiersBytes={calldata:true,memory:true,storage:true};let ModifiersNest={calldata:true,memory:true};function checkModifier(type,name){if(type===\"bytes\"||type===\"string\"){if(ModifiersBytes[name]){return true}}else if(type===\"address\"){if(name===\"payable\"){return true}}else if(type.indexOf(\"[\")>=0||type===\"tuple\"){if(ModifiersNest[name]){return true}}if(ModifiersBytes[name]||name===\"payable\"){logger$4.throwArgumentError(\"invalid modifier\",\"name\",name)}return false}function parseParamType(param,allowIndexed){let originalParam=param;function throwError(i){logger$4.throwArgumentError(`unexpected character at position ${i}`,\"param\",param)}param=param.replace(/\\s/g,\" \");function newNode(parent){let node={type:\"\",name:\"\",parent:parent,state:{allowType:true}};if(allowIndexed){node.indexed=false}return node}let parent={type:\"\",name:\"\",state:{allowType:true}};let node=parent;for(let i=0;i<param.length;i++){let c=param[i];switch(c){case\"(\":if(node.state.allowType&&node.type===\"\"){node.type=\"tuple\"}else if(!node.state.allowParams){throwError(i)}node.state.allowType=false;node.type=verifyType(node.type);node.components=[newNode(node)];node=node.components[0];break;case\")\":delete node.state;if(node.name===\"indexed\"){if(!allowIndexed){throwError(i)}node.indexed=true;node.name=\"\"}if(checkModifier(node.type,node.name)){node.name=\"\"}node.type=verifyType(node.type);let child=node;node=node.parent;if(!node){throwError(i)}delete child.parent;node.state.allowParams=false;node.state.allowName=true;node.state.allowArray=true;break;case\",\":delete node.state;if(node.name===\"indexed\"){if(!allowIndexed){throwError(i)}node.indexed=true;node.name=\"\"}if(checkModifier(node.type,node.name)){node.name=\"\"}node.type=verifyType(node.type);let sibling=newNode(node.parent);node.parent.components.push(sibling);delete node.parent;node=sibling;break;case\" \":if(node.state.allowType){if(node.type!==\"\"){node.type=verifyType(node.type);delete node.state.allowType;node.state.allowName=true;node.state.allowParams=true}}if(node.state.allowName){if(node.name!==\"\"){if(node.name===\"indexed\"){if(!allowIndexed){throwError(i)}if(node.indexed){throwError(i)}node.indexed=true;node.name=\"\"}else if(checkModifier(node.type,node.name)){node.name=\"\"}else{node.state.allowName=false}}}break;case\"[\":if(!node.state.allowArray){throwError(i)}node.type+=c;node.state.allowArray=false;node.state.allowName=false;node.state.readArray=true;break;case\"]\":if(!node.state.readArray){throwError(i)}node.type+=c;node.state.readArray=false;node.state.allowArray=true;node.state.allowName=true;break;default:if(node.state.allowType){node.type+=c;node.state.allowParams=true;node.state.allowArray=true}else if(node.state.allowName){node.name+=c;delete node.state.allowArray}else if(node.state.readArray){node.type+=c}else{throwError(i)}}}if(node.parent){logger$4.throwArgumentError(\"unexpected eof\",\"param\",param)}delete parent.state;if(node.name===\"indexed\"){if(!allowIndexed){throwError(originalParam.length-7)}if(node.indexed){throwError(originalParam.length-7)}node.indexed=true;node.name=\"\"}else if(checkModifier(node.type,node.name)){node.name=\"\"}parent.type=verifyType(parent.type);return parent}function populate(object,params){for(let key in params){defineReadOnly(object,key,params[key])}}const FormatTypes=Object.freeze({sighash:\"sighash\",minimal:\"minimal\",full:\"full\",json:\"json\"});const paramTypeArray=new RegExp(/^(.*)\\[([0-9]*)\\]$/);class ParamType{constructor(constructorGuard,params){if(constructorGuard!==_constructorGuard$2){logger$4.throwError(\"use fromString\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"new ParamType()\"})}populate(this,params);let match=this.type.match(paramTypeArray);if(match){populate(this,{arrayLength:parseInt(match[2]||\"-1\"),arrayChildren:ParamType.fromObject({type:match[1],components:this.components}),baseType:\"array\"})}else{populate(this,{arrayLength:null,arrayChildren:null,baseType:this.components!=null?\"tuple\":this.type})}this._isParamType=true;Object.freeze(this)}format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$4.throwArgumentError(\"invalid format type\",\"format\",format)}if(format===FormatTypes.json){let result={type:this.baseType===\"tuple\"?\"tuple\":this.type,name:this.name||undefined};if(typeof this.indexed===\"boolean\"){result.indexed=this.indexed}if(this.components){result.components=this.components.map(comp=>JSON.parse(comp.format(format)))}return JSON.stringify(result)}let result=\"\";if(this.baseType===\"array\"){result+=this.arrayChildren.format(format);result+=\"[\"+(this.arrayLength<0?\"\":String(this.arrayLength))+\"]\"}else{if(this.baseType===\"tuple\"){if(format!==FormatTypes.sighash){result+=this.type}result+=\"(\"+this.components.map(comp=>comp.format(format)).join(format===FormatTypes.full?\", \":\",\")+\")\"}else{result+=this.type}}if(format!==FormatTypes.sighash){if(this.indexed===true){result+=\" indexed\"}if(format===FormatTypes.full&&this.name){result+=\" \"+this.name}}return result}static from(value,allowIndexed){if(typeof value===\"string\"){return ParamType.fromString(value,allowIndexed)}return ParamType.fromObject(value)}static fromObject(value){if(ParamType.isParamType(value)){return value}return new ParamType(_constructorGuard$2,{name:value.name||null,type:verifyType(value.type),indexed:value.indexed==null?null:!!value.indexed,components:value.components?value.components.map(ParamType.fromObject):null})}static fromString(value,allowIndexed){function ParamTypify(node){return ParamType.fromObject({name:node.name,type:node.type,indexed:node.indexed,components:node.components})}return ParamTypify(parseParamType(value,!!allowIndexed))}static isParamType(value){return!!(value!=null&&value._isParamType)}}function parseParams(value,allowIndex){return splitNesting(value).map(param=>ParamType.fromString(param,allowIndex))}class Fragment{constructor(constructorGuard,params){if(constructorGuard!==_constructorGuard$2){logger$4.throwError(\"use a static from method\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"new Fragment()\"})}populate(this,params);this._isFragment=true;Object.freeze(this)}static from(value){if(Fragment.isFragment(value)){return value}if(typeof value===\"string\"){return Fragment.fromString(value)}return Fragment.fromObject(value)}static fromObject(value){if(Fragment.isFragment(value)){return value}switch(value.type){case\"function\":return FunctionFragment.fromObject(value);case\"event\":return EventFragment.fromObject(value);case\"constructor\":return ConstructorFragment.fromObject(value);case\"error\":case\"fallback\":case\"receive\":return null}return logger$4.throwArgumentError(\"invalid fragment object\",\"value\",value)}static fromString(value){value=value.replace(/\\s/g,\" \");value=value.replace(/\\(/g,\" (\").replace(/\\)/g,\") \").replace(/\\s+/g,\" \");value=value.trim();if(value.split(\" \")[0]===\"event\"){return EventFragment.fromString(value.substring(5).trim())}else if(value.split(\" \")[0]===\"function\"){return FunctionFragment.fromString(value.substring(8).trim())}else if(value.split(\"(\")[0].trim()===\"constructor\"){return ConstructorFragment.fromString(value.trim())}return logger$4.throwArgumentError(\"unsupported fragment\",\"value\",value)}static isFragment(value){return!!(value&&value._isFragment)}}class EventFragment extends Fragment{format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$4.throwArgumentError(\"invalid format type\",\"format\",format)}if(format===FormatTypes.json){return JSON.stringify({type:\"event\",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))})}let result=\"\";if(format!==FormatTypes.sighash){result+=\"event \"}result+=this.name+\"(\"+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?\", \":\",\")+\") \";if(format!==FormatTypes.sighash){if(this.anonymous){result+=\"anonymous \"}}return result.trim()}static from(value){if(typeof value===\"string\"){return EventFragment.fromString(value)}return EventFragment.fromObject(value)}static fromObject(value){if(EventFragment.isEventFragment(value)){return value}if(value.type!==\"event\"){logger$4.throwArgumentError(\"invalid event object\",\"value\",value)}const params={name:verifyIdentifier(value.name),anonymous:value.anonymous,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],type:\"event\"};return new EventFragment(_constructorGuard$2,params)}static fromString(value){let match=value.match(regexParen);if(!match){logger$4.throwArgumentError(\"invalid event string\",\"value\",value)}let anonymous=false;match[3].split(\" \").forEach(modifier=>{switch(modifier.trim()){case\"anonymous\":anonymous=true;break;case\"\":break;default:logger$4.warn(\"unknown modifier: \"+modifier)}});return EventFragment.fromObject({name:match[1].trim(),anonymous:anonymous,inputs:parseParams(match[2],true),type:\"event\"})}static isEventFragment(value){return value&&value._isFragment&&value.type===\"event\"}}function parseGas(value,params){params.gas=null;let comps=value.split(\"@\");if(comps.length!==1){if(comps.length>2){logger$4.throwArgumentError(\"invalid human-readable ABI signature\",\"value\",value)}if(!comps[1].match(/^[0-9]+$/)){logger$4.throwArgumentError(\"invalid human-readable ABI signature gas\",\"value\",value)}params.gas=BigNumber.from(comps[1]);return comps[0]}return value}function parseModifiers(value,params){params.constant=false;params.payable=false;params.stateMutability=\"nonpayable\";value.split(\" \").forEach(modifier=>{switch(modifier.trim()){case\"constant\":params.constant=true;break;case\"payable\":params.payable=true;params.stateMutability=\"payable\";break;case\"nonpayable\":params.payable=false;params.stateMutability=\"nonpayable\";break;case\"pure\":params.constant=true;params.stateMutability=\"pure\";break;case\"view\":params.constant=true;params.stateMutability=\"view\";break;case\"external\":case\"public\":case\"\":break;default:console.log(\"unknown modifier: \"+modifier)}})}function verifyState(value){let result={constant:false,payable:true,stateMutability:\"payable\"};if(value.stateMutability!=null){result.stateMutability=value.stateMutability;result.constant=result.stateMutability===\"view\"||result.stateMutability===\"pure\";if(value.constant!=null){if(!!value.constant!==result.constant){logger$4.throwArgumentError(\"cannot have constant function with mutability \"+result.stateMutability,\"value\",value)}}result.payable=result.stateMutability===\"payable\";if(value.payable!=null){if(!!value.payable!==result.payable){logger$4.throwArgumentError(\"cannot have payable function with mutability \"+result.stateMutability,\"value\",value)}}}else if(value.payable!=null){result.payable=!!value.payable;if(value.constant==null&&!result.payable&&value.type!==\"constructor\"){logger$4.throwArgumentError(\"unable to determine stateMutability\",\"value\",value)}result.constant=!!value.constant;if(result.constant){result.stateMutability=\"view\"}else{result.stateMutability=result.payable?\"payable\":\"nonpayable\"}if(result.payable&&result.constant){logger$4.throwArgumentError(\"cannot have constant payable function\",\"value\",value)}}else if(value.constant!=null){result.constant=!!value.constant;result.payable=!result.constant;result.stateMutability=result.constant?\"view\":\"payable\"}else if(value.type!==\"constructor\"){logger$4.throwArgumentError(\"unable to determine stateMutability\",\"value\",value)}return result}class ConstructorFragment extends Fragment{format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$4.throwArgumentError(\"invalid format type\",\"format\",format)}if(format===FormatTypes.json){return JSON.stringify({type:\"constructor\",stateMutability:this.stateMutability!==\"nonpayable\"?this.stateMutability:undefined,payable:this.payable,gas:this.gas?this.gas.toNumber():undefined,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))})}if(format===FormatTypes.sighash){logger$4.throwError(\"cannot format a constructor for sighash\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"format(sighash)\"})}let result=\"constructor(\"+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?\", \":\",\")+\") \";if(this.stateMutability&&this.stateMutability!==\"nonpayable\"){result+=this.stateMutability+\" \"}return result.trim()}static from(value){if(typeof value===\"string\"){return ConstructorFragment.fromString(value)}return ConstructorFragment.fromObject(value)}static fromObject(value){if(ConstructorFragment.isConstructorFragment(value)){return value}if(value.type!==\"constructor\"){logger$4.throwArgumentError(\"invalid constructor object\",\"value\",value)}let state=verifyState(value);if(state.constant){logger$4.throwArgumentError(\"constructor cannot be constant\",\"value\",value)}const params={name:null,type:value.type,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],payable:state.payable,stateMutability:state.stateMutability,gas:value.gas?BigNumber.from(value.gas):null};return new ConstructorFragment(_constructorGuard$2,params)}static fromString(value){let params={type:\"constructor\"};value=parseGas(value,params);let parens=value.match(regexParen);if(!parens||parens[1].trim()!==\"constructor\"){logger$4.throwArgumentError(\"invalid constructor string\",\"value\",value)}params.inputs=parseParams(parens[2].trim(),false);parseModifiers(parens[3].trim(),params);return ConstructorFragment.fromObject(params)}static isConstructorFragment(value){return value&&value._isFragment&&value.type===\"constructor\"}}class FunctionFragment extends ConstructorFragment{format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$4.throwArgumentError(\"invalid format type\",\"format\",format)}if(format===FormatTypes.json){return JSON.stringify({type:\"function\",name:this.name,constant:this.constant,stateMutability:this.stateMutability!==\"nonpayable\"?this.stateMutability:undefined,payable:this.payable,gas:this.gas?this.gas.toNumber():undefined,inputs:this.inputs.map(input=>JSON.parse(input.format(format))),outputs:this.outputs.map(output=>JSON.parse(output.format(format)))})}let result=\"\";if(format!==FormatTypes.sighash){result+=\"function \"}result+=this.name+\"(\"+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?\", \":\",\")+\") \";if(format!==FormatTypes.sighash){if(this.stateMutability){if(this.stateMutability!==\"nonpayable\"){result+=this.stateMutability+\" \"}}else if(this.constant){result+=\"view \"}if(this.outputs&&this.outputs.length){result+=\"returns (\"+this.outputs.map(output=>output.format(format)).join(\", \")+\") \"}if(this.gas!=null){result+=\"@\"+this.gas.toString()+\" \"}}return result.trim()}static from(value){if(typeof value===\"string\"){return FunctionFragment.fromString(value)}return FunctionFragment.fromObject(value)}static fromObject(value){if(FunctionFragment.isFunctionFragment(value)){return value}if(value.type!==\"function\"){logger$4.throwArgumentError(\"invalid function object\",\"value\",value)}let state=verifyState(value);const params={type:value.type,name:verifyIdentifier(value.name),constant:state.constant,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],outputs:value.outputs?value.outputs.map(ParamType.fromObject):[],payable:state.payable,stateMutability:state.stateMutability,gas:value.gas?BigNumber.from(value.gas):null};return new FunctionFragment(_constructorGuard$2,params)}static fromString(value){let params={type:\"function\"};value=parseGas(value,params);let comps=value.split(\" returns \");if(comps.length>2){logger$4.throwArgumentError(\"invalid function string\",\"value\",value)}let parens=comps[0].match(regexParen);if(!parens){logger$4.throwArgumentError(\"invalid function signature\",\"value\",value)}params.name=parens[1].trim();if(params.name){verifyIdentifier(params.name)}params.inputs=parseParams(parens[2],false);parseModifiers(parens[3].trim(),params);if(comps.length>1){let returns=comps[1].match(regexParen);if(returns[1].trim()!=\"\"||returns[3].trim()!=\"\"){logger$4.throwArgumentError(\"unexpected tokens\",\"value\",value)}params.outputs=parseParams(returns[2],false)}else{params.outputs=[]}return FunctionFragment.fromObject(params)}static isFunctionFragment(value){return value&&value._isFragment&&value.type===\"function\"}}function verifyType(type){if(type.match(/^uint($|[^1-9])/)){type=\"uint256\"+type.substring(4)}else if(type.match(/^int($|[^1-9])/)){type=\"int256\"+type.substring(3)}return type}const regexIdentifier=new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");function verifyIdentifier(value){if(!value||!value.match(regexIdentifier)){logger$4.throwArgumentError(`invalid identifier \"${value}\"`,\"value\",value)}return value}const regexParen=new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");function splitNesting(value){value=value.trim();let result=[];let accum=\"\";let depth=0;for(let offset=0;offset<value.length;offset++){let c=value[offset];if(c===\",\"&&depth===0){result.push(accum);accum=\"\"}else{accum+=c;if(c===\"(\"){depth++}else if(c===\")\"){depth--;if(depth===-1){logger$4.throwArgumentError(\"unbalanced parenthesis\",\"value\",value)}}}}if(accum){result.push(accum)}return result}\"use strict\";const logger$5=new Logger(version$4);function checkResultErrors(result){const errors=[];const checkErrors=function(path,object){if(!Array.isArray(object)){return}for(let key in object){const childPath=path.slice();childPath.push(key);try{checkErrors(childPath,object[key])}catch(error){errors.push({path:childPath,error:error})}}};checkErrors([],result);return errors}class Coder{constructor(name,type,localName,dynamic){this.name=name;this.type=type;this.localName=localName;this.dynamic=dynamic}_throwError(message,value){logger$5.throwArgumentError(message,this.localName,value)}}class Writer{constructor(wordSize){defineReadOnly(this,\"wordSize\",wordSize||32);this._data=[];this._dataLength=0;this._padding=new Uint8Array(wordSize)}get data(){return hexConcat(this._data)}get length(){return this._dataLength}_writeData(data){this._data.push(data);this._dataLength+=data.length;return data.length}appendWriter(writer){return this._writeData(concat(writer._data))}writeBytes(value){let bytes=arrayify(value);const paddingOffset=bytes.length%this.wordSize;if(paddingOffset){bytes=concat([bytes,this._padding.slice(paddingOffset)])}return this._writeData(bytes)}_getValue(value){let bytes=arrayify(BigNumber.from(value));if(bytes.length>this.wordSize){logger$5.throwError(\"value out-of-bounds\",Logger.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:bytes.length})}if(bytes.length%this.wordSize){bytes=concat([this._padding.slice(bytes.length%this.wordSize),bytes])}return bytes}writeValue(value){return this._writeData(this._getValue(value))}writeUpdatableValue(){const offset=this._data.length;this._data.push(this._padding);this._dataLength+=this.wordSize;return value=>{this._data[offset]=this._getValue(value)}}}class Reader{constructor(data,wordSize,coerceFunc,allowLoose){defineReadOnly(this,\"_data\",arrayify(data));defineReadOnly(this,\"wordSize\",wordSize||32);defineReadOnly(this,\"_coerceFunc\",coerceFunc);defineReadOnly(this,\"allowLoose\",allowLoose);this._offset=0}get data(){return hexlify(this._data)}get consumed(){return this._offset}static coerce(name,value){let match=name.match(\"^u?int([0-9]+)$\");if(match&&parseInt(match[1])<=48){value=value.toNumber()}return value}coerce(name,value){if(this._coerceFunc){return this._coerceFunc(name,value)}return Reader.coerce(name,value)}_peekBytes(offset,length,loose){let alignedLength=Math.ceil(length/this.wordSize)*this.wordSize;if(this._offset+alignedLength>this._data.length){if(this.allowLoose&&loose&&this._offset+length<=this._data.length){alignedLength=length}else{logger$5.throwError(\"data out-of-bounds\",Logger.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+alignedLength})}}return this._data.slice(this._offset,this._offset+alignedLength)}subReader(offset){return new Reader(this._data.slice(this._offset+offset),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(length,loose){let bytes=this._peekBytes(0,length,!!loose);this._offset+=bytes.length;return bytes.slice(0,length)}readValue(){return BigNumber.from(this.readBytes(this.wordSize))}}var sha3=createCommonjsModule(function(module){(function(){\"use strict\";var root=typeof window===\"object\"?window:{};var NODE_JS=!root.JS_SHA3_NO_NODE_JS&&typeof process===\"object\"&&process.versions&&process.versions.node;if(NODE_JS){root=commonjsGlobal}var COMMON_JS=!root.JS_SHA3_NO_COMMON_JS&&\"object\"===\"object\"&&module.exports;var HEX_CHARS=\"0123456789abcdef\".split(\"\");var SHAKE_PADDING=[31,7936,2031616,520093696];var KECCAK_PADDING=[1,256,65536,16777216];var PADDING=[6,1536,393216,100663296];var SHIFT=[0,8,16,24];var RC=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648];var BITS=[224,256,384,512];var SHAKE_BITS=[128,256];var OUTPUT_TYPES=[\"hex\",\"buffer\",\"arrayBuffer\",\"array\"];var createOutputMethod=function(bits,padding,outputType){return function(message){return new Keccak(bits,padding,bits).update(message)[outputType]()}};var createShakeOutputMethod=function(bits,padding,outputType){return function(message,outputBits){return new Keccak(bits,padding,outputBits).update(message)[outputType]()}};var createMethod=function(bits,padding){var method=createOutputMethod(bits,padding,\"hex\");method.create=function(){return new Keccak(bits,padding,bits)};method.update=function(message){return method.create().update(message)};for(var i=0;i<OUTPUT_TYPES.length;++i){var type=OUTPUT_TYPES[i];method[type]=createOutputMethod(bits,padding,type)}return method};var createShakeMethod=function(bits,padding){var method=createShakeOutputMethod(bits,padding,\"hex\");method.create=function(outputBits){return new Keccak(bits,padding,outputBits)};method.update=function(message,outputBits){return method.create(outputBits).update(message)};for(var i=0;i<OUTPUT_TYPES.length;++i){var type=OUTPUT_TYPES[i];method[type]=createShakeOutputMethod(bits,padding,type)}return method};var algorithms=[{name:\"keccak\",padding:KECCAK_PADDING,bits:BITS,createMethod:createMethod},{name:\"sha3\",padding:PADDING,bits:BITS,createMethod:createMethod},{name:\"shake\",padding:SHAKE_PADDING,bits:SHAKE_BITS,createMethod:createShakeMethod}];var methods={},methodNames=[];for(var i=0;i<algorithms.length;++i){var algorithm=algorithms[i];var bits=algorithm.bits;for(var j=0;j<bits.length;++j){var methodName=algorithm.name+\"_\"+bits[j];methodNames.push(methodName);methods[methodName]=algorithm.createMethod(bits[j],algorithm.padding)}}function Keccak(bits,padding,outputBits){this.blocks=[];this.s=[];this.padding=padding;this.outputBits=outputBits;this.reset=true;this.block=0;this.start=0;this.blockCount=1600-(bits<<1)>>5;this.byteCount=this.blockCount<<2;this.outputBlocks=outputBits>>5;this.extraBytes=(outputBits&31)>>3;for(var i=0;i<50;++i){this.s[i]=0}}Keccak.prototype.update=function(message){var notString=typeof message!==\"string\";if(notString&&message.constructor===ArrayBuffer){message=new Uint8Array(message)}var length=message.length,blocks=this.blocks,byteCount=this.byteCount,blockCount=this.blockCount,index=0,s=this.s,i,code;while(index<length){if(this.reset){this.reset=false;blocks[0]=this.block;for(i=1;i<blockCount+1;++i){blocks[i]=0}}if(notString){for(i=this.start;index<length&&i<byteCount;++index){blocks[i>>2]|=message[index]<<SHIFT[i++&3]}}else{for(i=this.start;index<length&&i<byteCount;++index){code=message.charCodeAt(index);if(code<128){blocks[i>>2]|=code<<SHIFT[i++&3]}else if(code<2048){blocks[i>>2]|=(192|code>>6)<<SHIFT[i++&3];blocks[i>>2]|=(128|code&63)<<SHIFT[i++&3]}else if(code<55296||code>=57344){blocks[i>>2]|=(224|code>>12)<<SHIFT[i++&3];blocks[i>>2]|=(128|code>>6&63)<<SHIFT[i++&3];blocks[i>>2]|=(128|code&63)<<SHIFT[i++&3]}else{code=65536+((code&1023)<<10|message.charCodeAt(++index)&1023);blocks[i>>2]|=(240|code>>18)<<SHIFT[i++&3];blocks[i>>2]|=(128|code>>12&63)<<SHIFT[i++&3];blocks[i>>2]|=(128|code>>6&63)<<SHIFT[i++&3];blocks[i>>2]|=(128|code&63)<<SHIFT[i++&3]}}}this.lastByteIndex=i;if(i>=byteCount){this.start=i-byteCount;this.block=blocks[blockCount];for(i=0;i<blockCount;++i){s[i]^=blocks[i]}f(s);this.reset=true}else{this.start=i}}return this};Keccak.prototype.finalize=function(){var blocks=this.blocks,i=this.lastByteIndex,blockCount=this.blockCount,s=this.s;blocks[i>>2]|=this.padding[i&3];if(this.lastByteIndex===this.byteCount){blocks[0]=blocks[blockCount];for(i=1;i<blockCount+1;++i){blocks[i]=0}}blocks[blockCount-1]|=2147483648;for(i=0;i<blockCount;++i){s[i]^=blocks[i]}f(s)};Keccak.prototype.toString=Keccak.prototype.hex=function(){this.finalize();var blockCount=this.blockCount,s=this.s,outputBlocks=this.outputBlocks,extraBytes=this.extraBytes,i=0,j=0;var hex=\"\",block;while(j<outputBlocks){for(i=0;i<blockCount&&j<outputBlocks;++i,++j){block=s[i];hex+=HEX_CHARS[block>>4&15]+HEX_CHARS[block&15]+HEX_CHARS[block>>12&15]+HEX_CHARS[block>>8&15]+HEX_CHARS[block>>20&15]+HEX_CHARS[block>>16&15]+HEX_CHARS[block>>28&15]+HEX_CHARS[block>>24&15]}if(j%blockCount===0){f(s);i=0}}if(extraBytes){block=s[i];if(extraBytes>0){hex+=HEX_CHARS[block>>4&15]+HEX_CHARS[block&15]}if(extraBytes>1){hex+=HEX_CHARS[block>>12&15]+HEX_CHARS[block>>8&15]}if(extraBytes>2){hex+=HEX_CHARS[block>>20&15]+HEX_CHARS[block>>16&15]}}return hex};Keccak.prototype.arrayBuffer=function(){this.finalize();var blockCount=this.blockCount,s=this.s,outputBlocks=this.outputBlocks,extraBytes=this.extraBytes,i=0,j=0;var bytes=this.outputBits>>3;var buffer;if(extraBytes){buffer=new ArrayBuffer(outputBlocks+1<<2)}else{buffer=new ArrayBuffer(bytes)}var array=new Uint32Array(buffer);while(j<outputBlocks){for(i=0;i<blockCount&&j<outputBlocks;++i,++j){array[j]=s[i]}if(j%blockCount===0){f(s)}}if(extraBytes){array[i]=s[i];buffer=buffer.slice(0,bytes)}return buffer};Keccak.prototype.buffer=Keccak.prototype.arrayBuffer;Keccak.prototype.digest=Keccak.prototype.array=function(){this.finalize();var blockCount=this.blockCount,s=this.s,outputBlocks=this.outputBlocks,extraBytes=this.extraBytes,i=0,j=0;var array=[],offset,block;while(j<outputBlocks){for(i=0;i<blockCount&&j<outputBlocks;++i,++j){offset=j<<2;block=s[i];array[offset]=block&255;array[offset+1]=block>>8&255;array[offset+2]=block>>16&255;array[offset+3]=block>>24&255}if(j%blockCount===0){f(s)}}if(extraBytes){offset=j<<2;block=s[i];if(extraBytes>0){array[offset]=block&255}if(extraBytes>1){array[offset+1]=block>>8&255}if(extraBytes>2){array[offset+2]=block>>16&255}}return array};var f=function(s){var h,l,n,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49;for(n=0;n<48;n+=2){c0=s[0]^s[10]^s[20]^s[30]^s[40];c1=s[1]^s[11]^s[21]^s[31]^s[41];c2=s[2]^s[12]^s[22]^s[32]^s[42];c3=s[3]^s[13]^s[23]^s[33]^s[43];c4=s[4]^s[14]^s[24]^s[34]^s[44];c5=s[5]^s[15]^s[25]^s[35]^s[45];c6=s[6]^s[16]^s[26]^s[36]^s[46];c7=s[7]^s[17]^s[27]^s[37]^s[47];c8=s[8]^s[18]^s[28]^s[38]^s[48];c9=s[9]^s[19]^s[29]^s[39]^s[49];h=c8^(c2<<1|c3>>>31);l=c9^(c3<<1|c2>>>31);s[0]^=h;s[1]^=l;s[10]^=h;s[11]^=l;s[20]^=h;s[21]^=l;s[30]^=h;s[31]^=l;s[40]^=h;s[41]^=l;h=c0^(c4<<1|c5>>>31);l=c1^(c5<<1|c4>>>31);s[2]^=h;s[3]^=l;s[12]^=h;s[13]^=l;s[22]^=h;s[23]^=l;s[32]^=h;s[33]^=l;s[42]^=h;s[43]^=l;h=c2^(c6<<1|c7>>>31);l=c3^(c7<<1|c6>>>31);s[4]^=h;s[5]^=l;s[14]^=h;s[15]^=l;s[24]^=h;s[25]^=l;s[34]^=h;s[35]^=l;s[44]^=h;s[45]^=l;h=c4^(c8<<1|c9>>>31);l=c5^(c9<<1|c8>>>31);s[6]^=h;s[7]^=l;s[16]^=h;s[17]^=l;s[26]^=h;s[27]^=l;s[36]^=h;s[37]^=l;s[46]^=h;s[47]^=l;h=c6^(c0<<1|c1>>>31);l=c7^(c1<<1|c0>>>31);s[8]^=h;s[9]^=l;s[18]^=h;s[19]^=l;s[28]^=h;s[29]^=l;s[38]^=h;s[39]^=l;s[48]^=h;s[49]^=l;b0=s[0];b1=s[1];b32=s[11]<<4|s[10]>>>28;b33=s[10]<<4|s[11]>>>28;b14=s[20]<<3|s[21]>>>29;b15=s[21]<<3|s[20]>>>29;b46=s[31]<<9|s[30]>>>23;b47=s[30]<<9|s[31]>>>23;b28=s[40]<<18|s[41]>>>14;b29=s[41]<<18|s[40]>>>14;b20=s[2]<<1|s[3]>>>31;b21=s[3]<<1|s[2]>>>31;b2=s[13]<<12|s[12]>>>20;b3=s[12]<<12|s[13]>>>20;b34=s[22]<<10|s[23]>>>22;b35=s[23]<<10|s[22]>>>22;b16=s[33]<<13|s[32]>>>19;b17=s[32]<<13|s[33]>>>19;b48=s[42]<<2|s[43]>>>30;b49=s[43]<<2|s[42]>>>30;b40=s[5]<<30|s[4]>>>2;b41=s[4]<<30|s[5]>>>2;b22=s[14]<<6|s[15]>>>26;b23=s[15]<<6|s[14]>>>26;b4=s[25]<<11|s[24]>>>21;b5=s[24]<<11|s[25]>>>21;b36=s[34]<<15|s[35]>>>17;b37=s[35]<<15|s[34]>>>17;b18=s[45]<<29|s[44]>>>3;b19=s[44]<<29|s[45]>>>3;b10=s[6]<<28|s[7]>>>4;b11=s[7]<<28|s[6]>>>4;b42=s[17]<<23|s[16]>>>9;b43=s[16]<<23|s[17]>>>9;b24=s[26]<<25|s[27]>>>7;b25=s[27]<<25|s[26]>>>7;b6=s[36]<<21|s[37]>>>11;b7=s[37]<<21|s[36]>>>11;b38=s[47]<<24|s[46]>>>8;b39=s[46]<<24|s[47]>>>8;b30=s[8]<<27|s[9]>>>5;b31=s[9]<<27|s[8]>>>5;b12=s[18]<<20|s[19]>>>12;b13=s[19]<<20|s[18]>>>12;b44=s[29]<<7|s[28]>>>25;b45=s[28]<<7|s[29]>>>25;b26=s[38]<<8|s[39]>>>24;b27=s[39]<<8|s[38]>>>24;b8=s[48]<<14|s[49]>>>18;b9=s[49]<<14|s[48]>>>18;s[0]=b0^~b2&b4;s[1]=b1^~b3&b5;s[10]=b10^~b12&b14;s[11]=b11^~b13&b15;s[20]=b20^~b22&b24;s[21]=b21^~b23&b25;s[30]=b30^~b32&b34;s[31]=b31^~b33&b35;s[40]=b40^~b42&b44;s[41]=b41^~b43&b45;s[2]=b2^~b4&b6;s[3]=b3^~b5&b7;s[12]=b12^~b14&b16;s[13]=b13^~b15&b17;s[22]=b22^~b24&b26;s[23]=b23^~b25&b27;s[32]=b32^~b34&b36;s[33]=b33^~b35&b37;s[42]=b42^~b44&b46;s[43]=b43^~b45&b47;s[4]=b4^~b6&b8;s[5]=b5^~b7&b9;s[14]=b14^~b16&b18;s[15]=b15^~b17&b19;s[24]=b24^~b26&b28;s[25]=b25^~b27&b29;s[34]=b34^~b36&b38;s[35]=b35^~b37&b39;s[44]=b44^~b46&b48;s[45]=b45^~b47&b49;s[6]=b6^~b8&b0;s[7]=b7^~b9&b1;s[16]=b16^~b18&b10;s[17]=b17^~b19&b11;s[26]=b26^~b28&b20;s[27]=b27^~b29&b21;s[36]=b36^~b38&b30;s[37]=b37^~b39&b31;s[46]=b46^~b48&b40;s[47]=b47^~b49&b41;s[8]=b8^~b0&b2;s[9]=b9^~b1&b3;s[18]=b18^~b10&b12;s[19]=b19^~b11&b13;s[28]=b28^~b20&b22;s[29]=b29^~b21&b23;s[38]=b38^~b30&b32;s[39]=b39^~b31&b33;s[48]=b48^~b40&b42;s[49]=b49^~b41&b43;s[0]^=RC[n];s[1]^=RC[n+1]}};if(COMMON_JS){module.exports=methods}else{for(var i=0;i<methodNames.length;++i){root[methodNames[i]]=methods[methodNames[i]]}}})()});\"use strict\";function keccak256(data){return\"0x\"+sha3.keccak_256(arrayify(data))}const version$5=\"rlp/5.1.0\";\"use strict\";const logger$6=new Logger(version$5);function arrayifyInteger(value){const result=[];while(value){result.unshift(value&255);value>>=8}return result}function unarrayifyInteger(data,offset,length){let result=0;for(let i=0;i<length;i++){result=result*256+data[offset+i]}return result}function _encode(object){if(Array.isArray(object)){let payload=[];object.forEach(function(child){payload=payload.concat(_encode(child))});if(payload.length<=55){payload.unshift(192+payload.length);return payload}const length=arrayifyInteger(payload.length);length.unshift(247+length.length);return length.concat(payload)}if(!isBytesLike(object)){logger$6.throwArgumentError(\"RLP object must be BytesLike\",\"object\",object)}const data=Array.prototype.slice.call(arrayify(object));if(data.length===1&&data[0]<=127){return data}else if(data.length<=55){data.unshift(128+data.length);return data}const length=arrayifyInteger(data.length);length.unshift(183+length.length);return length.concat(data)}function encode(object){return hexlify(_encode(object))}function _decodeChildren(data,offset,childOffset,length){const result=[];while(childOffset<offset+1+length){const decoded=_decode(data,childOffset);result.push(decoded.result);childOffset+=decoded.consumed;if(childOffset>offset+1+length){logger$6.throwError(\"child data too short\",Logger.errors.BUFFER_OVERRUN,{})}}return{consumed:1+length,result:result}}function _decode(data,offset){if(data.length===0){logger$6.throwError(\"data too short\",Logger.errors.BUFFER_OVERRUN,{})}if(data[offset]>=248){const lengthLength=data[offset]-247;if(offset+1+lengthLength>data.length){logger$6.throwError(\"data short segment too short\",Logger.errors.BUFFER_OVERRUN,{})}const length=unarrayifyInteger(data,offset+1,lengthLength);if(offset+1+lengthLength+length>data.length){logger$6.throwError(\"data long segment too short\",Logger.errors.BUFFER_OVERRUN,{})}return _decodeChildren(data,offset,offset+1+lengthLength,lengthLength+length)}else if(data[offset]>=192){const length=data[offset]-192;if(offset+1+length>data.length){logger$6.throwError(\"data array too short\",Logger.errors.BUFFER_OVERRUN,{})}return _decodeChildren(data,offset,offset+1,length)}else if(data[offset]>=184){const lengthLength=data[offset]-183;if(offset+1+lengthLength>data.length){logger$6.throwError(\"data array too short\",Logger.errors.BUFFER_OVERRUN,{})}const length=unarrayifyInteger(data,offset+1,lengthLength);if(offset+1+lengthLength+length>data.length){logger$6.throwError(\"data array too short\",Logger.errors.BUFFER_OVERRUN,{})}const result=hexlify(data.slice(offset+1+lengthLength,offset+1+lengthLength+length));return{consumed:1+lengthLength+length,result:result}}else if(data[offset]>=128){const length=data[offset]-128;if(offset+1+length>data.length){logger$6.throwError(\"data too short\",Logger.errors.BUFFER_OVERRUN,{})}const result=hexlify(data.slice(offset+1,offset+1+length));return{consumed:1+length,result:result}}return{consumed:1,result:hexlify(data[offset])}}function decode(data){const bytes=arrayify(data);const decoded=_decode(bytes,0);if(decoded.consumed!==bytes.length){logger$6.throwArgumentError(\"invalid rlp data\",\"data\",data)}return decoded.result}var index=Object.freeze({__proto__:null,encode:encode,decode:decode});const version$6=\"address/5.1.0\";\"use strict\";const logger$7=new Logger(version$6);function getChecksumAddress(address){if(!isHexString(address,20)){logger$7.throwArgumentError(\"invalid address\",\"address\",address)}address=address.toLowerCase();const chars=address.substring(2).split(\"\");const expanded=new Uint8Array(40);for(let i=0;i<40;i++){expanded[i]=chars[i].charCodeAt(0)}const hashed=arrayify(keccak256(expanded));for(let i=0;i<40;i+=2){if(hashed[i>>1]>>4>=8){chars[i]=chars[i].toUpperCase()}if((hashed[i>>1]&15)>=8){chars[i+1]=chars[i+1].toUpperCase()}}return\"0x\"+chars.join(\"\")}const MAX_SAFE_INTEGER=9007199254740991;function log10(x){if(Math.log10){return Math.log10(x)}return Math.log(x)/Math.LN10}const ibanLookup={};for(let i=0;i<10;i++){ibanLookup[String(i)]=String(i)}for(let i=0;i<26;i++){ibanLookup[String.fromCharCode(65+i)]=String(10+i)}const safeDigits=Math.floor(log10(MAX_SAFE_INTEGER));function ibanChecksum(address){address=address.toUpperCase();address=address.substring(4)+address.substring(0,2)+\"00\";let expanded=address.split(\"\").map(c=>{return ibanLookup[c]}).join(\"\");while(expanded.length>=safeDigits){let block=expanded.substring(0,safeDigits);expanded=parseInt(block,10)%97+expanded.substring(block.length)}let checksum=String(98-parseInt(expanded,10)%97);while(checksum.length<2){checksum=\"0\"+checksum}return checksum}function getAddress(address){let result=null;if(typeof address!==\"string\"){logger$7.throwArgumentError(\"invalid address\",\"address\",address)}if(address.match(/^(0x)?[0-9a-fA-F]{40}$/)){if(address.substring(0,2)!==\"0x\"){address=\"0x\"+address}result=getChecksumAddress(address);if(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&result!==address){logger$7.throwArgumentError(\"bad address checksum\",\"address\",address)}}else if(address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){if(address.substring(2,4)!==ibanChecksum(address)){logger$7.throwArgumentError(\"bad icap checksum\",\"address\",address)}result=_base36To16(address.substring(4));while(result.length<40){result=\"0\"+result}result=getChecksumAddress(\"0x\"+result)}else{logger$7.throwArgumentError(\"invalid address\",\"address\",address)}return result}function isAddress(address){try{getAddress(address);return true}catch(error){}return false}function getIcapAddress(address){let base36=_base16To36(getAddress(address).substring(2)).toUpperCase();while(base36.length<30){base36=\"0\"+base36}return\"XE\"+ibanChecksum(\"XE00\"+base36)+base36}function getContractAddress(transaction){let from=null;try{from=getAddress(transaction.from)}catch(error){logger$7.throwArgumentError(\"missing from address\",\"transaction\",transaction)}const nonce=stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));return getAddress(hexDataSlice(keccak256(encode([from,nonce])),12))}function getCreate2Address(from,salt,initCodeHash){if(hexDataLength(salt)!==32){logger$7.throwArgumentError(\"salt must be 32 bytes\",\"salt\",salt)}if(hexDataLength(initCodeHash)!==32){logger$7.throwArgumentError(\"initCodeHash must be 32 bytes\",\"initCodeHash\",initCodeHash)}return getAddress(hexDataSlice(keccak256(concat([\"0xff\",getAddress(from),salt,initCodeHash])),12))}\"use strict\";class AddressCoder extends Coder{constructor(localName){super(\"address\",\"address\",localName,false)}defaultValue(){return\"0x0000000000000000000000000000000000000000\"}encode(writer,value){try{getAddress(value)}catch(error){this._throwError(error.message,value)}return writer.writeValue(value)}decode(reader){return getAddress(hexZeroPad(reader.readValue().toHexString(),20))}}\"use strict\";class AnonymousCoder extends Coder{constructor(coder){super(coder.name,coder.type,undefined,coder.dynamic);this.coder=coder}defaultValue(){return this.coder.defaultValue()}encode(writer,value){return this.coder.encode(writer,value)}decode(reader){return this.coder.decode(reader)}}\"use strict\";const logger$8=new Logger(version$4);function pack(writer,coders,values){let arrayValues=null;if(Array.isArray(values)){arrayValues=values}else if(values&&typeof values===\"object\"){let unique={};arrayValues=coders.map(coder=>{const name=coder.localName;if(!name){logger$8.throwError(\"cannot encode object for signature with missing names\",Logger.errors.INVALID_ARGUMENT,{argument:\"values\",coder:coder,value:values})}if(unique[name]){logger$8.throwError(\"cannot encode object for signature with duplicate names\",Logger.errors.INVALID_ARGUMENT,{argument:\"values\",coder:coder,value:values})}unique[name]=true;return values[name]})}else{logger$8.throwArgumentError(\"invalid tuple value\",\"tuple\",values)}if(coders.length!==arrayValues.length){logger$8.throwArgumentError(\"types/value length mismatch\",\"tuple\",values)}let staticWriter=new Writer(writer.wordSize);let dynamicWriter=new Writer(writer.wordSize);let updateFuncs=[];coders.forEach((coder,index)=>{let value=arrayValues[index];if(coder.dynamic){let dynamicOffset=dynamicWriter.length;coder.encode(dynamicWriter,value);let updateFunc=staticWriter.writeUpdatableValue();updateFuncs.push(baseOffset=>{updateFunc(baseOffset+dynamicOffset)})}else{coder.encode(staticWriter,value)}});updateFuncs.forEach(func=>{func(staticWriter.length)});let length=writer.appendWriter(staticWriter);length+=writer.appendWriter(dynamicWriter);return length}function unpack(reader,coders){let values=[];let baseReader=reader.subReader(0);coders.forEach(coder=>{let value=null;if(coder.dynamic){let offset=reader.readValue();let offsetReader=baseReader.subReader(offset.toNumber());try{value=coder.decode(offsetReader)}catch(error){if(error.code===Logger.errors.BUFFER_OVERRUN){throw error}value=error;value.baseType=coder.name;value.name=coder.localName;value.type=coder.type}}else{try{value=coder.decode(reader)}catch(error){if(error.code===Logger.errors.BUFFER_OVERRUN){throw error}value=error;value.baseType=coder.name;value.name=coder.localName;value.type=coder.type}}if(value!=undefined){values.push(value)}});const uniqueNames=coders.reduce((accum,coder)=>{const name=coder.localName;if(name){if(!accum[name]){accum[name]=0}accum[name]++}return accum},{});coders.forEach((coder,index)=>{let name=coder.localName;if(!name||uniqueNames[name]!==1){return}if(name===\"length\"){name=\"_length\"}if(values[name]!=null){return}const value=values[index];if(value instanceof Error){Object.defineProperty(values,name,{get:()=>{throw value}})}else{values[name]=value}});for(let i=0;i<values.length;i++){const value=values[i];if(value instanceof Error){Object.defineProperty(values,i,{get:()=>{throw value}})}}return Object.freeze(values)}class ArrayCoder extends Coder{constructor(coder,length,localName){const type=coder.type+\"[\"+(length>=0?length:\"\")+\"]\";const dynamic=length===-1||coder.dynamic;super(\"array\",type,localName,dynamic);this.coder=coder;this.length=length}defaultValue(){const defaultChild=this.coder.defaultValue();const result=[];for(let i=0;i<this.length;i++){result.push(defaultChild)}return result}encode(writer,value){if(!Array.isArray(value)){this._throwError(\"expected array value\",value)}let count=this.length;if(count===-1){count=value.length;writer.writeValue(value.length)}logger$8.checkArgumentCount(value.length,count,\"coder array\"+(this.localName?\" \"+this.localName:\"\"));let coders=[];for(let i=0;i<value.length;i++){coders.push(this.coder)}return pack(writer,coders,value)}decode(reader){let count=this.length;if(count===-1){count=reader.readValue().toNumber();if(count*32>reader._data.length){logger$8.throwError(\"insufficient data length\",Logger.errors.BUFFER_OVERRUN,{length:reader._data.length,count:count})}}let coders=[];for(let i=0;i<count;i++){coders.push(new AnonymousCoder(this.coder))}return reader.coerce(this.name,unpack(reader,coders))}}\"use strict\";class BooleanCoder extends Coder{constructor(localName){super(\"bool\",\"bool\",localName,false)}defaultValue(){return false}encode(writer,value){return writer.writeValue(value?1:0)}decode(reader){return reader.coerce(this.type,!reader.readValue().isZero())}}\"use strict\";class DynamicBytesCoder extends Coder{constructor(type,localName){super(type,type,localName,true)}defaultValue(){return\"0x\"}encode(writer,value){value=arrayify(value);let length=writer.writeValue(value.length);length+=writer.writeBytes(value);return length}decode(reader){return reader.readBytes(reader.readValue().toNumber(),true)}}class BytesCoder extends DynamicBytesCoder{constructor(localName){super(\"bytes\",localName)}decode(reader){return reader.coerce(this.name,hexlify(super.decode(reader)))}}\"use strict\";class FixedBytesCoder extends Coder{constructor(size,localName){let name=\"bytes\"+String(size);super(name,name,localName,false);this.size=size}defaultValue(){return\"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0,2+this.size*2)}encode(writer,value){let data=arrayify(value);if(data.length!==this.size){this._throwError(\"incorrect data length\",value)}return writer.writeBytes(data)}decode(reader){return reader.coerce(this.name,hexlify(reader.readBytes(this.size)))}}\"use strict\";class NullCoder extends Coder{constructor(localName){super(\"null\",\"\",localName,false)}defaultValue(){return null}encode(writer,value){if(value!=null){this._throwError(\"not null\",value)}return writer.writeBytes([])}decode(reader){reader.readBytes(0);return reader.coerce(this.name,null)}}const AddressZero=\"0x0000000000000000000000000000000000000000\";const NegativeOne$1=BigNumber.from(-1);const Zero$1=BigNumber.from(0);const One=BigNumber.from(1);const Two=BigNumber.from(2);const WeiPerEther=BigNumber.from(\"1000000000000000000\");const MaxUint256=BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");const HashZero=\"0x0000000000000000000000000000000000000000000000000000000000000000\";const EtherSymbol=\"Ξ\";\"use strict\";var index$1=Object.freeze({__proto__:null,AddressZero:AddressZero,NegativeOne:NegativeOne$1,Zero:Zero$1,One:One,Two:Two,WeiPerEther:WeiPerEther,MaxUint256:MaxUint256,HashZero:HashZero,EtherSymbol:EtherSymbol});\"use strict\";class NumberCoder extends Coder{constructor(size,signed,localName){const name=(signed?\"int\":\"uint\")+size*8;super(name,name,localName,false);this.size=size;this.signed=signed}defaultValue(){return 0}encode(writer,value){let v=BigNumber.from(value);let maxUintValue=MaxUint256.mask(writer.wordSize*8);if(this.signed){let bounds=maxUintValue.mask(this.size*8-1);if(v.gt(bounds)||v.lt(bounds.add(One).mul(NegativeOne$1))){this._throwError(\"value out-of-bounds\",value)}}else if(v.lt(Zero$1)||v.gt(maxUintValue.mask(this.size*8))){this._throwError(\"value out-of-bounds\",value)}v=v.toTwos(this.size*8).mask(this.size*8);if(this.signed){v=v.fromTwos(this.size*8).toTwos(8*writer.wordSize)}return writer.writeValue(v)}decode(reader){let value=reader.readValue().mask(this.size*8);if(this.signed){value=value.fromTwos(this.size*8)}return reader.coerce(this.name,value)}}const version$7=\"strings/5.1.0\";\"use strict\";const logger$9=new Logger(version$7);var UnicodeNormalizationForm;(function(UnicodeNormalizationForm){UnicodeNormalizationForm[\"current\"]=\"\";UnicodeNormalizationForm[\"NFC\"]=\"NFC\";UnicodeNormalizationForm[\"NFD\"]=\"NFD\";UnicodeNormalizationForm[\"NFKC\"]=\"NFKC\";UnicodeNormalizationForm[\"NFKD\"]=\"NFKD\"})(UnicodeNormalizationForm||(UnicodeNormalizationForm={}));var Utf8ErrorReason;(function(Utf8ErrorReason){Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"]=\"unexpected continuation byte\";Utf8ErrorReason[\"BAD_PREFIX\"]=\"bad codepoint prefix\";Utf8ErrorReason[\"OVERRUN\"]=\"string overrun\";Utf8ErrorReason[\"MISSING_CONTINUE\"]=\"missing continuation byte\";Utf8ErrorReason[\"OUT_OF_RANGE\"]=\"out of UTF-8 range\";Utf8ErrorReason[\"UTF16_SURROGATE\"]=\"UTF-16 surrogate\";Utf8ErrorReason[\"OVERLONG\"]=\"overlong representation\"})(Utf8ErrorReason||(Utf8ErrorReason={}));function errorFunc(reason,offset,bytes,output,badCodepoint){return logger$9.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`,\"bytes\",bytes)}function ignoreFunc(reason,offset,bytes,output,badCodepoint){if(reason===Utf8ErrorReason.BAD_PREFIX||reason===Utf8ErrorReason.UNEXPECTED_CONTINUE){let i=0;for(let o=offset+1;o<bytes.length;o++){if(bytes[o]>>6!==2){break}i++}return i}if(reason===Utf8ErrorReason.OVERRUN){return bytes.length-offset-1}return 0}function replaceFunc(reason,offset,bytes,output,badCodepoint){if(reason===Utf8ErrorReason.OVERLONG){output.push(badCodepoint);return 0}output.push(65533);return ignoreFunc(reason,offset,bytes,output,badCodepoint)}const Utf8ErrorFuncs=Object.freeze({error:errorFunc,ignore:ignoreFunc,replace:replaceFunc});function getUtf8CodePoints(bytes,onError){if(onError==null){onError=Utf8ErrorFuncs.error}bytes=arrayify(bytes);const result=[];let i=0;while(i<bytes.length){const c=bytes[i++];if(c>>7===0){result.push(c);continue}let extraLength=null;let overlongMask=null;if((c&224)===192){extraLength=1;overlongMask=127}else if((c&240)===224){extraLength=2;overlongMask=2047}else if((c&248)===240){extraLength=3;overlongMask=65535}else{if((c&192)===128){i+=onError(Utf8ErrorReason.UNEXPECTED_CONTINUE,i-1,bytes,result)}else{i+=onError(Utf8ErrorReason.BAD_PREFIX,i-1,bytes,result)}continue}if(i-1+extraLength>=bytes.length){i+=onError(Utf8ErrorReason.OVERRUN,i-1,bytes,result);continue}let res=c&(1<<8-extraLength-1)-1;for(let j=0;j<extraLength;j++){let nextChar=bytes[i];if((nextChar&192)!=128){i+=onError(Utf8ErrorReason.MISSING_CONTINUE,i,bytes,result);res=null;break}res=res<<6|nextChar&63;i++}if(res===null){continue}if(res>1114111){i+=onError(Utf8ErrorReason.OUT_OF_RANGE,i-1-extraLength,bytes,result,res);continue}if(res>=55296&&res<=57343){i+=onError(Utf8ErrorReason.UTF16_SURROGATE,i-1-extraLength,bytes,result,res);continue}if(res<=overlongMask){i+=onError(Utf8ErrorReason.OVERLONG,i-1-extraLength,bytes,result,res);continue}result.push(res)}return result}function toUtf8Bytes(str,form=UnicodeNormalizationForm.current){if(form!=UnicodeNormalizationForm.current){logger$9.checkNormalize();str=str.normalize(form)}let result=[];for(let i=0;i<str.length;i++){const c=str.charCodeAt(i);if(c<128){result.push(c)}else if(c<2048){result.push(c>>6|192);result.push(c&63|128)}else if((c&64512)==55296){i++;const c2=str.charCodeAt(i);if(i>=str.length||(c2&64512)!==56320){throw new Error(\"invalid utf-8 string\")}const pair=65536+((c&1023)<<10)+(c2&1023);result.push(pair>>18|240);result.push(pair>>12&63|128);result.push(pair>>6&63|128);result.push(pair&63|128)}else{result.push(c>>12|224);result.push(c>>6&63|128);result.push(c&63|128)}}return arrayify(result)}function escapeChar(value){const hex=\"0000\"+value.toString(16);return\"\\\\u\"+hex.substring(hex.length-4)}function _toEscapedUtf8String(bytes,onError){return'\"'+getUtf8CodePoints(bytes,onError).map(codePoint=>{if(codePoint<256){switch(codePoint){case 8:return\"\\\\b\";case 9:return\"\\\\t\";case 10:return\"\\\\n\";case 13:return\"\\\\r\";case 34:return'\\\\\"';case 92:return\"\\\\\\\\\"}if(codePoint>=32&&codePoint<127){return String.fromCharCode(codePoint)}}if(codePoint<=65535){return escapeChar(codePoint)}codePoint-=65536;return escapeChar((codePoint>>10&1023)+55296)+escapeChar((codePoint&1023)+56320)}).join(\"\")+'\"'}function _toUtf8String(codePoints){return codePoints.map(codePoint=>{if(codePoint<=65535){return String.fromCharCode(codePoint)}codePoint-=65536;return String.fromCharCode((codePoint>>10&1023)+55296,(codePoint&1023)+56320)}).join(\"\")}function toUtf8String(bytes,onError){return _toUtf8String(getUtf8CodePoints(bytes,onError))}function toUtf8CodePoints(str,form=UnicodeNormalizationForm.current){return getUtf8CodePoints(toUtf8Bytes(str,form))}\"use strict\";function formatBytes32String(text){const bytes=toUtf8Bytes(text);if(bytes.length>31){throw new Error(\"bytes32 string must be less than 32 bytes\")}return hexlify(concat([bytes,HashZero]).slice(0,32))}function parseBytes32String(bytes){const data=arrayify(bytes);if(data.length!==32){throw new Error(\"invalid bytes32 - not 32 bytes long\")}if(data[31]!==0){throw new Error(\"invalid bytes32 string - no null terminator\")}let length=31;while(data[length-1]===0){length--}return toUtf8String(data.slice(0,length))}\"use strict\";function bytes2(data){if(data.length%4!==0){throw new Error(\"bad data\")}let result=[];for(let i=0;i<data.length;i+=4){result.push(parseInt(data.substring(i,i+4),16))}return result}function createTable(data,func){if(!func){func=function(value){return[parseInt(value,16)]}}let lo=0;let result={};data.split(\",\").forEach(pair=>{let comps=pair.split(\":\");lo+=parseInt(comps[0],16);result[lo]=func(comps[1])});return result}function createRangeTable(data){let hi=0;return data.split(\",\").map(v=>{let comps=v.split(\"-\");if(comps.length===1){comps[1]=\"0\"}else if(comps[1]===\"\"){comps[1]=\"1\"}let lo=hi+parseInt(comps[0],16);hi=parseInt(comps[1],16);return{l:lo,h:hi}})}function matchMap(value,ranges){let lo=0;for(let i=0;i<ranges.length;i++){let range=ranges[i];lo+=range.l;if(value>=lo&&value<=lo+range.h&&(value-lo)%(range.d||1)===0){if(range.e&&range.e.indexOf(value-lo)!==-1){continue}return range}}return null}const Table_A_1_ranges=createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");const Table_B_1_flags=\"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(v=>parseInt(v,16));const Table_B_2_ranges=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}];const Table_B_2_lut_abs=createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");const Table_B_2_lut_rel=createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");const Table_B_2_complex=createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\",bytes2);const Table_C_ranges=createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");function flatten(values){return values.reduce((accum,value)=>{value.forEach(value=>{accum.push(value)});return accum},[])}function _nameprepTableA1(codepoint){return!!matchMap(codepoint,Table_A_1_ranges)}function _nameprepTableB2(codepoint){let range=matchMap(codepoint,Table_B_2_ranges);if(range){return[codepoint+range.s]}let codes=Table_B_2_lut_abs[codepoint];if(codes){return codes}let shift=Table_B_2_lut_rel[codepoint];if(shift){return[codepoint+shift[0]]}let complex=Table_B_2_complex[codepoint];if(complex){return complex}return null}function _nameprepTableC(codepoint){return!!matchMap(codepoint,Table_C_ranges)}function nameprep(value){if(value.match(/^[a-z0-9-]*$/i)&&value.length<=59){return value.toLowerCase()}let codes=toUtf8CodePoints(value);codes=flatten(codes.map(code=>{if(Table_B_1_flags.indexOf(code)>=0){return[]}if(code>=65024&&code<=65039){return[]}let codesTableB2=_nameprepTableB2(code);if(codesTableB2){return codesTableB2}return[code]}));codes=toUtf8CodePoints(_toUtf8String(codes),UnicodeNormalizationForm.NFKC);codes.forEach(code=>{if(_nameprepTableC(code)){throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\")}});codes.forEach(code=>{if(_nameprepTableA1(code)){throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\")}});let name=_toUtf8String(codes);if(name.substring(0,1)===\"-\"||name.substring(2,4)===\"--\"||name.substring(name.length-1)===\"-\"){throw new Error(\"invalid hyphen\")}if(name.length>63){throw new Error(\"too long\")}return name}\"use strict\";\"use strict\";class StringCoder extends DynamicBytesCoder{constructor(localName){super(\"string\",localName)}defaultValue(){return\"\"}encode(writer,value){return super.encode(writer,toUtf8Bytes(value))}decode(reader){return toUtf8String(super.decode(reader))}}\"use strict\";class TupleCoder extends Coder{constructor(coders,localName){let dynamic=false;const types=[];coders.forEach(coder=>{if(coder.dynamic){dynamic=true}types.push(coder.type)});const type=\"tuple(\"+types.join(\",\")+\")\";super(\"tuple\",type,localName,dynamic);this.coders=coders}defaultValue(){const values=[];this.coders.forEach(coder=>{values.push(coder.defaultValue())});const uniqueNames=this.coders.reduce((accum,coder)=>{const name=coder.localName;if(name){if(!accum[name]){accum[name]=0}accum[name]++}return accum},{});this.coders.forEach((coder,index)=>{let name=coder.localName;if(!name||uniqueNames[name]!==1){return}if(name===\"length\"){name=\"_length\"}if(values[name]!=null){return}values[name]=values[index]});return Object.freeze(values)}encode(writer,value){return pack(writer,this.coders,value)}decode(reader){return reader.coerce(this.name,unpack(reader,this.coders))}}\"use strict\";const logger$a=new Logger(version$4);const paramTypeBytes=new RegExp(/^bytes([0-9]*)$/);const paramTypeNumber=new RegExp(/^(u?int)([0-9]*)$/);class AbiCoder{constructor(coerceFunc){logger$a.checkNew(new.target,AbiCoder);defineReadOnly(this,\"coerceFunc\",coerceFunc||null)}_getCoder(param){switch(param.baseType){case\"address\":return new AddressCoder(param.name);case\"bool\":return new BooleanCoder(param.name);case\"string\":return new StringCoder(param.name);case\"bytes\":return new BytesCoder(param.name);case\"array\":return new ArrayCoder(this._getCoder(param.arrayChildren),param.arrayLength,param.name);case\"tuple\":return new TupleCoder((param.components||[]).map(component=>{return this._getCoder(component)}),param.name);case\"\":return new NullCoder(param.name)}let match=param.type.match(paramTypeNumber);if(match){let size=parseInt(match[2]||\"256\");if(size===0||size>256||size%8!==0){logger$a.throwArgumentError(\"invalid \"+match[1]+\" bit length\",\"param\",param)}return new NumberCoder(size/8,match[1]===\"int\",param.name)}match=param.type.match(paramTypeBytes);if(match){let size=parseInt(match[1]);if(size===0||size>32){logger$a.throwArgumentError(\"invalid bytes length\",\"param\",param)}return new FixedBytesCoder(size,param.name)}return logger$a.throwArgumentError(\"invalid type\",\"type\",param.type)}_getWordSize(){return 32}_getReader(data,allowLoose){return new Reader(data,this._getWordSize(),this.coerceFunc,allowLoose)}_getWriter(){return new Writer(this._getWordSize())}getDefaultValue(types){const coders=types.map(type=>this._getCoder(ParamType.from(type)));const coder=new TupleCoder(coders,\"_\");return coder.defaultValue()}encode(types,values){if(types.length!==values.length){logger$a.throwError(\"types/values length mismatch\",Logger.errors.INVALID_ARGUMENT,{count:{types:types.length,values:values.length},value:{types:types,values:values}})}const coders=types.map(type=>this._getCoder(ParamType.from(type)));const coder=new TupleCoder(coders,\"_\");const writer=this._getWriter();coder.encode(writer,values);return writer.data}decode(types,data,loose){const coders=types.map(type=>this._getCoder(ParamType.from(type)));const coder=new TupleCoder(coders,\"_\");return coder.decode(this._getReader(arrayify(data),loose))}}const defaultAbiCoder=new AbiCoder;function id(text){return keccak256(toUtf8Bytes(text))}const version$8=\"hash/5.1.0\";const logger$b=new Logger(version$8);const Zeros=new Uint8Array(32);Zeros.fill(0);const Partition=new RegExp(\"^((.*)\\\\.)?([^.]+)$\");function isValidName(name){try{const comps=name.split(\".\");for(let i=0;i<comps.length;i++){if(nameprep(comps[i]).length===0){throw new Error(\"empty\")}}return true}catch(error){}return false}function namehash(name){if(typeof name!==\"string\"){logger$b.throwArgumentError(\"invalid address - \"+String(name),\"name\",name)}let result=Zeros;while(name.length){const partition=name.match(Partition);const label=toUtf8Bytes(nameprep(partition[3]));result=keccak256(concat([result,keccak256(label)]));name=partition[2]||\"\"}return hexlify(result)}const messagePrefix=\"\u0019Ethereum Signed Message:\\n\";function hashMessage(message){if(typeof message===\"string\"){message=toUtf8Bytes(message)}return keccak256(concat([toUtf8Bytes(messagePrefix),toUtf8Bytes(String(message.length)),message]))}var __awaiter$1=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$c=new Logger(version$8);const padding=new Uint8Array(32);padding.fill(0);const NegativeOne$2=BigNumber.from(-1);const Zero$2=BigNumber.from(0);const One$1=BigNumber.from(1);const MaxUint256$1=BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");function hexPadRight(value){const bytes=arrayify(value);const padOffset=bytes.length%32;if(padOffset){return hexConcat([bytes,padding.slice(padOffset)])}return hexlify(bytes)}const hexTrue=hexZeroPad(One$1.toHexString(),32);const hexFalse=hexZeroPad(Zero$2.toHexString(),32);const domainFieldTypes={name:\"string\",version:\"string\",chainId:\"uint256\",verifyingContract:\"address\",salt:\"bytes32\"};const domainFieldNames=[\"name\",\"version\",\"chainId\",\"verifyingContract\",\"salt\"];function checkString(key){return function(value){if(typeof value!==\"string\"){logger$c.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`,`domain.${key}`,value)}return value}}const domainChecks={name:checkString(\"name\"),version:checkString(\"version\"),chainId:function(value){try{return BigNumber.from(value).toString()}catch(error){}return logger$c.throwArgumentError(`invalid domain value for \"chainId\"`,\"domain.chainId\",value)},verifyingContract:function(value){try{return getAddress(value).toLowerCase()}catch(error){}return logger$c.throwArgumentError(`invalid domain value \"verifyingContract\"`,\"domain.verifyingContract\",value)},salt:function(value){try{const bytes=arrayify(value);if(bytes.length!==32){throw new Error(\"bad length\")}return hexlify(bytes)}catch(error){}return logger$c.throwArgumentError(`invalid domain value \"salt\"`,\"domain.salt\",value)}};function getBaseEncoder(type){{const match=type.match(/^(u?)int(\\d*)$/);if(match){const signed=match[1]===\"\";const width=parseInt(match[2]||\"256\");if(width%8!==0||width>256||match[2]&&match[2]!==String(width)){logger$c.throwArgumentError(\"invalid numeric width\",\"type\",type)}const boundsUpper=MaxUint256$1.mask(signed?width-1:width);const boundsLower=signed?boundsUpper.add(One$1).mul(NegativeOne$2):Zero$2;return function(value){const v=BigNumber.from(value);if(v.lt(boundsLower)||v.gt(boundsUpper)){logger$c.throwArgumentError(`value out-of-bounds for ${type}`,\"value\",value)}return hexZeroPad(v.toTwos(256).toHexString(),32)}}}{const match=type.match(/^bytes(\\d+)$/);if(match){const width=parseInt(match[1]);if(width===0||width>32||match[1]!==String(width)){logger$c.throwArgumentError(\"invalid bytes width\",\"type\",type)}return function(value){const bytes=arrayify(value);if(bytes.length!==width){logger$c.throwArgumentError(`invalid length for ${type}`,\"value\",value)}return hexPadRight(value)}}}switch(type){case\"address\":return function(value){return hexZeroPad(getAddress(value),32)};case\"bool\":return function(value){return!value?hexFalse:hexTrue};case\"bytes\":return function(value){return keccak256(value)};case\"string\":return function(value){return id(value)}}return null}function encodeType(name,fields){return`${name}(${fields.map(({name:name,type:type})=>type+\" \"+name).join(\",\")})`}class TypedDataEncoder{constructor(types){defineReadOnly(this,\"types\",Object.freeze(deepCopy(types)));defineReadOnly(this,\"_encoderCache\",{});defineReadOnly(this,\"_types\",{});const links={};const parents={};const subtypes={};Object.keys(types).forEach(type=>{links[type]={};parents[type]=[];subtypes[type]={}});for(const name in types){const uniqueNames={};types[name].forEach(field=>{if(uniqueNames[field.name]){logger$c.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`,\"types\",types)}uniqueNames[field.name]=true;const baseType=field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];if(baseType===name){logger$c.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`,\"types\",types)}const encoder=getBaseEncoder(baseType);if(encoder){return}if(!parents[baseType]){logger$c.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`,\"types\",types)}parents[baseType].push(name);links[name][baseType]=true})}const primaryTypes=Object.keys(parents).filter(n=>parents[n].length===0);if(primaryTypes.length===0){logger$c.throwArgumentError(\"missing primary type\",\"types\",types)}else if(primaryTypes.length>1){logger$c.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map(t=>JSON.stringify(t)).join(\", \")}`,\"types\",types)}defineReadOnly(this,\"primaryType\",primaryTypes[0]);function checkCircular(type,found){if(found[type]){logger$c.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`,\"types\",types)}found[type]=true;Object.keys(links[type]).forEach(child=>{if(!parents[child]){return}checkCircular(child,found);Object.keys(found).forEach(subtype=>{subtypes[subtype][child]=true})});delete found[type]}checkCircular(this.primaryType,{});for(const name in subtypes){const st=Object.keys(subtypes[name]);st.sort();this._types[name]=encodeType(name,types[name])+st.map(t=>encodeType(t,types[t])).join(\"\")}}getEncoder(type){let encoder=this._encoderCache[type];if(!encoder){encoder=this._encoderCache[type]=this._getEncoder(type)}return encoder}_getEncoder(type){{const encoder=getBaseEncoder(type);if(encoder){return encoder}}const match=type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);if(match){const subtype=match[1];const subEncoder=this.getEncoder(subtype);const length=parseInt(match[3]);return value=>{if(length>=0&&value.length!==length){logger$c.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\",\"value\",value)}let result=value.map(subEncoder);if(this._types[subtype]){result=result.map(keccak256)}return keccak256(hexConcat(result))}}const fields=this.types[type];if(fields){const encodedType=id(this._types[type]);return value=>{const values=fields.map(({name:name,type:type})=>{const result=this.getEncoder(type)(value[name]);if(this._types[type]){return keccak256(result)}return result});values.unshift(encodedType);return hexConcat(values)}}return logger$c.throwArgumentError(`unknown type: ${type}`,\"type\",type)}encodeType(name){const result=this._types[name];if(!result){logger$c.throwArgumentError(`unknown type: ${JSON.stringify(name)}`,\"name\",name)}return result}encodeData(type,value){return this.getEncoder(type)(value)}hashStruct(name,value){return keccak256(this.encodeData(name,value))}encode(value){return this.encodeData(this.primaryType,value)}hash(value){return this.hashStruct(this.primaryType,value)}_visit(type,value,callback){{const encoder=getBaseEncoder(type);if(encoder){return callback(type,value)}}const match=type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);if(match){const subtype=match[1];const length=parseInt(match[3]);if(length>=0&&value.length!==length){logger$c.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\",\"value\",value)}return value.map(v=>this._visit(subtype,v,callback))}const fields=this.types[type];if(fields){return fields.reduce((accum,{name:name,type:type})=>{accum[name]=this._visit(type,value[name],callback);return accum},{})}return logger$c.throwArgumentError(`unknown type: ${type}`,\"type\",type)}visit(value,callback){return this._visit(this.primaryType,value,callback)}static from(types){return new TypedDataEncoder(types)}static getPrimaryType(types){return TypedDataEncoder.from(types).primaryType}static hashStruct(name,types,value){return TypedDataEncoder.from(types).hashStruct(name,value)}static hashDomain(domain){const domainFields=[];for(const name in domain){const type=domainFieldTypes[name];if(!type){logger$c.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`,\"domain\",domain)}domainFields.push({name:name,type:type})}domainFields.sort((a,b)=>{return domainFieldNames.indexOf(a.name)-domainFieldNames.indexOf(b.name)});return TypedDataEncoder.hashStruct(\"EIP712Domain\",{EIP712Domain:domainFields},domain)}static encode(domain,types,value){return hexConcat([\"0x1901\",TypedDataEncoder.hashDomain(domain),TypedDataEncoder.from(types).hash(value)])}static hash(domain,types,value){return keccak256(TypedDataEncoder.encode(domain,types,value))}static resolveNames(domain,types,value,resolveName){return __awaiter$1(this,void 0,void 0,function*(){domain=shallowCopy(domain);const ensCache={};if(domain.verifyingContract&&!isHexString(domain.verifyingContract,20)){ensCache[domain.verifyingContract]=\"0x\"}const encoder=TypedDataEncoder.from(types);encoder.visit(value,(type,value)=>{if(type===\"address\"&&!isHexString(value,20)){ensCache[value]=\"0x\"}return value});for(const name in ensCache){ensCache[name]=yield resolveName(name)}if(domain.verifyingContract&&ensCache[domain.verifyingContract]){domain.verifyingContract=ensCache[domain.verifyingContract]}value=encoder.visit(value,(type,value)=>{if(type===\"address\"&&ensCache[value]){return ensCache[value]}return value});return{domain:domain,value:value}})}static getPayload(domain,types,value){TypedDataEncoder.hashDomain(domain);const domainValues={};const domainTypes=[];domainFieldNames.forEach(name=>{const value=domain[name];if(value==null){return}domainValues[name]=domainChecks[name](value);domainTypes.push({name:name,type:domainFieldTypes[name]})});const encoder=TypedDataEncoder.from(types);const typesWithDomain=shallowCopy(types);if(typesWithDomain.EIP712Domain){logger$c.throwArgumentError(\"types must not contain EIP712Domain type\",\"types.EIP712Domain\",types)}else{typesWithDomain.EIP712Domain=domainTypes}encoder.encode(value);return{types:typesWithDomain,domain:domainValues,primaryType:encoder.primaryType,message:encoder.visit(value,(type,value)=>{if(type.match(/^bytes(\\d*)/)){return hexlify(arrayify(value))}if(type.match(/^u?int/)){return BigNumber.from(value).toString()}switch(type){case\"address\":return value.toLowerCase();case\"bool\":return!!value;case\"string\":if(typeof value!==\"string\"){logger$c.throwArgumentError(`invalid string`,\"value\",value)}return value}return logger$c.throwArgumentError(\"unsupported type\",\"type\",type)})}}}\"use strict\";\"use strict\";const logger$d=new Logger(version$4);class LogDescription extends Description{}class TransactionDescription extends Description{}class Indexed extends Description{static isIndexed(value){return!!(value&&value._isIndexed)}}function wrapAccessError(property,error){const wrap=new Error(`deferred error during ABI decoding triggered accessing ${property}`);wrap.error=error;return wrap}class Interface{constructor(fragments){logger$d.checkNew(new.target,Interface);let abi=[];if(typeof fragments===\"string\"){abi=JSON.parse(fragments)}else{abi=fragments}defineReadOnly(this,\"fragments\",abi.map(fragment=>{return Fragment.from(fragment)}).filter(fragment=>fragment!=null));defineReadOnly(this,\"_abiCoder\",getStatic(new.target,\"getAbiCoder\")());defineReadOnly(this,\"functions\",{});defineReadOnly(this,\"errors\",{});defineReadOnly(this,\"events\",{});defineReadOnly(this,\"structs\",{});this.fragments.forEach(fragment=>{let bucket=null;switch(fragment.type){case\"constructor\":if(this.deploy){logger$d.warn(\"duplicate definition - constructor\");return}defineReadOnly(this,\"deploy\",fragment);return;case\"function\":bucket=this.functions;break;case\"event\":bucket=this.events;break;default:return}let signature=fragment.format();if(bucket[signature]){logger$d.warn(\"duplicate definition - \"+signature);return}bucket[signature]=fragment});if(!this.deploy){defineReadOnly(this,\"deploy\",ConstructorFragment.from({payable:false,type:\"constructor\"}))}defineReadOnly(this,\"_isInterface\",true)}format(format){if(!format){format=FormatTypes.full}if(format===FormatTypes.sighash){logger$d.throwArgumentError(\"interface does not support formatting sighash\",\"format\",format)}const abi=this.fragments.map(fragment=>fragment.format(format));if(format===FormatTypes.json){return JSON.stringify(abi.map(j=>JSON.parse(j)))}return abi}static getAbiCoder(){return defaultAbiCoder}static getAddress(address){return getAddress(address)}static getSighash(functionFragment){return hexDataSlice(id(functionFragment.format()),0,4)}static getEventTopic(eventFragment){return id(eventFragment.format())}getFunction(nameOrSignatureOrSighash){if(isHexString(nameOrSignatureOrSighash)){for(const name in this.functions){if(nameOrSignatureOrSighash===this.getSighash(name)){return this.functions[name]}}logger$d.throwArgumentError(\"no matching function\",\"sighash\",nameOrSignatureOrSighash)}if(nameOrSignatureOrSighash.indexOf(\"(\")===-1){const name=nameOrSignatureOrSighash.trim();const matching=Object.keys(this.functions).filter(f=>f.split(\"(\")[0]===name);if(matching.length===0){logger$d.throwArgumentError(\"no matching function\",\"name\",name)}else if(matching.length>1){logger$d.throwArgumentError(\"multiple matching functions\",\"name\",name)}return this.functions[matching[0]]}const result=this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];if(!result){logger$d.throwArgumentError(\"no matching function\",\"signature\",nameOrSignatureOrSighash)}return result}getEvent(nameOrSignatureOrTopic){if(isHexString(nameOrSignatureOrTopic)){const topichash=nameOrSignatureOrTopic.toLowerCase();for(const name in this.events){if(topichash===this.getEventTopic(name)){return this.events[name]}}logger$d.throwArgumentError(\"no matching event\",\"topichash\",topichash)}if(nameOrSignatureOrTopic.indexOf(\"(\")===-1){const name=nameOrSignatureOrTopic.trim();const matching=Object.keys(this.events).filter(f=>f.split(\"(\")[0]===name);if(matching.length===0){logger$d.throwArgumentError(\"no matching event\",\"name\",name)}else if(matching.length>1){logger$d.throwArgumentError(\"multiple matching events\",\"name\",name)}return this.events[matching[0]]}const result=this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];if(!result){logger$d.throwArgumentError(\"no matching event\",\"signature\",nameOrSignatureOrTopic)}return result}getSighash(functionFragment){if(typeof functionFragment===\"string\"){functionFragment=this.getFunction(functionFragment)}return getStatic(this.constructor,\"getSighash\")(functionFragment)}getEventTopic(eventFragment){if(typeof eventFragment===\"string\"){eventFragment=this.getEvent(eventFragment)}return getStatic(this.constructor,\"getEventTopic\")(eventFragment)}_decodeParams(params,data){return this._abiCoder.decode(params,data)}_encodeParams(params,values){return this._abiCoder.encode(params,values)}encodeDeploy(values){return this._encodeParams(this.deploy.inputs,values||[])}decodeFunctionData(functionFragment,data){if(typeof functionFragment===\"string\"){functionFragment=this.getFunction(functionFragment)}const bytes=arrayify(data);if(hexlify(bytes.slice(0,4))!==this.getSighash(functionFragment)){logger$d.throwArgumentError(`data signature does not match function ${functionFragment.name}.`,\"data\",hexlify(bytes))}return this._decodeParams(functionFragment.inputs,bytes.slice(4))}encodeFunctionData(functionFragment,values){if(typeof functionFragment===\"string\"){functionFragment=this.getFunction(functionFragment)}return hexlify(concat([this.getSighash(functionFragment),this._encodeParams(functionFragment.inputs,values||[])]))}decodeFunctionResult(functionFragment,data){if(typeof functionFragment===\"string\"){functionFragment=this.getFunction(functionFragment)}let bytes=arrayify(data);let reason=null;let errorSignature=null;switch(bytes.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(functionFragment.outputs,bytes)}catch(error){}break;case 4:if(hexlify(bytes.slice(0,4))===\"0x08c379a0\"){errorSignature=\"Error(string)\";reason=this._abiCoder.decode([\"string\"],bytes.slice(4))[0]}break}return logger$d.throwError(\"call revert exception\",Logger.errors.CALL_EXCEPTION,{method:functionFragment.format(),errorSignature:errorSignature,errorArgs:[reason],reason:reason})}encodeFunctionResult(functionFragment,values){if(typeof functionFragment===\"string\"){functionFragment=this.getFunction(functionFragment)}return hexlify(this._abiCoder.encode(functionFragment.outputs,values||[]))}encodeFilterTopics(eventFragment,values){if(typeof eventFragment===\"string\"){eventFragment=this.getEvent(eventFragment)}if(values.length>eventFragment.inputs.length){logger$d.throwError(\"too many arguments for \"+eventFragment.format(),Logger.errors.UNEXPECTED_ARGUMENT,{argument:\"values\",value:values})}let topics=[];if(!eventFragment.anonymous){topics.push(this.getEventTopic(eventFragment))}const encodeTopic=(param,value)=>{if(param.type===\"string\"){return id(value)}else if(param.type===\"bytes\"){return keccak256(hexlify(value))}if(param.type===\"address\"){this._abiCoder.encode([\"address\"],[value])}return hexZeroPad(hexlify(value),32)};values.forEach((value,index)=>{let param=eventFragment.inputs[index];if(!param.indexed){if(value!=null){logger$d.throwArgumentError(\"cannot filter non-indexed parameters; must be null\",\"contract.\"+param.name,value)}return}if(value==null){topics.push(null)}else if(param.baseType===\"array\"||param.baseType===\"tuple\"){logger$d.throwArgumentError(\"filtering with tuples or arrays not supported\",\"contract.\"+param.name,value)}else if(Array.isArray(value)){topics.push(value.map(value=>encodeTopic(param,value)))}else{topics.push(encodeTopic(param,value))}});while(topics.length&&topics[topics.length-1]===null){topics.pop()}return topics}encodeEventLog(eventFragment,values){if(typeof eventFragment===\"string\"){eventFragment=this.getEvent(eventFragment)}const topics=[];const dataTypes=[];const dataValues=[];if(!eventFragment.anonymous){topics.push(this.getEventTopic(eventFragment))}if(values.length!==eventFragment.inputs.length){logger$d.throwArgumentError(\"event arguments/values mismatch\",\"values\",values)}eventFragment.inputs.forEach((param,index)=>{const value=values[index];if(param.indexed){if(param.type===\"string\"){topics.push(id(value))}else if(param.type===\"bytes\"){topics.push(keccak256(value))}else if(param.baseType===\"tuple\"||param.baseType===\"array\"){throw new Error(\"not implemented\")}else{topics.push(this._abiCoder.encode([param.type],[value]))}}else{dataTypes.push(param);dataValues.push(value)}});return{data:this._abiCoder.encode(dataTypes,dataValues),topics:topics}}decodeEventLog(eventFragment,data,topics){if(typeof eventFragment===\"string\"){eventFragment=this.getEvent(eventFragment)}if(topics!=null&&!eventFragment.anonymous){let topicHash=this.getEventTopic(eventFragment);if(!isHexString(topics[0],32)||topics[0].toLowerCase()!==topicHash){logger$d.throwError(\"fragment/topic mismatch\",Logger.errors.INVALID_ARGUMENT,{argument:\"topics[0]\",expected:topicHash,value:topics[0]})}topics=topics.slice(1)}let indexed=[];let nonIndexed=[];let dynamic=[];eventFragment.inputs.forEach((param,index)=>{if(param.indexed){if(param.type===\"string\"||param.type===\"bytes\"||param.baseType===\"tuple\"||param.baseType===\"array\"){indexed.push(ParamType.fromObject({type:\"bytes32\",name:param.name}));dynamic.push(true)}else{indexed.push(param);dynamic.push(false)}}else{nonIndexed.push(param);dynamic.push(false)}});let resultIndexed=topics!=null?this._abiCoder.decode(indexed,concat(topics)):null;let resultNonIndexed=this._abiCoder.decode(nonIndexed,data,true);let result=[];let nonIndexedIndex=0,indexedIndex=0;eventFragment.inputs.forEach((param,index)=>{if(param.indexed){if(resultIndexed==null){result[index]=new Indexed({_isIndexed:true,hash:null})}else if(dynamic[index]){result[index]=new Indexed({_isIndexed:true,hash:resultIndexed[indexedIndex++]})}else{try{result[index]=resultIndexed[indexedIndex++]}catch(error){result[index]=error}}}else{try{result[index]=resultNonIndexed[nonIndexedIndex++]}catch(error){result[index]=error}}if(param.name&&result[param.name]==null){const value=result[index];if(value instanceof Error){Object.defineProperty(result,param.name,{get:()=>{throw wrapAccessError(`property ${JSON.stringify(param.name)}`,value)}})}else{result[param.name]=value}}});for(let i=0;i<result.length;i++){const value=result[i];if(value instanceof Error){Object.defineProperty(result,i,{get:()=>{throw wrapAccessError(`index ${i}`,value)}})}}return Object.freeze(result)}parseTransaction(tx){let fragment=this.getFunction(tx.data.substring(0,10).toLowerCase());if(!fragment){return null}return new TransactionDescription({args:this._abiCoder.decode(fragment.inputs,\"0x\"+tx.data.substring(10)),functionFragment:fragment,name:fragment.name,signature:fragment.format(),sighash:this.getSighash(fragment),value:BigNumber.from(tx.value||\"0\")})}parseLog(log){let fragment=this.getEvent(log.topics[0]);if(!fragment||fragment.anonymous){return null}return new LogDescription({eventFragment:fragment,name:fragment.name,signature:fragment.format(),topic:this.getEventTopic(fragment),args:this.decodeEventLog(fragment,log.data,log.topics)})}static isInterface(value){return!!(value&&value._isInterface)}}\"use strict\";const version$9=\"abstract-provider/5.1.0\";\"use strict\";const logger$e=new Logger(version$9);class ForkEvent extends Description{static isForkEvent(value){return!!(value&&value._isForkEvent)}}class BlockForkEvent extends ForkEvent{constructor(blockHash,expiry){if(!isHexString(blockHash,32)){logger$e.throwArgumentError(\"invalid blockHash\",\"blockHash\",blockHash)}super({_isForkEvent:true,_isBlockForkEvent:true,expiry:expiry||0,blockHash:blockHash})}}class TransactionForkEvent extends ForkEvent{constructor(hash,expiry){if(!isHexString(hash,32)){logger$e.throwArgumentError(\"invalid transaction hash\",\"hash\",hash)}super({_isForkEvent:true,_isTransactionForkEvent:true,expiry:expiry||0,hash:hash})}}class TransactionOrderForkEvent extends ForkEvent{constructor(beforeHash,afterHash,expiry){if(!isHexString(beforeHash,32)){logger$e.throwArgumentError(\"invalid transaction hash\",\"beforeHash\",beforeHash)}if(!isHexString(afterHash,32)){logger$e.throwArgumentError(\"invalid transaction hash\",\"afterHash\",afterHash)}super({_isForkEvent:true,_isTransactionOrderForkEvent:true,expiry:expiry||0,beforeHash:beforeHash,afterHash:afterHash})}}class Provider{constructor(){logger$e.checkAbstract(new.target,Provider);defineReadOnly(this,\"_isProvider\",true)}addListener(eventName,listener){return this.on(eventName,listener)}removeListener(eventName,listener){return this.off(eventName,listener)}static isProvider(value){return!!(value&&value._isProvider)}}const version$a=\"abstract-signer/5.1.0\";\"use strict\";var __awaiter$2=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$f=new Logger(version$a);const allowedTransactionKeys=[\"accessList\",\"chainId\",\"data\",\"from\",\"gasLimit\",\"gasPrice\",\"nonce\",\"to\",\"type\",\"value\"];const forwardErrors=[Logger.errors.INSUFFICIENT_FUNDS,Logger.errors.NONCE_EXPIRED,Logger.errors.REPLACEMENT_UNDERPRICED];class Signer{constructor(){logger$f.checkAbstract(new.target,Signer);defineReadOnly(this,\"_isSigner\",true)}getBalance(blockTag){return __awaiter$2(this,void 0,void 0,function*(){this._checkProvider(\"getBalance\");return yield this.provider.getBalance(this.getAddress(),blockTag)})}getTransactionCount(blockTag){return __awaiter$2(this,void 0,void 0,function*(){this._checkProvider(\"getTransactionCount\");return yield this.provider.getTransactionCount(this.getAddress(),blockTag)})}estimateGas(transaction){return __awaiter$2(this,void 0,void 0,function*(){this._checkProvider(\"estimateGas\");const tx=yield resolveProperties(this.checkTransaction(transaction));return yield this.provider.estimateGas(tx)})}call(transaction,blockTag){return __awaiter$2(this,void 0,void 0,function*(){this._checkProvider(\"call\");const tx=yield resolveProperties(this.checkTransaction(transaction));return yield this.provider.call(tx,blockTag)})}sendTransaction(transaction){this._checkProvider(\"sendTransaction\");return this.populateTransaction(transaction).then(tx=>{return this.signTransaction(tx).then(signedTx=>{return this.provider.sendTransaction(signedTx)})})}getChainId(){return __awaiter$2(this,void 0,void 0,function*(){this._checkProvider(\"getChainId\");const network=yield this.provider.getNetwork();return network.chainId})}getGasPrice(){return __awaiter$2(this,void 0,void 0,function*(){this._checkProvider(\"getGasPrice\");return yield this.provider.getGasPrice()})}resolveName(name){return __awaiter$2(this,void 0,void 0,function*(){this._checkProvider(\"resolveName\");return yield this.provider.resolveName(name)})}checkTransaction(transaction){for(const key in transaction){if(allowedTransactionKeys.indexOf(key)===-1){logger$f.throwArgumentError(\"invalid transaction key: \"+key,\"transaction\",transaction)}}const tx=shallowCopy(transaction);if(tx.from==null){tx.from=this.getAddress()}else{tx.from=Promise.all([Promise.resolve(tx.from),this.getAddress()]).then(result=>{if(result[0].toLowerCase()!==result[1].toLowerCase()){logger$f.throwArgumentError(\"from address mismatch\",\"transaction\",transaction)}return result[0]})}return tx}populateTransaction(transaction){return __awaiter$2(this,void 0,void 0,function*(){const tx=yield resolveProperties(this.checkTransaction(transaction));if(tx.to!=null){tx.to=Promise.resolve(tx.to).then(to=>__awaiter$2(this,void 0,void 0,function*(){if(to==null){return null}const address=yield this.resolveName(to);if(address==null){logger$f.throwArgumentError(\"provided ENS name resolves to null\",\"tx.to\",to)}return address}))}if(tx.gasPrice==null){tx.gasPrice=this.getGasPrice()}if(tx.nonce==null){tx.nonce=this.getTransactionCount(\"pending\")}if(tx.gasLimit==null){tx.gasLimit=this.estimateGas(tx).catch(error=>{if(forwardErrors.indexOf(error.code)>=0){throw error}return logger$f.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:error,tx:tx})})}if(tx.chainId==null){tx.chainId=this.getChainId()}else{tx.chainId=Promise.all([Promise.resolve(tx.chainId),this.getChainId()]).then(results=>{if(results[1]!==0&&results[0]!==results[1]){logger$f.throwArgumentError(\"chainId address mismatch\",\"transaction\",transaction)}return results[0]})}return yield resolveProperties(tx)})}_checkProvider(operation){if(!this.provider){logger$f.throwError(\"missing provider\",Logger.errors.UNSUPPORTED_OPERATION,{operation:operation||\"_checkProvider\"})}}static isSigner(value){return!!(value&&value._isSigner)}}class VoidSigner extends Signer{constructor(address,provider){logger$f.checkNew(new.target,VoidSigner);super();defineReadOnly(this,\"address\",address);defineReadOnly(this,\"provider\",provider||null)}getAddress(){return Promise.resolve(this.address)}_fail(message,operation){return Promise.resolve().then(()=>{logger$f.throwError(message,Logger.errors.UNSUPPORTED_OPERATION,{operation:operation})})}signMessage(message){return this._fail(\"VoidSigner cannot sign messages\",\"signMessage\")}signTransaction(transaction){return this._fail(\"VoidSigner cannot sign transactions\",\"signTransaction\")}_signTypedData(domain,types,value){return this._fail(\"VoidSigner cannot sign typed data\",\"signTypedData\")}connect(provider){return new VoidSigner(this.address,provider)}}var minimalisticAssert=assert;function assert(val,msg){if(!val)throw new Error(msg||\"Assertion failed\")}assert.equal=function assertEqual(l,r,msg){if(l!=r)throw new Error(msg||\"Assertion failed: \"+l+\" != \"+r)};var inherits_browser=createCommonjsModule(function(module){if(typeof Object.create===\"function\"){module.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}}else{module.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}}});var inherits=createCommonjsModule(function(module){try{var util=null;if(typeof util.inherits!==\"function\")throw\"\";module.exports=util.inherits}catch(e){module.exports=inherits_browser}});\"use strict\";var inherits_1=inherits;function toArray(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg===\"string\"){if(!enc){for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);var hi=c>>8;var lo=c&255;if(hi)res.push(hi,lo);else res.push(lo)}}else if(enc===\"hex\"){msg=msg.replace(/[^a-z0-9]+/gi,\"\");if(msg.length%2!==0)msg=\"0\"+msg;for(i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16))}}else{for(i=0;i<msg.length;i++)res[i]=msg[i]|0}return res}var toArray_1=toArray;function toHex$1(msg){var res=\"\";for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res}var toHex_1=toHex$1;function htonl(w){var res=w>>>24|w>>>8&65280|w<<8&16711680|(w&255)<<24;return res>>>0}var htonl_1=htonl;function toHex32(msg,endian){var res=\"\";for(var i=0;i<msg.length;i++){var w=msg[i];if(endian===\"little\")w=htonl(w);res+=zero8(w.toString(16))}return res}var toHex32_1=toHex32;function zero2(word){if(word.length===1)return\"0\"+word;else return word}var zero2_1=zero2;function zero8(word){if(word.length===7)return\"0\"+word;else if(word.length===6)return\"00\"+word;else if(word.length===5)return\"000\"+word;else if(word.length===4)return\"0000\"+word;else if(word.length===3)return\"00000\"+word;else if(word.length===2)return\"000000\"+word;else if(word.length===1)return\"0000000\"+word;else return word}var zero8_1=zero8;function join32(msg,start,end,endian){var len=end-start;minimalisticAssert(len%4===0);var res=new Array(len/4);for(var i=0,k=start;i<res.length;i++,k+=4){var w;if(endian===\"big\")w=msg[k]<<24|msg[k+1]<<16|msg[k+2]<<8|msg[k+3];else w=msg[k+3]<<24|msg[k+2]<<16|msg[k+1]<<8|msg[k];res[i]=w>>>0}return res}var join32_1=join32;function split32(msg,endian){var res=new Array(msg.length*4);for(var i=0,k=0;i<msg.length;i++,k+=4){var m=msg[i];if(endian===\"big\"){res[k]=m>>>24;res[k+1]=m>>>16&255;res[k+2]=m>>>8&255;res[k+3]=m&255}else{res[k+3]=m>>>24;res[k+2]=m>>>16&255;res[k+1]=m>>>8&255;res[k]=m&255}}return res}var split32_1=split32;function rotr32(w,b){return w>>>b|w<<32-b}var rotr32_1=rotr32;function rotl32(w,b){return w<<b|w>>>32-b}var rotl32_1=rotl32;function sum32(a,b){return a+b>>>0}var sum32_1=sum32;function sum32_3(a,b,c){return a+b+c>>>0}var sum32_3_1=sum32_3;function sum32_4(a,b,c,d){return a+b+c+d>>>0}var sum32_4_1=sum32_4;function sum32_5(a,b,c,d,e){return a+b+c+d+e>>>0}var sum32_5_1=sum32_5;function sum64(buf,pos,ah,al){var bh=buf[pos];var bl=buf[pos+1];var lo=al+bl>>>0;var hi=(lo<al?1:0)+ah+bh;buf[pos]=hi>>>0;buf[pos+1]=lo}var sum64_1=sum64;function sum64_hi(ah,al,bh,bl){var lo=al+bl>>>0;var hi=(lo<al?1:0)+ah+bh;return hi>>>0}var sum64_hi_1=sum64_hi;function sum64_lo(ah,al,bh,bl){var lo=al+bl;return lo>>>0}var sum64_lo_1=sum64_lo;function sum64_4_hi(ah,al,bh,bl,ch,cl,dh,dl){var carry=0;var lo=al;lo=lo+bl>>>0;carry+=lo<al?1:0;lo=lo+cl>>>0;carry+=lo<cl?1:0;lo=lo+dl>>>0;carry+=lo<dl?1:0;var hi=ah+bh+ch+dh+carry;return hi>>>0}var sum64_4_hi_1=sum64_4_hi;function sum64_4_lo(ah,al,bh,bl,ch,cl,dh,dl){var lo=al+bl+cl+dl;return lo>>>0}var sum64_4_lo_1=sum64_4_lo;function sum64_5_hi(ah,al,bh,bl,ch,cl,dh,dl,eh,el){var carry=0;var lo=al;lo=lo+bl>>>0;carry+=lo<al?1:0;lo=lo+cl>>>0;carry+=lo<cl?1:0;lo=lo+dl>>>0;carry+=lo<dl?1:0;lo=lo+el>>>0;carry+=lo<el?1:0;var hi=ah+bh+ch+dh+eh+carry;return hi>>>0}var sum64_5_hi_1=sum64_5_hi;function sum64_5_lo(ah,al,bh,bl,ch,cl,dh,dl,eh,el){var lo=al+bl+cl+dl+el;return lo>>>0}var sum64_5_lo_1=sum64_5_lo;function rotr64_hi(ah,al,num){var r=al<<32-num|ah>>>num;return r>>>0}var rotr64_hi_1=rotr64_hi;function rotr64_lo(ah,al,num){var r=ah<<32-num|al>>>num;return r>>>0}var rotr64_lo_1=rotr64_lo;function shr64_hi(ah,al,num){return ah>>>num}var shr64_hi_1=shr64_hi;function shr64_lo(ah,al,num){var r=ah<<32-num|al>>>num;return r>>>0}var shr64_lo_1=shr64_lo;var utils={inherits:inherits_1,toArray:toArray_1,toHex:toHex_1,htonl:htonl_1,toHex32:toHex32_1,zero2:zero2_1,zero8:zero8_1,join32:join32_1,split32:split32_1,rotr32:rotr32_1,rotl32:rotl32_1,sum32:sum32_1,sum32_3:sum32_3_1,sum32_4:sum32_4_1,sum32_5:sum32_5_1,sum64:sum64_1,sum64_hi:sum64_hi_1,sum64_lo:sum64_lo_1,sum64_4_hi:sum64_4_hi_1,sum64_4_lo:sum64_4_lo_1,sum64_5_hi:sum64_5_hi_1,sum64_5_lo:sum64_5_lo_1,rotr64_hi:rotr64_hi_1,rotr64_lo:rotr64_lo_1,shr64_hi:shr64_hi_1,shr64_lo:shr64_lo_1};\"use strict\";function BlockHash(){this.pending=null;this.pendingTotal=0;this.blockSize=this.constructor.blockSize;this.outSize=this.constructor.outSize;this.hmacStrength=this.constructor.hmacStrength;this.padLength=this.constructor.padLength/8;this.endian=\"big\";this._delta8=this.blockSize/8;this._delta32=this.blockSize/32}var BlockHash_1=BlockHash;BlockHash.prototype.update=function update(msg,enc){msg=utils.toArray(msg,enc);if(!this.pending)this.pending=msg;else this.pending=this.pending.concat(msg);this.pendingTotal+=msg.length;if(this.pending.length>=this._delta8){msg=this.pending;var r=msg.length%this._delta8;this.pending=msg.slice(msg.length-r,msg.length);if(this.pending.length===0)this.pending=null;msg=utils.join32(msg,0,msg.length-r,this.endian);for(var i=0;i<msg.length;i+=this._delta32)this._update(msg,i,i+this._delta32)}return this};BlockHash.prototype.digest=function digest(enc){this.update(this._pad());minimalisticAssert(this.pending===null);return this._digest(enc)};BlockHash.prototype._pad=function pad(){var len=this.pendingTotal;var bytes=this._delta8;var k=bytes-(len+this.padLength)%bytes;var res=new Array(k+this.padLength);res[0]=128;for(var i=1;i<k;i++)res[i]=0;len<<=3;if(this.endian===\"big\"){for(var t=8;t<this.padLength;t++)res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=len>>>24&255;res[i++]=len>>>16&255;res[i++]=len>>>8&255;res[i++]=len&255}else{res[i++]=len&255;res[i++]=len>>>8&255;res[i++]=len>>>16&255;res[i++]=len>>>24&255;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;for(t=8;t<this.padLength;t++)res[i++]=0}return res};var common={BlockHash:BlockHash_1};\"use strict\";var rotr32$1=utils.rotr32;function ft_1(s,x,y,z){if(s===0)return ch32(x,y,z);if(s===1||s===3)return p32(x,y,z);if(s===2)return maj32(x,y,z)}var ft_1_1=ft_1;function ch32(x,y,z){return x&y^~x&z}var ch32_1=ch32;function maj32(x,y,z){return x&y^x&z^y&z}var maj32_1=maj32;function p32(x,y,z){return x^y^z}var p32_1=p32;function s0_256(x){return rotr32$1(x,2)^rotr32$1(x,13)^rotr32$1(x,22)}var s0_256_1=s0_256;function s1_256(x){return rotr32$1(x,6)^rotr32$1(x,11)^rotr32$1(x,25)}var s1_256_1=s1_256;function g0_256(x){return rotr32$1(x,7)^rotr32$1(x,18)^x>>>3}var g0_256_1=g0_256;function g1_256(x){return rotr32$1(x,17)^rotr32$1(x,19)^x>>>10}var g1_256_1=g1_256;var common$1={ft_1:ft_1_1,ch32:ch32_1,maj32:maj32_1,p32:p32_1,s0_256:s0_256_1,s1_256:s1_256_1,g0_256:g0_256_1,g1_256:g1_256_1};\"use strict\";var rotl32$1=utils.rotl32;var sum32$1=utils.sum32;var sum32_5$1=utils.sum32_5;var ft_1$1=common$1.ft_1;var BlockHash$1=common.BlockHash;var sha1_K=[1518500249,1859775393,2400959708,3395469782];function SHA1(){if(!(this instanceof SHA1))return new SHA1;BlockHash$1.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.W=new Array(80)}utils.inherits(SHA1,BlockHash$1);var _1=SHA1;SHA1.blockSize=512;SHA1.outSize=160;SHA1.hmacStrength=80;SHA1.padLength=64;SHA1.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=rotl32$1(W[i-3]^W[i-8]^W[i-14]^W[i-16],1);var a=this.h[0];var b=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];for(i=0;i<W.length;i++){var s=~~(i/20);var t=sum32_5$1(rotl32$1(a,5),ft_1$1(s,b,c,d),e,W[i],sha1_K[s]);e=d;d=c;c=rotl32$1(b,30);b=a;a=t}this.h[0]=sum32$1(this.h[0],a);this.h[1]=sum32$1(this.h[1],b);this.h[2]=sum32$1(this.h[2],c);this.h[3]=sum32$1(this.h[3],d);this.h[4]=sum32$1(this.h[4],e)};SHA1.prototype._digest=function digest(enc){if(enc===\"hex\")return utils.toHex32(this.h,\"big\");else return utils.split32(this.h,\"big\")};\"use strict\";var sum32$2=utils.sum32;var sum32_4$1=utils.sum32_4;var sum32_5$2=utils.sum32_5;var ch32$1=common$1.ch32;var maj32$1=common$1.maj32;var s0_256$1=common$1.s0_256;var s1_256$1=common$1.s1_256;var g0_256$1=common$1.g0_256;var g1_256$1=common$1.g1_256;var BlockHash$2=common.BlockHash;var sha256_K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function SHA256(){if(!(this instanceof SHA256))return new SHA256;BlockHash$2.call(this);this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];this.k=sha256_K;this.W=new Array(64)}utils.inherits(SHA256,BlockHash$2);var _256=SHA256;SHA256.blockSize=512;SHA256.outSize=256;SHA256.hmacStrength=192;SHA256.padLength=64;SHA256.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=sum32_4$1(g1_256$1(W[i-2]),W[i-7],g0_256$1(W[i-15]),W[i-16]);var a=this.h[0];var b=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];var f=this.h[5];var g=this.h[6];var h=this.h[7];minimalisticAssert(this.k.length===W.length);for(i=0;i<W.length;i++){var T1=sum32_5$2(h,s1_256$1(e),ch32$1(e,f,g),this.k[i],W[i]);var T2=sum32$2(s0_256$1(a),maj32$1(a,b,c));h=g;g=f;f=e;e=sum32$2(d,T1);d=c;c=b;b=a;a=sum32$2(T1,T2)}this.h[0]=sum32$2(this.h[0],a);this.h[1]=sum32$2(this.h[1],b);this.h[2]=sum32$2(this.h[2],c);this.h[3]=sum32$2(this.h[3],d);this.h[4]=sum32$2(this.h[4],e);this.h[5]=sum32$2(this.h[5],f);this.h[6]=sum32$2(this.h[6],g);this.h[7]=sum32$2(this.h[7],h)};SHA256.prototype._digest=function digest(enc){if(enc===\"hex\")return utils.toHex32(this.h,\"big\");else return utils.split32(this.h,\"big\")};\"use strict\";function SHA224(){if(!(this instanceof SHA224))return new SHA224;_256.call(this);this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}utils.inherits(SHA224,_256);var _224=SHA224;SHA224.blockSize=512;SHA224.outSize=224;SHA224.hmacStrength=192;SHA224.padLength=64;SHA224.prototype._digest=function digest(enc){if(enc===\"hex\")return utils.toHex32(this.h.slice(0,7),\"big\");else return utils.split32(this.h.slice(0,7),\"big\")};\"use strict\";var rotr64_hi$1=utils.rotr64_hi;var rotr64_lo$1=utils.rotr64_lo;var shr64_hi$1=utils.shr64_hi;var shr64_lo$1=utils.shr64_lo;var sum64$1=utils.sum64;var sum64_hi$1=utils.sum64_hi;var sum64_lo$1=utils.sum64_lo;var sum64_4_hi$1=utils.sum64_4_hi;var sum64_4_lo$1=utils.sum64_4_lo;var sum64_5_hi$1=utils.sum64_5_hi;var sum64_5_lo$1=utils.sum64_5_lo;var BlockHash$3=common.BlockHash;var sha512_K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function SHA512(){if(!(this instanceof SHA512))return new SHA512;BlockHash$3.call(this);this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209];this.k=sha512_K;this.W=new Array(160)}utils.inherits(SHA512,BlockHash$3);var _512=SHA512;SHA512.blockSize=1024;SHA512.outSize=512;SHA512.hmacStrength=192;SHA512.padLength=128;SHA512.prototype._prepareBlock=function _prepareBlock(msg,start){var W=this.W;for(var i=0;i<32;i++)W[i]=msg[start+i];for(;i<W.length;i+=2){var c0_hi=g1_512_hi(W[i-4],W[i-3]);var c0_lo=g1_512_lo(W[i-4],W[i-3]);var c1_hi=W[i-14];var c1_lo=W[i-13];var c2_hi=g0_512_hi(W[i-30],W[i-29]);var c2_lo=g0_512_lo(W[i-30],W[i-29]);var c3_hi=W[i-32];var c3_lo=W[i-31];W[i]=sum64_4_hi$1(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo);W[i+1]=sum64_4_lo$1(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo)}};SHA512.prototype._update=function _update(msg,start){this._prepareBlock(msg,start);var W=this.W;var ah=this.h[0];var al=this.h[1];var bh=this.h[2];var bl=this.h[3];var ch=this.h[4];var cl=this.h[5];var dh=this.h[6];var dl=this.h[7];var eh=this.h[8];var el=this.h[9];var fh=this.h[10];var fl=this.h[11];var gh=this.h[12];var gl=this.h[13];var hh=this.h[14];var hl=this.h[15];minimalisticAssert(this.k.length===W.length);for(var i=0;i<W.length;i+=2){var c0_hi=hh;var c0_lo=hl;var c1_hi=s1_512_hi(eh,el);var c1_lo=s1_512_lo(eh,el);var c2_hi=ch64_hi(eh,el,fh,fl,gh,gl);var c2_lo=ch64_lo(eh,el,fh,fl,gh,gl);var c3_hi=this.k[i];var c3_lo=this.k[i+1];var c4_hi=W[i];var c4_lo=W[i+1];var T1_hi=sum64_5_hi$1(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo,c4_hi,c4_lo);var T1_lo=sum64_5_lo$1(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo,c4_hi,c4_lo);c0_hi=s0_512_hi(ah,al);c0_lo=s0_512_lo(ah,al);c1_hi=maj64_hi(ah,al,bh,bl,ch,cl);c1_lo=maj64_lo(ah,al,bh,bl,ch,cl);var T2_hi=sum64_hi$1(c0_hi,c0_lo,c1_hi,c1_lo);var T2_lo=sum64_lo$1(c0_hi,c0_lo,c1_hi,c1_lo);hh=gh;hl=gl;gh=fh;gl=fl;fh=eh;fl=el;eh=sum64_hi$1(dh,dl,T1_hi,T1_lo);el=sum64_lo$1(dl,dl,T1_hi,T1_lo);dh=ch;dl=cl;ch=bh;cl=bl;bh=ah;bl=al;ah=sum64_hi$1(T1_hi,T1_lo,T2_hi,T2_lo);al=sum64_lo$1(T1_hi,T1_lo,T2_hi,T2_lo)}sum64$1(this.h,0,ah,al);sum64$1(this.h,2,bh,bl);sum64$1(this.h,4,ch,cl);sum64$1(this.h,6,dh,dl);sum64$1(this.h,8,eh,el);sum64$1(this.h,10,fh,fl);sum64$1(this.h,12,gh,gl);sum64$1(this.h,14,hh,hl)};SHA512.prototype._digest=function digest(enc){if(enc===\"hex\")return utils.toHex32(this.h,\"big\");else return utils.split32(this.h,\"big\")};function ch64_hi(xh,xl,yh,yl,zh){var r=xh&yh^~xh&zh;if(r<0)r+=4294967296;return r}function ch64_lo(xh,xl,yh,yl,zh,zl){var r=xl&yl^~xl&zl;if(r<0)r+=4294967296;return r}function maj64_hi(xh,xl,yh,yl,zh){var r=xh&yh^xh&zh^yh&zh;if(r<0)r+=4294967296;return r}function maj64_lo(xh,xl,yh,yl,zh,zl){var r=xl&yl^xl&zl^yl&zl;if(r<0)r+=4294967296;return r}function s0_512_hi(xh,xl){var c0_hi=rotr64_hi$1(xh,xl,28);var c1_hi=rotr64_hi$1(xl,xh,2);var c2_hi=rotr64_hi$1(xl,xh,7);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function s0_512_lo(xh,xl){var c0_lo=rotr64_lo$1(xh,xl,28);var c1_lo=rotr64_lo$1(xl,xh,2);var c2_lo=rotr64_lo$1(xl,xh,7);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function s1_512_hi(xh,xl){var c0_hi=rotr64_hi$1(xh,xl,14);var c1_hi=rotr64_hi$1(xh,xl,18);var c2_hi=rotr64_hi$1(xl,xh,9);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function s1_512_lo(xh,xl){var c0_lo=rotr64_lo$1(xh,xl,14);var c1_lo=rotr64_lo$1(xh,xl,18);var c2_lo=rotr64_lo$1(xl,xh,9);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function g0_512_hi(xh,xl){var c0_hi=rotr64_hi$1(xh,xl,1);var c1_hi=rotr64_hi$1(xh,xl,8);var c2_hi=shr64_hi$1(xh,xl,7);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function g0_512_lo(xh,xl){var c0_lo=rotr64_lo$1(xh,xl,1);var c1_lo=rotr64_lo$1(xh,xl,8);var c2_lo=shr64_lo$1(xh,xl,7);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function g1_512_hi(xh,xl){var c0_hi=rotr64_hi$1(xh,xl,19);var c1_hi=rotr64_hi$1(xl,xh,29);var c2_hi=shr64_hi$1(xh,xl,6);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function g1_512_lo(xh,xl){var c0_lo=rotr64_lo$1(xh,xl,19);var c1_lo=rotr64_lo$1(xl,xh,29);var c2_lo=shr64_lo$1(xh,xl,6);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}\"use strict\";function SHA384(){if(!(this instanceof SHA384))return new SHA384;_512.call(this);this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}utils.inherits(SHA384,_512);var _384=SHA384;SHA384.blockSize=1024;SHA384.outSize=384;SHA384.hmacStrength=192;SHA384.padLength=128;SHA384.prototype._digest=function digest(enc){if(enc===\"hex\")return utils.toHex32(this.h.slice(0,12),\"big\");else return utils.split32(this.h.slice(0,12),\"big\")};\"use strict\";var sha1=_1;var sha224=_224;var sha256=_256;var sha384=_384;var sha512=_512;var sha={sha1:sha1,sha224:sha224,sha256:sha256,sha384:sha384,sha512:sha512};\"use strict\";var rotl32$2=utils.rotl32;var sum32$3=utils.sum32;var sum32_3$1=utils.sum32_3;var sum32_4$2=utils.sum32_4;var BlockHash$4=common.BlockHash;function RIPEMD160(){if(!(this instanceof RIPEMD160))return new RIPEMD160;BlockHash$4.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.endian=\"little\"}utils.inherits(RIPEMD160,BlockHash$4);var ripemd160=RIPEMD160;RIPEMD160.blockSize=512;RIPEMD160.outSize=160;RIPEMD160.hmacStrength=192;RIPEMD160.padLength=64;RIPEMD160.prototype._update=function update(msg,start){var A=this.h[0];var B=this.h[1];var C=this.h[2];var D=this.h[3];var E=this.h[4];var Ah=A;var Bh=B;var Ch=C;var Dh=D;var Eh=E;for(var j=0;j<80;j++){var T=sum32$3(rotl32$2(sum32_4$2(A,f(j,B,C,D),msg[r[j]+start],K(j)),s[j]),E);A=E;E=D;D=rotl32$2(C,10);C=B;B=T;T=sum32$3(rotl32$2(sum32_4$2(Ah,f(79-j,Bh,Ch,Dh),msg[rh[j]+start],Kh(j)),sh[j]),Eh);Ah=Eh;Eh=Dh;Dh=rotl32$2(Ch,10);Ch=Bh;Bh=T}T=sum32_3$1(this.h[1],C,Dh);this.h[1]=sum32_3$1(this.h[2],D,Eh);this.h[2]=sum32_3$1(this.h[3],E,Ah);this.h[3]=sum32_3$1(this.h[4],A,Bh);this.h[4]=sum32_3$1(this.h[0],B,Ch);this.h[0]=T};RIPEMD160.prototype._digest=function digest(enc){if(enc===\"hex\")return utils.toHex32(this.h,\"little\");else return utils.split32(this.h,\"little\")};function f(j,x,y,z){if(j<=15)return x^y^z;else if(j<=31)return x&y|~x&z;else if(j<=47)return(x|~y)^z;else if(j<=63)return x&z|y&~z;else return x^(y|~z)}function K(j){if(j<=15)return 0;else if(j<=31)return 1518500249;else if(j<=47)return 1859775393;else if(j<=63)return 2400959708;else return 2840853838}function Kh(j){if(j<=15)return 1352829926;else if(j<=31)return 1548603684;else if(j<=47)return 1836072691;else if(j<=63)return 2053994217;else return 0}var r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var rh=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var s=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var sh=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];var ripemd={ripemd160:ripemd160};\"use strict\";function Hmac(hash,key,enc){if(!(this instanceof Hmac))return new Hmac(hash,key,enc);this.Hash=hash;this.blockSize=hash.blockSize/8;this.outSize=hash.outSize/8;this.inner=null;this.outer=null;this._init(utils.toArray(key,enc))}var hmac=Hmac;Hmac.prototype._init=function init(key){if(key.length>this.blockSize)key=(new this.Hash).update(key).digest();minimalisticAssert(key.length<=this.blockSize);for(var i=key.length;i<this.blockSize;i++)key.push(0);for(i=0;i<key.length;i++)key[i]^=54;this.inner=(new this.Hash).update(key);for(i=0;i<key.length;i++)key[i]^=106;this.outer=(new this.Hash).update(key)};Hmac.prototype.update=function update(msg,enc){this.inner.update(msg,enc);return this};Hmac.prototype.digest=function digest(enc){this.outer.update(this.inner.digest());return this.outer.digest(enc)};var hash_1=createCommonjsModule(function(module,exports){var hash=exports;hash.utils=utils;hash.common=common;hash.sha=sha;hash.ripemd=ripemd;hash.hmac=hmac;hash.sha1=hash.sha.sha1;hash.sha256=hash.sha.sha256;hash.sha224=hash.sha.sha224;hash.sha384=hash.sha.sha384;hash.sha512=hash.sha.sha512;hash.ripemd160=hash.ripemd.ripemd160});var commonjsGlobal$1=typeof globalThis!==\"undefined\"?globalThis:typeof window!==\"undefined\"?window:typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:{};function getDefaultExportFromCjs$1(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,\"default\")?x[\"default\"]:x}function createCommonjsModule$1(fn,basedir,module){return module={path:basedir,exports:{},require:function(path,base){return commonjsRequire$1(path,base===undefined||base===null?module.path:base)}},fn(module,module.exports),module.exports}function getDefaultExportFromNamespaceIfPresent$1(n){return n&&Object.prototype.hasOwnProperty.call(n,\"default\")?n[\"default\"]:n}function getDefaultExportFromNamespaceIfNotNamed$1(n){return n&&Object.prototype.hasOwnProperty.call(n,\"default\")&&Object.keys(n).length===1?n[\"default\"]:n}function getAugmentedNamespace$1(n){if(n.__esModule)return n;var a=Object.defineProperty({},\"__esModule\",{value:true});Object.keys(n).forEach(function(k){var d=Object.getOwnPropertyDescriptor(n,k);Object.defineProperty(a,k,d.get?d:{enumerable:true,get:function(){return n[k]}})});return a}function commonjsRequire$1(){throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\")}var minimalisticAssert$1=assert$1;function assert$1(val,msg){if(!val)throw new Error(msg||\"Assertion failed\")}assert$1.equal=function assertEqual(l,r,msg){if(l!=r)throw new Error(msg||\"Assertion failed: \"+l+\" != \"+r)};var utils_1=createCommonjsModule$1(function(module,exports){\"use strict\";var utils=exports;function toArray(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg!==\"string\"){for(var i=0;i<msg.length;i++)res[i]=msg[i]|0;return res}if(enc===\"hex\"){msg=msg.replace(/[^a-z0-9]+/gi,\"\");if(msg.length%2!==0)msg=\"0\"+msg;for(var i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16))}else{for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);var hi=c>>8;var lo=c&255;if(hi)res.push(hi,lo);else res.push(lo)}}return res}utils.toArray=toArray;function zero2(word){if(word.length===1)return\"0\"+word;else return word}utils.zero2=zero2;function toHex(msg){var res=\"\";for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res}utils.toHex=toHex;utils.encode=function encode(arr,enc){if(enc===\"hex\")return toHex(arr);else return arr}});var utils_1$1=createCommonjsModule$1(function(module,exports){\"use strict\";var utils=exports;utils.assert=minimalisticAssert$1;utils.toArray=utils_1.toArray;utils.zero2=utils_1.zero2;utils.toHex=utils_1.toHex;utils.encode=utils_1.encode;function getNAF(num,w,bits){var naf=new Array(Math.max(num.bitLength(),bits)+1);naf.fill(0);var ws=1<<w+1;var k=num.clone();for(var i=0;i<naf.length;i++){var z;var mod=k.andln(ws-1);if(k.isOdd()){if(mod>(ws>>1)-1)z=(ws>>1)-mod;else z=mod;k.isubn(z)}else{z=0}naf[i]=z;k.iushrn(1)}return naf}utils.getNAF=getNAF;function getJSF(k1,k2){var jsf=[[],[]];k1=k1.clone();k2=k2.clone();var d1=0;var d2=0;var m8;while(k1.cmpn(-d1)>0||k2.cmpn(-d2)>0){var m14=k1.andln(3)+d1&3;var m24=k2.andln(3)+d2&3;if(m14===3)m14=-1;if(m24===3)m24=-1;var u1;if((m14&1)===0){u1=0}else{m8=k1.andln(7)+d1&7;if((m8===3||m8===5)&&m24===2)u1=-m14;else u1=m14}jsf[0].push(u1);var u2;if((m24&1)===0){u2=0}else{m8=k2.andln(7)+d2&7;if((m8===3||m8===5)&&m14===2)u2=-m24;else u2=m24}jsf[1].push(u2);if(2*d1===u1+1)d1=1-d1;if(2*d2===u2+1)d2=1-d2;k1.iushrn(1);k2.iushrn(1)}return jsf}utils.getJSF=getJSF;function cachedProperty(obj,name,computer){var key=\"_\"+name;obj.prototype[name]=function cachedProperty(){return this[key]!==undefined?this[key]:this[key]=computer.call(this)}}utils.cachedProperty=cachedProperty;function parseBytes(bytes){return typeof bytes===\"string\"?utils.toArray(bytes,\"hex\"):bytes}utils.parseBytes=parseBytes;function intFromLE(bytes){return new bn(bytes,\"hex\",\"le\")}utils.intFromLE=intFromLE});\"use strict\";var getNAF=utils_1$1.getNAF;var getJSF=utils_1$1.getJSF;var assert$1$1=utils_1$1.assert;function BaseCurve(type,conf){this.type=type;this.p=new bn(conf.p,16);this.red=conf.prime?bn.red(conf.prime):bn.mont(this.p);this.zero=new bn(0).toRed(this.red);this.one=new bn(1).toRed(this.red);this.two=new bn(2).toRed(this.red);this.n=conf.n&&new bn(conf.n,16);this.g=conf.g&&this.pointFromJSON(conf.g,conf.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);this._bitLength=this.n?this.n.bitLength():0;var adjustCount=this.n&&this.p.div(this.n);if(!adjustCount||adjustCount.cmpn(100)>0){this.redN=null}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red)}}var base=BaseCurve;BaseCurve.prototype.point=function point(){throw new Error(\"Not implemented\")};BaseCurve.prototype.validate=function validate(){throw new Error(\"Not implemented\")};BaseCurve.prototype._fixedNafMul=function _fixedNafMul(p,k){assert$1$1(p.precomputed);var doubles=p._getDoubles();var naf=getNAF(k,1,this._bitLength);var I=(1<<doubles.step+1)-(doubles.step%2===0?2:1);I/=3;var repr=[];var j;var nafW;for(j=0;j<naf.length;j+=doubles.step){nafW=0;for(var l=j+doubles.step-1;l>=j;l--)nafW=(nafW<<1)+naf[l];repr.push(nafW)}var a=this.jpoint(null,null,null);var b=this.jpoint(null,null,null);for(var i=I;i>0;i--){for(j=0;j<repr.length;j++){nafW=repr[j];if(nafW===i)b=b.mixedAdd(doubles.points[j]);else if(nafW===-i)b=b.mixedAdd(doubles.points[j].neg())}a=a.add(b)}return a.toP()};BaseCurve.prototype._wnafMul=function _wnafMul(p,k){var w=4;var nafPoints=p._getNAFPoints(w);w=nafPoints.wnd;var wnd=nafPoints.points;var naf=getNAF(k,w,this._bitLength);var acc=this.jpoint(null,null,null);for(var i=naf.length-1;i>=0;i--){for(var l=0;i>=0&&naf[i]===0;i--)l++;if(i>=0)l++;acc=acc.dblp(l);if(i<0)break;var z=naf[i];assert$1$1(z!==0);if(p.type===\"affine\"){if(z>0)acc=acc.mixedAdd(wnd[z-1>>1]);else acc=acc.mixedAdd(wnd[-z-1>>1].neg())}else{if(z>0)acc=acc.add(wnd[z-1>>1]);else acc=acc.add(wnd[-z-1>>1].neg())}}return p.type===\"affine\"?acc.toP():acc};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd(defW,points,coeffs,len,jacobianResult){var wndWidth=this._wnafT1;var wnd=this._wnafT2;var naf=this._wnafT3;var max=0;var i;var j;var p;for(i=0;i<len;i++){p=points[i];var nafPoints=p._getNAFPoints(defW);wndWidth[i]=nafPoints.wnd;wnd[i]=nafPoints.points}for(i=len-1;i>=1;i-=2){var a=i-1;var b=i;if(wndWidth[a]!==1||wndWidth[b]!==1){naf[a]=getNAF(coeffs[a],wndWidth[a],this._bitLength);naf[b]=getNAF(coeffs[b],wndWidth[b],this._bitLength);max=Math.max(naf[a].length,max);max=Math.max(naf[b].length,max);continue}var comb=[points[a],null,null,points[b]];if(points[a].y.cmp(points[b].y)===0){comb[1]=points[a].add(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg())}else if(points[a].y.cmp(points[b].y.redNeg())===0){comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].add(points[b].neg())}else{comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg())}var index=[-3,-1,-5,-7,0,7,5,1,3];var jsf=getJSF(coeffs[a],coeffs[b]);max=Math.max(jsf[0].length,max);naf[a]=new Array(max);naf[b]=new Array(max);for(j=0;j<max;j++){var ja=jsf[0][j]|0;var jb=jsf[1][j]|0;naf[a][j]=index[(ja+1)*3+(jb+1)];naf[b][j]=0;wnd[a]=comb}}var acc=this.jpoint(null,null,null);var tmp=this._wnafT4;for(i=max;i>=0;i--){var k=0;while(i>=0){var zero=true;for(j=0;j<len;j++){tmp[j]=naf[j][i]|0;if(tmp[j]!==0)zero=false}if(!zero)break;k++;i--}if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;for(j=0;j<len;j++){var z=tmp[j];p;if(z===0)continue;else if(z>0)p=wnd[j][z-1>>1];else if(z<0)p=wnd[j][-z-1>>1].neg();if(p.type===\"affine\")acc=acc.mixedAdd(p);else acc=acc.add(p)}}for(i=0;i<len;i++)wnd[i]=null;if(jacobianResult)return acc;else return acc.toP()};function BasePoint(curve,type){this.curve=curve;this.type=type;this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq(){throw new Error(\"Not implemented\")};BasePoint.prototype.validate=function validate(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function decodePoint(bytes,enc){bytes=utils_1$1.toArray(bytes,enc);var len=this.p.byteLength();if((bytes[0]===4||bytes[0]===6||bytes[0]===7)&&bytes.length-1===2*len){if(bytes[0]===6)assert$1$1(bytes[bytes.length-1]%2===0);else if(bytes[0]===7)assert$1$1(bytes[bytes.length-1]%2===1);var res=this.point(bytes.slice(1,1+len),bytes.slice(1+len,1+2*len));return res}else if((bytes[0]===2||bytes[0]===3)&&bytes.length-1===len){return this.pointFromX(bytes.slice(1,1+len),bytes[0]===3)}throw new Error(\"Unknown point format\")};BasePoint.prototype.encodeCompressed=function encodeCompressed(enc){return this.encode(enc,true)};BasePoint.prototype._encode=function _encode(compact){var len=this.curve.p.byteLength();var x=this.getX().toArray(\"be\",len);if(compact)return[this.getY().isEven()?2:3].concat(x);return[4].concat(x,this.getY().toArray(\"be\",len))};BasePoint.prototype.encode=function encode(enc,compact){return utils_1$1.encode(this._encode(compact),enc)};BasePoint.prototype.precompute=function precompute(power){if(this.precomputed)return this;var precomputed={doubles:null,naf:null,beta:null};precomputed.naf=this._getNAFPoints(8);precomputed.doubles=this._getDoubles(4,power);precomputed.beta=this._getBeta();this.precomputed=precomputed;return this};BasePoint.prototype._hasDoubles=function _hasDoubles(k){if(!this.precomputed)return false;var doubles=this.precomputed.doubles;if(!doubles)return false;return doubles.points.length>=Math.ceil((k.bitLength()+1)/doubles.step)};BasePoint.prototype._getDoubles=function _getDoubles(step,power){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var doubles=[this];var acc=this;for(var i=0;i<power;i+=step){for(var j=0;j<step;j++)acc=acc.dbl();doubles.push(acc)}return{step:step,points:doubles}};BasePoint.prototype._getNAFPoints=function _getNAFPoints(wnd){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var res=[this];var max=(1<<wnd)-1;var dbl=max===1?null:this.dbl();for(var i=1;i<max;i++)res[i]=res[i-1].add(dbl);return{wnd:wnd,points:res}};BasePoint.prototype._getBeta=function _getBeta(){return null};BasePoint.prototype.dblp=function dblp(k){var r=this;for(var i=0;i<k;i++)r=r.dbl();return r};var inherits_browser$1=createCommonjsModule$1(function(module){if(typeof Object.create===\"function\"){module.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}}else{module.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}}});\"use strict\";var assert$2=utils_1$1.assert;function ShortCurve(conf){base.call(this,\"short\",conf);this.a=new bn(conf.a,16).toRed(this.red);this.b=new bn(conf.b,16).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=this.a.fromRed().cmpn(0)===0;this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0;this.endo=this._getEndomorphism(conf);this._endoWnafT1=new Array(4);this._endoWnafT2=new Array(4)}inherits_browser$1(ShortCurve,base);var short_1=ShortCurve;ShortCurve.prototype._getEndomorphism=function _getEndomorphism(conf){if(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)return;var beta;var lambda;if(conf.beta){beta=new bn(conf.beta,16).toRed(this.red)}else{var betas=this._getEndoRoots(this.p);beta=betas[0].cmp(betas[1])<0?betas[0]:betas[1];beta=beta.toRed(this.red)}if(conf.lambda){lambda=new bn(conf.lambda,16)}else{var lambdas=this._getEndoRoots(this.n);if(this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta))===0){lambda=lambdas[0]}else{lambda=lambdas[1];assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))===0)}}var basis;if(conf.basis){basis=conf.basis.map(function(vec){return{a:new bn(vec.a,16),b:new bn(vec.b,16)}})}else{basis=this._getEndoBasis(lambda)}return{beta:beta,lambda:lambda,basis:basis}};ShortCurve.prototype._getEndoRoots=function _getEndoRoots(num){var red=num===this.p?this.red:bn.mont(num);var tinv=new bn(2).toRed(red).redInvm();var ntinv=tinv.redNeg();var s=new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);var l1=ntinv.redAdd(s).fromRed();var l2=ntinv.redSub(s).fromRed();return[l1,l2]};ShortCurve.prototype._getEndoBasis=function _getEndoBasis(lambda){var aprxSqrt=this.n.ushrn(Math.floor(this.n.bitLength()/2));var u=lambda;var v=this.n.clone();var x1=new bn(1);var y1=new bn(0);var x2=new bn(0);var y2=new bn(1);var a0;var b0;var a1;var b1;var a2;var b2;var prevR;var i=0;var r;var x;while(u.cmpn(0)!==0){var q=v.div(u);r=v.sub(q.mul(u));x=x2.sub(q.mul(x1));var y=y2.sub(q.mul(y1));if(!a1&&r.cmp(aprxSqrt)<0){a0=prevR.neg();b0=x1;a1=r.neg();b1=x}else if(a1&&++i===2){break}prevR=r;v=u;u=r;x2=x1;x1=x;y2=y1;y1=y}a2=r.neg();b2=x;var len1=a1.sqr().add(b1.sqr());var len2=a2.sqr().add(b2.sqr());if(len2.cmp(len1)>=0){a2=a0;b2=b0}if(a1.negative){a1=a1.neg();b1=b1.neg()}if(a2.negative){a2=a2.neg();b2=b2.neg()}return[{a:a1,b:b1},{a:a2,b:b2}]};ShortCurve.prototype._endoSplit=function _endoSplit(k){var basis=this.endo.basis;var v1=basis[0];var v2=basis[1];var c1=v2.b.mul(k).divRound(this.n);var c2=v1.b.neg().mul(k).divRound(this.n);var p1=c1.mul(v1.a);var p2=c2.mul(v2.a);var q1=c1.mul(v1.b);var q2=c2.mul(v2.b);var k1=k.sub(p1).sub(p2);var k2=q1.add(q2).neg();return{k1:k1,k2:k2}};ShortCurve.prototype.pointFromX=function pointFromX(x,odd){x=new bn(x,16);if(!x.red)x=x.toRed(this.red);var y2=x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);var y=y2.redSqrt();if(y.redSqr().redSub(y2).cmp(this.zero)!==0)throw new Error(\"invalid point\");var isOdd=y.fromRed().isOdd();if(odd&&!isOdd||!odd&&isOdd)y=y.redNeg();return this.point(x,y)};ShortCurve.prototype.validate=function validate(point){if(point.inf)return true;var x=point.x;var y=point.y;var ax=this.a.redMul(x);var rhs=x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);return y.redSqr().redISub(rhs).cmpn(0)===0};ShortCurve.prototype._endoWnafMulAdd=function _endoWnafMulAdd(points,coeffs,jacobianResult){var npoints=this._endoWnafT1;var ncoeffs=this._endoWnafT2;for(var i=0;i<points.length;i++){var split=this._endoSplit(coeffs[i]);var p=points[i];var beta=p._getBeta();if(split.k1.negative){split.k1.ineg();p=p.neg(true)}if(split.k2.negative){split.k2.ineg();beta=beta.neg(true)}npoints[i*2]=p;npoints[i*2+1]=beta;ncoeffs[i*2]=split.k1;ncoeffs[i*2+1]=split.k2}var res=this._wnafMulAdd(1,npoints,ncoeffs,i*2,jacobianResult);for(var j=0;j<i*2;j++){npoints[j]=null;ncoeffs[j]=null}return res};function Point(curve,x,y,isRed){base.BasePoint.call(this,curve,\"affine\");if(x===null&&y===null){this.x=null;this.y=null;this.inf=true}else{this.x=new bn(x,16);this.y=new bn(y,16);if(isRed){this.x.forceRed(this.curve.red);this.y.forceRed(this.curve.red)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);this.inf=false}}inherits_browser$1(Point,base.BasePoint);ShortCurve.prototype.point=function point(x,y,isRed){return new Point(this,x,y,isRed)};ShortCurve.prototype.pointFromJSON=function pointFromJSON(obj,red){return Point.fromJSON(this,obj,red)};Point.prototype._getBeta=function _getBeta(){if(!this.curve.endo)return;var pre=this.precomputed;if(pre&&pre.beta)return pre.beta;var beta=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(pre){var curve=this.curve;var endoMul=function(p){return curve.point(p.x.redMul(curve.endo.beta),p.y)};pre.beta=beta;beta.precomputed={beta:null,naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(endoMul)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(endoMul)}}}return beta};Point.prototype.toJSON=function toJSON(){if(!this.precomputed)return[this.x,this.y];return[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]};Point.fromJSON=function fromJSON(curve,obj,red){if(typeof obj===\"string\")obj=JSON.parse(obj);var res=curve.point(obj[0],obj[1],red);if(!obj[2])return res;function obj2point(obj){return curve.point(obj[0],obj[1],red)}var pre=obj[2];res.precomputed={beta:null,doubles:pre.doubles&&{step:pre.doubles.step,points:[res].concat(pre.doubles.points.map(obj2point))},naf:pre.naf&&{wnd:pre.naf.wnd,points:[res].concat(pre.naf.points.map(obj2point))}};return res};Point.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC Point Infinity>\";return\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\">\"};Point.prototype.isInfinity=function isInfinity(){return this.inf};Point.prototype.add=function add(p){if(this.inf)return p;if(p.inf)return this;if(this.eq(p))return this.dbl();if(this.neg().eq(p))return this.curve.point(null,null);if(this.x.cmp(p.x)===0)return this.curve.point(null,null);var c=this.y.redSub(p.y);if(c.cmpn(0)!==0)c=c.redMul(this.x.redSub(p.x).redInvm());var nx=c.redSqr().redISub(this.x).redISub(p.x);var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point.prototype.dbl=function dbl(){if(this.inf)return this;var ys1=this.y.redAdd(this.y);if(ys1.cmpn(0)===0)return this.curve.point(null,null);var a=this.curve.a;var x2=this.x.redSqr();var dyinv=ys1.redInvm();var c=x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);var nx=c.redSqr().redISub(this.x.redAdd(this.x));var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point.prototype.getX=function getX(){return this.x.fromRed()};Point.prototype.getY=function getY(){return this.y.fromRed()};Point.prototype.mul=function mul(k){k=new bn(k,16);if(this.isInfinity())return this;else if(this._hasDoubles(k))return this.curve._fixedNafMul(this,k);else if(this.curve.endo)return this.curve._endoWnafMulAdd([this],[k]);else return this.curve._wnafMul(this,k)};Point.prototype.mulAdd=function mulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs);else return this.curve._wnafMulAdd(1,points,coeffs,2)};Point.prototype.jmulAdd=function jmulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs,true);else return this.curve._wnafMulAdd(1,points,coeffs,2,true)};Point.prototype.eq=function eq(p){return this===p||this.inf===p.inf&&(this.inf||this.x.cmp(p.x)===0&&this.y.cmp(p.y)===0)};Point.prototype.neg=function neg(_precompute){if(this.inf)return this;var res=this.curve.point(this.x,this.y.redNeg());if(_precompute&&this.precomputed){var pre=this.precomputed;var negate=function(p){return p.neg()};res.precomputed={naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(negate)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(negate)}}}return res};Point.prototype.toJ=function toJ(){if(this.inf)return this.curve.jpoint(null,null,null);var res=this.curve.jpoint(this.x,this.y,this.curve.one);return res};function JPoint(curve,x,y,z){base.BasePoint.call(this,curve,\"jacobian\");if(x===null&&y===null&&z===null){this.x=this.curve.one;this.y=this.curve.one;this.z=new bn(0)}else{this.x=new bn(x,16);this.y=new bn(y,16);this.z=new bn(z,16)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);this.zOne=this.z===this.curve.one}inherits_browser$1(JPoint,base.BasePoint);ShortCurve.prototype.jpoint=function jpoint(x,y,z){return new JPoint(this,x,y,z)};JPoint.prototype.toP=function toP(){if(this.isInfinity())return this.curve.point(null,null);var zinv=this.z.redInvm();var zinv2=zinv.redSqr();var ax=this.x.redMul(zinv2);var ay=this.y.redMul(zinv2).redMul(zinv);return this.curve.point(ax,ay)};JPoint.prototype.neg=function neg(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint.prototype.add=function add(p){if(this.isInfinity())return p;if(p.isInfinity())return this;var pz2=p.z.redSqr();var z2=this.z.redSqr();var u1=this.x.redMul(pz2);var u2=p.x.redMul(z2);var s1=this.y.redMul(pz2.redMul(p.z));var s2=p.y.redMul(z2.redMul(this.z));var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(p.z).redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.mixedAdd=function mixedAdd(p){if(this.isInfinity())return p.toJ();if(p.isInfinity())return this;var z2=this.z.redSqr();var u1=this.x;var u2=p.x.redMul(z2);var s1=this.y;var s2=p.y.redMul(z2).redMul(this.z);var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.dblp=function dblp(pow){if(pow===0)return this;if(this.isInfinity())return this;if(!pow)return this.dbl();var i;if(this.curve.zeroA||this.curve.threeA){var r=this;for(i=0;i<pow;i++)r=r.dbl();return r}var a=this.curve.a;var tinv=this.curve.tinv;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jyd=jy.redAdd(jy);for(i=0;i<pow;i++){var jx2=jx.redSqr();var jyd2=jyd.redSqr();var jyd4=jyd2.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var t1=jx.redMul(jyd2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var dny=c.redMul(t2);dny=dny.redIAdd(dny).redISub(jyd4);var nz=jyd.redMul(jz);if(i+1<pow)jz4=jz4.redMul(jyd4);jx=nx;jz=nz;jyd=dny}return this.curve.jpoint(jx,jyd.redMul(tinv),jz)};JPoint.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.zeroA)return this._zeroDbl();else if(this.curve.threeA)return this._threeDbl();else return this._dbl()};JPoint.prototype._zeroDbl=function _zeroDbl(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx);var t=m.redSqr().redISub(s).redISub(s);var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);nx=t;ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var a=this.x.redSqr();var b=this.y.redSqr();var c=b.redSqr();var d=this.x.redAdd(b).redSqr().redISub(a).redISub(c);d=d.redIAdd(d);var e=a.redAdd(a).redIAdd(a);var f=e.redSqr();var c8=c.redIAdd(c);c8=c8.redIAdd(c8);c8=c8.redIAdd(c8);nx=f.redISub(d).redISub(d);ny=e.redMul(d.redISub(nx)).redISub(c8);nz=this.y.redMul(this.z);nz=nz.redIAdd(nz)}return this.curve.jpoint(nx,ny,nz)};JPoint.prototype._threeDbl=function _threeDbl(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);var t=m.redSqr().redISub(s).redISub(s);nx=t;var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var delta=this.z.redSqr();var gamma=this.y.redSqr();var beta=this.x.redMul(gamma);var alpha=this.x.redSub(delta).redMul(this.x.redAdd(delta));alpha=alpha.redAdd(alpha).redIAdd(alpha);var beta4=beta.redIAdd(beta);beta4=beta4.redIAdd(beta4);var beta8=beta4.redAdd(beta4);nx=alpha.redSqr().redISub(beta8);nz=this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);var ggamma8=gamma.redSqr();ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ny=alpha.redMul(beta4.redISub(nx)).redISub(ggamma8)}return this.curve.jpoint(nx,ny,nz)};JPoint.prototype._dbl=function _dbl(){var a=this.curve.a;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jx2=jx.redSqr();var jy2=jy.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var jxd4=jx.redAdd(jx);jxd4=jxd4.redIAdd(jxd4);var t1=jxd4.redMul(jy2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var jyd8=jy2.redSqr();jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);var ny=c.redMul(t2).redISub(jyd8);var nz=jy.redAdd(jy).redMul(jz);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.trpl=function trpl(){if(!this.curve.zeroA)return this.dbl().add(this);var xx=this.x.redSqr();var yy=this.y.redSqr();var zz=this.z.redSqr();var yyyy=yy.redSqr();var m=xx.redAdd(xx).redIAdd(xx);var mm=m.redSqr();var e=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);e=e.redIAdd(e);e=e.redAdd(e).redIAdd(e);e=e.redISub(mm);var ee=e.redSqr();var t=yyyy.redIAdd(yyyy);t=t.redIAdd(t);t=t.redIAdd(t);t=t.redIAdd(t);var u=m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);var yyu4=yy.redMul(u);yyu4=yyu4.redIAdd(yyu4);yyu4=yyu4.redIAdd(yyu4);var nx=this.x.redMul(ee).redISub(yyu4);nx=nx.redIAdd(nx);nx=nx.redIAdd(nx);var ny=this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);var nz=this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.mul=function mul(k,kbase){k=new bn(k,kbase);return this.curve._wnafMul(this,k)};JPoint.prototype.eq=function eq(p){if(p.type===\"affine\")return this.eq(p.toJ());if(this===p)return true;var z2=this.z.redSqr();var pz2=p.z.redSqr();if(this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)!==0)return false;var z3=z2.redMul(this.z);var pz3=pz2.redMul(p.z);return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0)===0};JPoint.prototype.eqXToP=function eqXToP(x){var zs=this.z.redSqr();var rx=x.toRed(this.curve.red).redMul(zs);if(this.x.cmp(rx)===0)return true;var xc=x.clone();var t=this.curve.redN.redMul(zs);for(;;){xc.iadd(this.curve.n);if(xc.cmp(this.curve.p)>=0)return false;rx.redIAdd(t);if(this.x.cmp(rx)===0)return true}};JPoint.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC JPoint Infinity>\";return\"<EC JPoint x: \"+this.x.toString(16,2)+\" y: \"+this.y.toString(16,2)+\" z: \"+this.z.toString(16,2)+\">\"};JPoint.prototype.isInfinity=function isInfinity(){return this.z.cmpn(0)===0};var curve_1=createCommonjsModule$1(function(module,exports){\"use strict\";var curve=exports;curve.base=base;curve.short=short_1;curve.mont=null;curve.edwards=null});var curves_1=createCommonjsModule$1(function(module,exports){\"use strict\";var curves=exports;var assert=utils_1$1.assert;function PresetCurve(options){if(options.type===\"short\")this.curve=new curve_1.short(options);else if(options.type===\"edwards\")this.curve=new curve_1.edwards(options);else this.curve=new curve_1.mont(options);this.g=this.curve.g;this.n=this.curve.n;this.hash=options.hash;assert(this.g.validate(),\"Invalid curve\");assert(this.g.mul(this.n).isInfinity(),\"Invalid curve, G*N != O\")}curves.PresetCurve=PresetCurve;function defineCurve(name,options){Object.defineProperty(curves,name,{configurable:true,enumerable:true,get:function(){var curve=new PresetCurve(options);Object.defineProperty(curves,name,{configurable:true,enumerable:true,value:curve});return curve}})}defineCurve(\"p192\",{type:\"short\",prime:\"p192\",p:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",b:\"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",n:\"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",hash:hash_1.sha256,gRed:false,g:[\"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"]});defineCurve(\"p224\",{type:\"short\",prime:\"p224\",p:\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",b:\"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",n:\"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",hash:hash_1.sha256,gRed:false,g:[\"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"]});defineCurve(\"p256\",{type:\"short\",prime:null,p:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",a:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",b:\"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",n:\"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",hash:hash_1.sha256,gRed:false,g:[\"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"]});defineCurve(\"p384\",{type:\"short\",prime:null,p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"fffffffe ffffffff 00000000 00000000 ffffffff\",a:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"fffffffe ffffffff 00000000 00000000 fffffffc\",b:\"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f \"+\"5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",n:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 \"+\"f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",hash:hash_1.sha384,gRed:false,g:[\"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 \"+\"5502f25d bf55296c 3a545e38 72760ab7\",\"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 \"+\"0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"]});defineCurve(\"p521\",{type:\"short\",prime:null,p:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff\",a:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff fffffffc\",b:\"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b \"+\"99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd \"+\"3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",n:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 \"+\"f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",hash:hash_1.sha512,gRed:false,g:[\"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 \"+\"053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 \"+\"a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 \"+\"579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 \"+\"3fad0761 353c7086 a272c240 88be9476 9fd16650\"]});defineCurve(\"curve25519\",{type:\"mont\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"76d06\",b:\"1\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:hash_1.sha256,gRed:false,g:[\"9\"]});defineCurve(\"ed25519\",{type:\"edwards\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"-1\",c:\"1\",d:\"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:hash_1.sha256,gRed:false,g:[\"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\"6666666666666666666666666666666666666666666666666666666666666658\"]});var pre;try{pre=null.crash()}catch(e){pre=undefined}defineCurve(\"secp256k1\",{type:\"short\",prime:\"k256\",p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",a:\"0\",b:\"7\",n:\"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",h:\"1\",hash:hash_1.sha256,beta:\"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",lambda:\"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",basis:[{a:\"3086d221a7d46bcde86c90e49284eb15\",b:\"-e4437ed6010e88286f547fa90abfe4c3\"},{a:\"114ca50f7a8e2f3f657c1108d9d44cfd8\",b:\"3086d221a7d46bcde86c90e49284eb15\"}],gRed:false,g:[\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",pre]})});\"use strict\";function HmacDRBG(options){if(!(this instanceof HmacDRBG))return new HmacDRBG(options);this.hash=options.hash;this.predResist=!!options.predResist;this.outLen=this.hash.outSize;this.minEntropy=options.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var entropy=utils_1.toArray(options.entropy,options.entropyEnc||\"hex\");var nonce=utils_1.toArray(options.nonce,options.nonceEnc||\"hex\");var pers=utils_1.toArray(options.pers,options.persEnc||\"hex\");minimalisticAssert$1(entropy.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\");this._init(entropy,nonce,pers)}var hmacDrbg=HmacDRBG;HmacDRBG.prototype._init=function init(entropy,nonce,pers){var seed=entropy.concat(nonce).concat(pers);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++){this.K[i]=0;this.V[i]=1}this._update(seed);this._reseed=1;this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function hmac(){return new hash_1.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function update(seed){var kmac=this._hmac().update(this.V).update([0]);if(seed)kmac=kmac.update(seed);this.K=kmac.digest();this.V=this._hmac().update(this.V).digest();if(!seed)return;this.K=this._hmac().update(this.V).update([1]).update(seed).digest();this.V=this._hmac().update(this.V).digest()};HmacDRBG.prototype.reseed=function reseed(entropy,entropyEnc,add,addEnc){if(typeof entropyEnc!==\"string\"){addEnc=add;add=entropyEnc;entropyEnc=null}entropy=utils_1.toArray(entropy,entropyEnc);add=utils_1.toArray(add,addEnc);minimalisticAssert$1(entropy.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\");this._update(entropy.concat(add||[]));this._reseed=1};HmacDRBG.prototype.generate=function generate(len,enc,add,addEnc){if(this._reseed>this.reseedInterval)throw new Error(\"Reseed is required\");if(typeof enc!==\"string\"){addEnc=add;add=enc;enc=null}if(add){add=utils_1.toArray(add,addEnc||\"hex\");this._update(add)}var temp=[];while(temp.length<len){this.V=this._hmac().update(this.V).digest();temp=temp.concat(this.V)}var res=temp.slice(0,len);this._update(add);this._reseed++;return utils_1.encode(res,enc)};\"use strict\";var assert$3=utils_1$1.assert;function KeyPair(ec,options){this.ec=ec;this.priv=null;this.pub=null;if(options.priv)this._importPrivate(options.priv,options.privEnc);if(options.pub)this._importPublic(options.pub,options.pubEnc)}var key=KeyPair;KeyPair.fromPublic=function fromPublic(ec,pub,enc){if(pub instanceof KeyPair)return pub;return new KeyPair(ec,{pub:pub,pubEnc:enc})};KeyPair.fromPrivate=function fromPrivate(ec,priv,enc){if(priv instanceof KeyPair)return priv;return new KeyPair(ec,{priv:priv,privEnc:enc})};KeyPair.prototype.validate=function validate(){var pub=this.getPublic();if(pub.isInfinity())return{result:false,reason:\"Invalid public key\"};if(!pub.validate())return{result:false,reason:\"Public key is not a point\"};if(!pub.mul(this.ec.curve.n).isInfinity())return{result:false,reason:\"Public key * N != O\"};return{result:true,reason:null}};KeyPair.prototype.getPublic=function getPublic(compact,enc){if(typeof compact===\"string\"){enc=compact;compact=null}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!enc)return this.pub;return this.pub.encode(enc,compact)};KeyPair.prototype.getPrivate=function getPrivate(enc){if(enc===\"hex\")return this.priv.toString(16,2);else return this.priv};KeyPair.prototype._importPrivate=function _importPrivate(key,enc){this.priv=new bn(key,enc||16);this.priv=this.priv.umod(this.ec.curve.n)};KeyPair.prototype._importPublic=function _importPublic(key,enc){if(key.x||key.y){if(this.ec.curve.type===\"mont\"){assert$3(key.x,\"Need x coordinate\")}else if(this.ec.curve.type===\"short\"||this.ec.curve.type===\"edwards\"){assert$3(key.x&&key.y,\"Need both x and y coordinate\")}this.pub=this.ec.curve.point(key.x,key.y);return}this.pub=this.ec.curve.decodePoint(key,enc)};KeyPair.prototype.derive=function derive(pub){if(!pub.validate()){assert$3(pub.validate(),\"public point not validated\")}return pub.mul(this.priv).getX()};KeyPair.prototype.sign=function sign(msg,enc,options){return this.ec.sign(msg,this,enc,options)};KeyPair.prototype.verify=function verify(msg,signature){return this.ec.verify(msg,signature,this)};KeyPair.prototype.inspect=function inspect(){return\"<Key priv: \"+(this.priv&&this.priv.toString(16,2))+\" pub: \"+(this.pub&&this.pub.inspect())+\" >\"};\"use strict\";var assert$4=utils_1$1.assert;function Signature(options,enc){if(options instanceof Signature)return options;if(this._importDER(options,enc))return;assert$4(options.r&&options.s,\"Signature without r or s\");this.r=new bn(options.r,16);this.s=new bn(options.s,16);if(options.recoveryParam===undefined)this.recoveryParam=null;else this.recoveryParam=options.recoveryParam}var signature=Signature;function Position(){this.place=0}function getLength(buf,p){var initial=buf[p.place++];if(!(initial&128)){return initial}var octetLen=initial&15;if(octetLen===0||octetLen>4){return false}var val=0;for(var i=0,off=p.place;i<octetLen;i++,off++){val<<=8;val|=buf[off];val>>>=0}if(val<=127){return false}p.place=off;return val}function rmPadding(buf){var i=0;var len=buf.length-1;while(!buf[i]&&!(buf[i+1]&128)&&i<len){i++}if(i===0){return buf}return buf.slice(i)}Signature.prototype._importDER=function _importDER(data,enc){data=utils_1$1.toArray(data,enc);var p=new Position;if(data[p.place++]!==48){return false}var len=getLength(data,p);if(len===false){return false}if(len+p.place!==data.length){return false}if(data[p.place++]!==2){return false}var rlen=getLength(data,p);if(rlen===false){return false}var r=data.slice(p.place,rlen+p.place);p.place+=rlen;if(data[p.place++]!==2){return false}var slen=getLength(data,p);if(slen===false){return false}if(data.length!==slen+p.place){return false}var s=data.slice(p.place,slen+p.place);if(r[0]===0){if(r[1]&128){r=r.slice(1)}else{return false}}if(s[0]===0){if(s[1]&128){s=s.slice(1)}else{return false}}this.r=new bn(r);this.s=new bn(s);this.recoveryParam=null;return true};function constructLength(arr,len){if(len<128){arr.push(len);return}var octets=1+(Math.log(len)/Math.LN2>>>3);arr.push(octets|128);while(--octets){arr.push(len>>>(octets<<3)&255)}arr.push(len)}Signature.prototype.toDER=function toDER(enc){var r=this.r.toArray();var s=this.s.toArray();if(r[0]&128)r=[0].concat(r);if(s[0]&128)s=[0].concat(s);r=rmPadding(r);s=rmPadding(s);while(!s[0]&&!(s[1]&128)){s=s.slice(1)}var arr=[2];constructLength(arr,r.length);arr=arr.concat(r);arr.push(2);constructLength(arr,s.length);var backHalf=arr.concat(s);var res=[48];constructLength(res,backHalf.length);res=res.concat(backHalf);return utils_1$1.encode(res,enc)};\"use strict\";var rand=function(){throw new Error(\"unsupported\")};var assert$5=utils_1$1.assert;function EC(options){if(!(this instanceof EC))return new EC(options);if(typeof options===\"string\"){assert$5(Object.prototype.hasOwnProperty.call(curves_1,options),\"Unknown curve \"+options);options=curves_1[options]}if(options instanceof curves_1.PresetCurve)options={curve:options};this.curve=options.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=options.curve.g;this.g.precompute(options.curve.n.bitLength()+1);this.hash=options.hash||options.curve.hash}var ec=EC;EC.prototype.keyPair=function keyPair(options){return new key(this,options)};EC.prototype.keyFromPrivate=function keyFromPrivate(priv,enc){return key.fromPrivate(this,priv,enc)};EC.prototype.keyFromPublic=function keyFromPublic(pub,enc){return key.fromPublic(this,pub,enc)};EC.prototype.genKeyPair=function genKeyPair(options){if(!options)options={};var drbg=new hmacDrbg({hash:this.hash,pers:options.pers,persEnc:options.persEnc||\"utf8\",entropy:options.entropy||rand(this.hash.hmacStrength),entropyEnc:options.entropy&&options.entropyEnc||\"utf8\",nonce:this.n.toArray()});var bytes=this.n.byteLength();var ns2=this.n.sub(new bn(2));for(;;){var priv=new bn(drbg.generate(bytes));if(priv.cmp(ns2)>0)continue;priv.iaddn(1);return this.keyFromPrivate(priv)}};EC.prototype._truncateToN=function _truncateToN(msg,truncOnly){var delta=msg.byteLength()*8-this.n.bitLength();if(delta>0)msg=msg.ushrn(delta);if(!truncOnly&&msg.cmp(this.n)>=0)return msg.sub(this.n);else return msg};EC.prototype.sign=function sign(msg,key,enc,options){if(typeof enc===\"object\"){options=enc;enc=null}if(!options)options={};key=this.keyFromPrivate(key,enc);msg=this._truncateToN(new bn(msg,16));var bytes=this.n.byteLength();var bkey=key.getPrivate().toArray(\"be\",bytes);var nonce=msg.toArray(\"be\",bytes);var drbg=new hmacDrbg({hash:this.hash,entropy:bkey,nonce:nonce,pers:options.pers,persEnc:options.persEnc||\"utf8\"});var ns1=this.n.sub(new bn(1));for(var iter=0;;iter++){var k=options.k?options.k(iter):new bn(drbg.generate(this.n.byteLength()));k=this._truncateToN(k,true);if(k.cmpn(1)<=0||k.cmp(ns1)>=0)continue;var kp=this.g.mul(k);if(kp.isInfinity())continue;var kpX=kp.getX();var r=kpX.umod(this.n);if(r.cmpn(0)===0)continue;var s=k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));s=s.umod(this.n);if(s.cmpn(0)===0)continue;var recoveryParam=(kp.getY().isOdd()?1:0)|(kpX.cmp(r)!==0?2:0);if(options.canonical&&s.cmp(this.nh)>0){s=this.n.sub(s);recoveryParam^=1}return new signature({r:r,s:s,recoveryParam:recoveryParam})}};EC.prototype.verify=function verify(msg,signature$1,key,enc){msg=this._truncateToN(new bn(msg,16));key=this.keyFromPublic(key,enc);signature$1=new signature(signature$1,\"hex\");var r=signature$1.r;var s=signature$1.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;var sinv=s.invm(this.n);var u1=sinv.mul(msg).umod(this.n);var u2=sinv.mul(r).umod(this.n);var p;if(!this.curve._maxwellTrick){p=this.g.mulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.getX().umod(this.n).cmp(r)===0}p=this.g.jmulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.eqXToP(r)};EC.prototype.recoverPubKey=function(msg,signature$1,j,enc){assert$5((3&j)===j,\"The recovery param is more than two bits\");signature$1=new signature(signature$1,enc);var n=this.n;var e=new bn(msg);var r=signature$1.r;var s=signature$1.s;var isYOdd=j&1;var isSecondKey=j>>1;if(r.cmp(this.curve.p.umod(this.curve.n))>=0&&isSecondKey)throw new Error(\"Unable to find sencond key candinate\");if(isSecondKey)r=this.curve.pointFromX(r.add(this.curve.n),isYOdd);else r=this.curve.pointFromX(r,isYOdd);var rInv=signature$1.r.invm(n);var s1=n.sub(e).mul(rInv).umod(n);var s2=s.mul(rInv).umod(n);return this.g.mulAdd(s1,r,s2)};EC.prototype.getKeyRecoveryParam=function(e,signature$1,Q,enc){signature$1=new signature(signature$1,enc);if(signature$1.recoveryParam!==null)return signature$1.recoveryParam;for(var i=0;i<4;i++){var Qprime;try{Qprime=this.recoverPubKey(e,signature$1,i)}catch(e){continue}if(Qprime.eq(Q))return i}throw new Error(\"Unable to find valid recovery factor\")};var elliptic_1=createCommonjsModule$1(function(module,exports){\"use strict\";var elliptic=exports;elliptic.version={version:\"6.5.4\"}.version;elliptic.utils=utils_1$1;elliptic.rand=function(){throw new Error(\"unsupported\")};elliptic.curve=curve_1;elliptic.curves=curves_1;elliptic.ec=ec;elliptic.eddsa=null});var EC$1=elliptic_1.ec;const version$b=\"signing-key/5.1.0\";\"use strict\";const logger$g=new Logger(version$b);let _curve=null;function getCurve(){if(!_curve){_curve=new EC$1(\"secp256k1\")}return _curve}class SigningKey{constructor(privateKey){defineReadOnly(this,\"curve\",\"secp256k1\");defineReadOnly(this,\"privateKey\",hexlify(privateKey));const keyPair=getCurve().keyFromPrivate(arrayify(this.privateKey));defineReadOnly(this,\"publicKey\",\"0x\"+keyPair.getPublic(false,\"hex\"));defineReadOnly(this,\"compressedPublicKey\",\"0x\"+keyPair.getPublic(true,\"hex\"));defineReadOnly(this,\"_isSigningKey\",true)}_addPoint(other){const p0=getCurve().keyFromPublic(arrayify(this.publicKey));const p1=getCurve().keyFromPublic(arrayify(other));return\"0x\"+p0.pub.add(p1.pub).encodeCompressed(\"hex\")}signDigest(digest){const keyPair=getCurve().keyFromPrivate(arrayify(this.privateKey));const digestBytes=arrayify(digest);if(digestBytes.length!==32){logger$g.throwArgumentError(\"bad digest length\",\"digest\",digest)}const signature=keyPair.sign(digestBytes,{canonical:true});return splitSignature({recoveryParam:signature.recoveryParam,r:hexZeroPad(\"0x\"+signature.r.toString(16),32),s:hexZeroPad(\"0x\"+signature.s.toString(16),32)})}computeSharedSecret(otherKey){const keyPair=getCurve().keyFromPrivate(arrayify(this.privateKey));const otherKeyPair=getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));return hexZeroPad(\"0x\"+keyPair.derive(otherKeyPair.getPublic()).toString(16),32)}static isSigningKey(value){return!!(value&&value._isSigningKey)}}function recoverPublicKey(digest,signature){const sig=splitSignature(signature);const rs={r:arrayify(sig.r),s:arrayify(sig.s)};return\"0x\"+getCurve().recoverPubKey(arrayify(digest),rs,sig.recoveryParam).encode(\"hex\",false)}function computePublicKey(key,compressed){const bytes=arrayify(key);if(bytes.length===32){const signingKey=new SigningKey(bytes);if(compressed){return\"0x\"+getCurve().keyFromPrivate(bytes).getPublic(true,\"hex\")}return signingKey.publicKey}else if(bytes.length===33){if(compressed){return hexlify(bytes)}return\"0x\"+getCurve().keyFromPublic(bytes).getPublic(false,\"hex\")}else if(bytes.length===65){if(!compressed){return hexlify(bytes)}return\"0x\"+getCurve().keyFromPublic(bytes).getPublic(true,\"hex\")}return logger$g.throwArgumentError(\"invalid public or private key\",\"key\",\"[REDACTED]\")}const version$c=\"transactions/5.1.1\";\"use strict\";const logger$h=new Logger(version$c);function handleAddress(value){if(value===\"0x\"){return null}return getAddress(value)}function handleNumber(value){if(value===\"0x\"){return Zero$1}return BigNumber.from(value)}const transactionFields=[{name:\"nonce\",maxLength:32,numeric:true},{name:\"gasPrice\",maxLength:32,numeric:true},{name:\"gasLimit\",maxLength:32,numeric:true},{name:\"to\",length:20},{name:\"value\",maxLength:32,numeric:true},{name:\"data\"}];const allowedTransactionKeys$1={chainId:true,data:true,gasLimit:true,gasPrice:true,nonce:true,to:true,value:true};function computeAddress(key){const publicKey=computePublicKey(key);return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey,1)),12))}function recoverAddress(digest,signature){return computeAddress(recoverPublicKey(arrayify(digest),signature))}function formatNumber(value,name){const result=stripZeros(BigNumber.from(value).toHexString());if(result.length>32){logger$h.throwArgumentError(\"invalid length for \"+name,\"transaction:\"+name,value)}return result}function accessSetify(addr,storageKeys){return{address:getAddress(addr),storageKeys:(storageKeys||[]).map((storageKey,index)=>{if(hexDataLength(storageKey)!==32){logger$h.throwArgumentError(\"invalid access list storageKey\",`accessList[${addr}:${index}]`,storageKey)}return storageKey.toLowerCase()})}}function accessListify(value){if(Array.isArray(value)){return value.map((set,index)=>{if(Array.isArray(set)){if(set.length>2){logger$h.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\",`value[${index}]`,set)}return accessSetify(set[0],set[1])}return accessSetify(set.address,set.storageKeys)})}const result=Object.keys(value).map(addr=>{const storageKeys=value[addr].reduce((accum,storageKey)=>{accum[storageKey]=true;return accum},{});return accessSetify(addr,Object.keys(storageKeys).sort())});result.sort((a,b)=>a.address.localeCompare(b.address));return result}function formatAccessList(value){return accessListify(value).map(set=>[set.address,set.storageKeys])}function _serializeEip2930(transaction,signature){const fields=[formatNumber(transaction.chainId||0,\"chainId\"),formatNumber(transaction.nonce||0,\"nonce\"),formatNumber(transaction.gasPrice||0,\"gasPrice\"),formatNumber(transaction.gasLimit||0,\"gasLimit\"),transaction.to!=null?getAddress(transaction.to):\"0x\",formatNumber(transaction.value||0,\"value\"),transaction.data||\"0x\",formatAccessList(transaction.accessList||[])];if(signature){const sig=splitSignature(signature);fields.push(formatNumber(sig.recoveryParam,\"recoveryParam\"));fields.push(stripZeros(sig.r));fields.push(stripZeros(sig.s))}return hexConcat([\"0x01\",encode(fields)])}function _serialize(transaction,signature){checkProperties(transaction,allowedTransactionKeys$1);const raw=[];transactionFields.forEach(function(fieldInfo){let value=transaction[fieldInfo.name]||[];const options={};if(fieldInfo.numeric){options.hexPad=\"left\"}value=arrayify(hexlify(value,options));if(fieldInfo.length&&value.length!==fieldInfo.length&&value.length>0){logger$h.throwArgumentError(\"invalid length for \"+fieldInfo.name,\"transaction:\"+fieldInfo.name,value)}if(fieldInfo.maxLength){value=stripZeros(value);if(value.length>fieldInfo.maxLength){logger$h.throwArgumentError(\"invalid length for \"+fieldInfo.name,\"transaction:\"+fieldInfo.name,value)}}raw.push(hexlify(value))});let chainId=0;if(transaction.chainId!=null){chainId=transaction.chainId;if(typeof chainId!==\"number\"){logger$h.throwArgumentError(\"invalid transaction.chainId\",\"transaction\",transaction)}}else if(signature&&!isBytesLike(signature)&&signature.v>28){chainId=Math.floor((signature.v-35)/2)}if(chainId!==0){raw.push(hexlify(chainId));raw.push(\"0x\");raw.push(\"0x\")}if(!signature){return encode(raw)}const sig=splitSignature(signature);let v=27+sig.recoveryParam;if(chainId!==0){raw.pop();raw.pop();raw.pop();v+=chainId*2+8;if(sig.v>28&&sig.v!==v){logger$h.throwArgumentError(\"transaction.chainId/signature.v mismatch\",\"signature\",signature)}}else if(sig.v!==v){logger$h.throwArgumentError(\"transaction.chainId/signature.v mismatch\",\"signature\",signature)}raw.push(hexlify(v));raw.push(stripZeros(arrayify(sig.r)));raw.push(stripZeros(arrayify(sig.s)));return encode(raw)}function serialize(transaction,signature){if(transaction.type==null){if(transaction.accessList!=null){logger$h.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\",\"transaction\",transaction)}return _serialize(transaction,signature)}switch(transaction.type){case 1:return _serializeEip2930(transaction,signature);default:break}return logger$h.throwError(`unsupported transaction type: ${transaction.type}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:\"serializeTransaction\",transactionType:transaction.type})}function _parseEip2930(payload){const transaction=decode(payload.slice(1));if(transaction.length!==8&&transaction.length!==11){logger$h.throwArgumentError(\"invalid component count for transaction type: 1\",\"payload\",hexlify(payload))}const tx={type:1,chainId:handleNumber(transaction[0]).toNumber(),nonce:handleNumber(transaction[1]).toNumber(),gasPrice:handleNumber(transaction[2]),gasLimit:handleNumber(transaction[3]),to:handleAddress(transaction[4]),value:handleNumber(transaction[5]),data:transaction[6],accessList:accessListify(transaction[7])};if(transaction.length===8){return tx}try{const recid=handleNumber(transaction[8]).toNumber();if(recid!==0&&recid!==1){throw new Error(\"bad recid\")}tx.v=recid}catch(error){logger$h.throwArgumentError(\"invalid v for transaction type: 1\",\"v\",transaction[8])}tx.r=hexZeroPad(transaction[9],32);tx.s=hexZeroPad(transaction[10],32);try{const digest=keccak256(_serializeEip2930(tx));tx.from=recoverAddress(digest,{r:tx.r,s:tx.s,recoveryParam:tx.v})}catch(error){console.log(error)}tx.hash=keccak256(payload);return tx}function _parse(rawTransaction){const transaction=decode(rawTransaction);if(transaction.length!==9&&transaction.length!==6){logger$h.throwArgumentError(\"invalid raw transaction\",\"rawTransaction\",rawTransaction)}const tx={nonce:handleNumber(transaction[0]).toNumber(),gasPrice:handleNumber(transaction[1]),gasLimit:handleNumber(transaction[2]),to:handleAddress(transaction[3]),value:handleNumber(transaction[4]),data:transaction[5],chainId:0};if(transaction.length===6){return tx}try{tx.v=BigNumber.from(transaction[6]).toNumber()}catch(error){console.log(error);return tx}tx.r=hexZeroPad(transaction[7],32);tx.s=hexZeroPad(transaction[8],32);if(BigNumber.from(tx.r).isZero()&&BigNumber.from(tx.s).isZero()){tx.chainId=tx.v;tx.v=0}else{tx.chainId=Math.floor((tx.v-35)/2);if(tx.chainId<0){tx.chainId=0}let recoveryParam=tx.v-27;const raw=transaction.slice(0,6);if(tx.chainId!==0){raw.push(hexlify(tx.chainId));raw.push(\"0x\");raw.push(\"0x\");recoveryParam-=tx.chainId*2+8}const digest=keccak256(encode(raw));try{tx.from=recoverAddress(digest,{r:hexlify(tx.r),s:hexlify(tx.s),recoveryParam:recoveryParam})}catch(error){console.log(error)}tx.hash=keccak256(rawTransaction)}tx.type=null;return tx}function parse(rawTransaction){const payload=arrayify(rawTransaction);if(payload[0]>127){return _parse(payload)}switch(payload[0]){case 1:return _parseEip2930(payload);default:break}return logger$h.throwError(`unsupported transaction type: ${payload[0]}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:\"parseTransaction\",transactionType:payload[0]})}const version$d=\"contracts/5.1.1\";\"use strict\";var __awaiter$3=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$i=new Logger(version$d);const allowedTransactionKeys$2={chainId:true,data:true,from:true,gasLimit:true,gasPrice:true,nonce:true,to:true,value:true,type:true,accessList:true};function resolveName(resolver,nameOrPromise){return __awaiter$3(this,void 0,void 0,function*(){const name=yield nameOrPromise;try{return getAddress(name)}catch(error){}if(!resolver){logger$i.throwError(\"a provider or signer is needed to resolve ENS names\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"resolveName\"})}const address=yield resolver.resolveName(name);if(address==null){logger$i.throwArgumentError(\"resolver or addr is not configured for ENS name\",\"name\",name)}return address})}function resolveAddresses(resolver,value,paramType){return __awaiter$3(this,void 0,void 0,function*(){if(Array.isArray(paramType)){return yield Promise.all(paramType.map((paramType,index)=>{return resolveAddresses(resolver,Array.isArray(value)?value[index]:value[paramType.name],paramType)}))}if(paramType.type===\"address\"){return yield resolveName(resolver,value)}if(paramType.type===\"tuple\"){return yield resolveAddresses(resolver,value,paramType.components)}if(paramType.baseType===\"array\"){if(!Array.isArray(value)){return Promise.reject(new Error(\"invalid value for array\"))}return yield Promise.all(value.map(v=>resolveAddresses(resolver,v,paramType.arrayChildren)))}return value})}function populateTransaction(contract,fragment,args){return __awaiter$3(this,void 0,void 0,function*(){let overrides={};if(args.length===fragment.inputs.length+1&&typeof args[args.length-1]===\"object\"){overrides=shallowCopy(args.pop())}logger$i.checkArgumentCount(args.length,fragment.inputs.length,\"passed to contract\");if(contract.signer){if(overrides.from){overrides.from=resolveProperties({override:resolveName(contract.signer,overrides.from),signer:contract.signer.getAddress()}).then(check=>__awaiter$3(this,void 0,void 0,function*(){if(getAddress(check.signer)!==check.override){logger$i.throwError(\"Contract with a Signer cannot override from\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"overrides.from\"})}return check.override}))}else{overrides.from=contract.signer.getAddress()}}else if(overrides.from){overrides.from=resolveName(contract.provider,overrides.from)}const resolved=yield resolveProperties({args:resolveAddresses(contract.signer||contract.provider,args,fragment.inputs),address:contract.resolvedAddress,overrides:resolveProperties(overrides)||{}});const data=contract.interface.encodeFunctionData(fragment,resolved.args);const tx={data:data,to:resolved.address};const ro=resolved.overrides;if(ro.nonce!=null){tx.nonce=BigNumber.from(ro.nonce).toNumber()}if(ro.gasLimit!=null){tx.gasLimit=BigNumber.from(ro.gasLimit)}if(ro.gasPrice!=null){tx.gasPrice=BigNumber.from(ro.gasPrice)}if(ro.from!=null){tx.from=ro.from}if(ro.type!=null){tx.type=ro.type}if(ro.accessList!=null){tx.accessList=accessListify(ro.accessList)}if(tx.gasLimit==null&&fragment.gas!=null){let intrinsic=21e3;const bytes=arrayify(data);for(let i=0;i<bytes.length;i++){intrinsic+=4;if(bytes[i]){intrinsic+=64}}tx.gasLimit=BigNumber.from(fragment.gas).add(intrinsic)}if(ro.value){const roValue=BigNumber.from(ro.value);if(!roValue.isZero()&&!fragment.payable){logger$i.throwError(\"non-payable method cannot override value\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"overrides.value\",value:overrides.value})}tx.value=roValue}delete overrides.nonce;delete overrides.gasLimit;delete overrides.gasPrice;delete overrides.from;delete overrides.value;delete overrides.type;delete overrides.accessList;const leftovers=Object.keys(overrides).filter(key=>overrides[key]!=null);if(leftovers.length){logger$i.throwError(`cannot override ${leftovers.map(l=>JSON.stringify(l)).join(\",\")}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:\"overrides\",overrides:leftovers})}return tx})}function buildPopulate(contract,fragment){return function(...args){return populateTransaction(contract,fragment,args)}}function buildEstimate(contract,fragment){const signerOrProvider=contract.signer||contract.provider;return function(...args){return __awaiter$3(this,void 0,void 0,function*(){if(!signerOrProvider){logger$i.throwError(\"estimate require a provider or signer\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"estimateGas\"})}const tx=yield populateTransaction(contract,fragment,args);return yield signerOrProvider.estimateGas(tx)})}}function buildCall(contract,fragment,collapseSimple){const signerOrProvider=contract.signer||contract.provider;return function(...args){return __awaiter$3(this,void 0,void 0,function*(){let blockTag=undefined;if(args.length===fragment.inputs.length+1&&typeof args[args.length-1]===\"object\"){const overrides=shallowCopy(args.pop());if(overrides.blockTag!=null){blockTag=yield overrides.blockTag}delete overrides.blockTag;args.push(overrides)}if(contract.deployTransaction!=null){yield contract._deployed(blockTag)}const tx=yield populateTransaction(contract,fragment,args);const result=yield signerOrProvider.call(tx,blockTag);try{let value=contract.interface.decodeFunctionResult(fragment,result);if(collapseSimple&&fragment.outputs.length===1){value=value[0]}return value}catch(error){if(error.code===Logger.errors.CALL_EXCEPTION){error.address=contract.address;error.args=args;error.transaction=tx}throw error}})}}function buildSend(contract,fragment){return function(...args){return __awaiter$3(this,void 0,void 0,function*(){if(!contract.signer){logger$i.throwError(\"sending a transaction requires a signer\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"sendTransaction\"})}if(contract.deployTransaction!=null){yield contract._deployed()}const txRequest=yield populateTransaction(contract,fragment,args);const tx=yield contract.signer.sendTransaction(txRequest);const wait=tx.wait.bind(tx);tx.wait=(confirmations=>{return wait(confirmations).then(receipt=>{receipt.events=receipt.logs.map(log=>{let event=deepCopy(log);let parsed=null;try{parsed=contract.interface.parseLog(log)}catch(e){}if(parsed){event.args=parsed.args;event.decode=((data,topics)=>{return contract.interface.decodeEventLog(parsed.eventFragment,data,topics)});event.event=parsed.name;event.eventSignature=parsed.signature}event.removeListener=(()=>{return contract.provider});event.getBlock=(()=>{return contract.provider.getBlock(receipt.blockHash)});event.getTransaction=(()=>{return contract.provider.getTransaction(receipt.transactionHash)});event.getTransactionReceipt=(()=>{return Promise.resolve(receipt)});return event});return receipt})});return tx})}}function buildDefault(contract,fragment,collapseSimple){if(fragment.constant){return buildCall(contract,fragment,collapseSimple)}return buildSend(contract,fragment)}function getEventTag(filter){if(filter.address&&(filter.topics==null||filter.topics.length===0)){return\"*\"}return(filter.address||\"*\")+\"@\"+(filter.topics?filter.topics.map(topic=>{if(Array.isArray(topic)){return topic.join(\"|\")}return topic}).join(\":\"):\"\")}class RunningEvent{constructor(tag,filter){defineReadOnly(this,\"tag\",tag);defineReadOnly(this,\"filter\",filter);this._listeners=[]}addListener(listener,once){this._listeners.push({listener:listener,once:once})}removeListener(listener){let done=false;this._listeners=this._listeners.filter(item=>{if(done||item.listener!==listener){return true}done=true;return false})}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map(i=>i.listener)}listenerCount(){return this._listeners.length}run(args){const listenerCount=this.listenerCount();this._listeners=this._listeners.filter(item=>{const argsCopy=args.slice();setTimeout(()=>{item.listener.apply(this,argsCopy)},0);return!item.once});return listenerCount}prepareEvent(event){}getEmit(event){return[event]}}class ErrorRunningEvent extends RunningEvent{constructor(){super(\"error\",null)}}class FragmentRunningEvent extends RunningEvent{constructor(address,contractInterface,fragment,topics){const filter={address:address};let topic=contractInterface.getEventTopic(fragment);if(topics){if(topic!==topics[0]){logger$i.throwArgumentError(\"topic mismatch\",\"topics\",topics)}filter.topics=topics.slice()}else{filter.topics=[topic]}super(getEventTag(filter),filter);defineReadOnly(this,\"address\",address);defineReadOnly(this,\"interface\",contractInterface);defineReadOnly(this,\"fragment\",fragment)}prepareEvent(event){super.prepareEvent(event);event.event=this.fragment.name;event.eventSignature=this.fragment.format();event.decode=((data,topics)=>{return this.interface.decodeEventLog(this.fragment,data,topics)});try{event.args=this.interface.decodeEventLog(this.fragment,event.data,event.topics)}catch(error){event.args=null;event.decodeError=error}}getEmit(event){const errors=checkResultErrors(event.args);if(errors.length){throw errors[0].error}const args=(event.args||[]).slice();args.push(event);return args}}class WildcardRunningEvent extends RunningEvent{constructor(address,contractInterface){super(\"*\",{address:address});defineReadOnly(this,\"address\",address);defineReadOnly(this,\"interface\",contractInterface)}prepareEvent(event){super.prepareEvent(event);try{const parsed=this.interface.parseLog(event);event.event=parsed.name;event.eventSignature=parsed.signature;event.decode=((data,topics)=>{return this.interface.decodeEventLog(parsed.eventFragment,data,topics)});event.args=parsed.args}catch(error){}}}class BaseContract{constructor(addressOrName,contractInterface,signerOrProvider){logger$i.checkNew(new.target,Contract);defineReadOnly(this,\"interface\",getStatic(new.target,\"getInterface\")(contractInterface));if(signerOrProvider==null){defineReadOnly(this,\"provider\",null);defineReadOnly(this,\"signer\",null)}else if(Signer.isSigner(signerOrProvider)){defineReadOnly(this,\"provider\",signerOrProvider.provider||null);defineReadOnly(this,\"signer\",signerOrProvider)}else if(Provider.isProvider(signerOrProvider)){defineReadOnly(this,\"provider\",signerOrProvider);defineReadOnly(this,\"signer\",null)}else{logger$i.throwArgumentError(\"invalid signer or provider\",\"signerOrProvider\",signerOrProvider)}defineReadOnly(this,\"callStatic\",{});defineReadOnly(this,\"estimateGas\",{});defineReadOnly(this,\"functions\",{});defineReadOnly(this,\"populateTransaction\",{});defineReadOnly(this,\"filters\",{});{const uniqueFilters={};Object.keys(this.interface.events).forEach(eventSignature=>{const event=this.interface.events[eventSignature];defineReadOnly(this.filters,eventSignature,(...args)=>{return{address:this.address,topics:this.interface.encodeFilterTopics(event,args)}});if(!uniqueFilters[event.name]){uniqueFilters[event.name]=[]}uniqueFilters[event.name].push(eventSignature)});Object.keys(uniqueFilters).forEach(name=>{const filters=uniqueFilters[name];if(filters.length===1){defineReadOnly(this.filters,name,this.filters[filters[0]])}else{logger$i.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`)}})}defineReadOnly(this,\"_runningEvents\",{});defineReadOnly(this,\"_wrappedEmits\",{});if(addressOrName==null){logger$i.throwArgumentError(\"invalid contract address or ENS name\",\"addressOrName\",addressOrName)}defineReadOnly(this,\"address\",addressOrName);if(this.provider){defineReadOnly(this,\"resolvedAddress\",resolveName(this.provider,addressOrName))}else{try{defineReadOnly(this,\"resolvedAddress\",Promise.resolve(getAddress(addressOrName)))}catch(error){logger$i.throwError(\"provider is required to use ENS name as contract address\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"new Contract\"})}}const uniqueNames={};const uniqueSignatures={};Object.keys(this.interface.functions).forEach(signature=>{const fragment=this.interface.functions[signature];if(uniqueSignatures[signature]){logger$i.warn(`Duplicate ABI entry for ${JSON.stringify(name)}`);return}uniqueSignatures[signature]=true;{const name=fragment.name;if(!uniqueNames[name]){uniqueNames[name]=[]}uniqueNames[name].push(signature)}if(this[signature]==null){defineReadOnly(this,signature,buildDefault(this,fragment,true))}if(this.functions[signature]==null){defineReadOnly(this.functions,signature,buildDefault(this,fragment,false))}if(this.callStatic[signature]==null){defineReadOnly(this.callStatic,signature,buildCall(this,fragment,true))}if(this.populateTransaction[signature]==null){defineReadOnly(this.populateTransaction,signature,buildPopulate(this,fragment))}if(this.estimateGas[signature]==null){defineReadOnly(this.estimateGas,signature,buildEstimate(this,fragment))}});Object.keys(uniqueNames).forEach(name=>{const signatures=uniqueNames[name];if(signatures.length>1){return}const signature=signatures[0];try{if(this[name]==null){defineReadOnly(this,name,this[signature])}}catch(e){}if(this.functions[name]==null){defineReadOnly(this.functions,name,this.functions[signature])}if(this.callStatic[name]==null){defineReadOnly(this.callStatic,name,this.callStatic[signature])}if(this.populateTransaction[name]==null){defineReadOnly(this.populateTransaction,name,this.populateTransaction[signature])}if(this.estimateGas[name]==null){defineReadOnly(this.estimateGas,name,this.estimateGas[signature])}})}static getContractAddress(transaction){return getContractAddress(transaction)}static getInterface(contractInterface){if(Interface.isInterface(contractInterface)){return contractInterface}return new Interface(contractInterface)}deployed(){return this._deployed()}_deployed(blockTag){if(!this._deployedPromise){if(this.deployTransaction){this._deployedPromise=this.deployTransaction.wait().then(()=>{return this})}else{this._deployedPromise=this.provider.getCode(this.address,blockTag).then(code=>{if(code===\"0x\"){logger$i.throwError(\"contract not deployed\",Logger.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:\"getDeployed\"})}return this})}}return this._deployedPromise}fallback(overrides){if(!this.signer){logger$i.throwError(\"sending a transactions require a signer\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"sendTransaction(fallback)\"})}const tx=shallowCopy(overrides||{});[\"from\",\"to\"].forEach(function(key){if(tx[key]==null){return}logger$i.throwError(\"cannot override \"+key,Logger.errors.UNSUPPORTED_OPERATION,{operation:key})});tx.to=this.resolvedAddress;return this.deployed().then(()=>{return this.signer.sendTransaction(tx)})}connect(signerOrProvider){if(typeof signerOrProvider===\"string\"){signerOrProvider=new VoidSigner(signerOrProvider,this.provider)}const contract=new this.constructor(this.address,this.interface,signerOrProvider);if(this.deployTransaction){defineReadOnly(contract,\"deployTransaction\",this.deployTransaction)}return contract}attach(addressOrName){return new this.constructor(addressOrName,this.interface,this.signer||this.provider)}static isIndexed(value){return Indexed.isIndexed(value)}_normalizeRunningEvent(runningEvent){if(this._runningEvents[runningEvent.tag]){return this._runningEvents[runningEvent.tag]}return runningEvent}_getRunningEvent(eventName){if(typeof eventName===\"string\"){if(eventName===\"error\"){return this._normalizeRunningEvent(new ErrorRunningEvent)}if(eventName===\"event\"){return this._normalizeRunningEvent(new RunningEvent(\"event\",null))}if(eventName===\"*\"){return this._normalizeRunningEvent(new WildcardRunningEvent(this.address,this.interface))}const fragment=this.interface.getEvent(eventName);return this._normalizeRunningEvent(new FragmentRunningEvent(this.address,this.interface,fragment))}if(eventName.topics&&eventName.topics.length>0){try{const topic=eventName.topics[0];if(typeof topic!==\"string\"){throw new Error(\"invalid topic\")}const fragment=this.interface.getEvent(topic);return this._normalizeRunningEvent(new FragmentRunningEvent(this.address,this.interface,fragment,eventName.topics))}catch(error){}const filter={address:this.address,topics:eventName.topics};return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter),filter))}return this._normalizeRunningEvent(new WildcardRunningEvent(this.address,this.interface))}_checkRunningEvents(runningEvent){if(runningEvent.listenerCount()===0){delete this._runningEvents[runningEvent.tag];const emit=this._wrappedEmits[runningEvent.tag];if(emit&&runningEvent.filter){this.provider.off(runningEvent.filter,emit);delete this._wrappedEmits[runningEvent.tag]}}}_wrapEvent(runningEvent,log,listener){const event=deepCopy(log);event.removeListener=(()=>{if(!listener){return}runningEvent.removeListener(listener);this._checkRunningEvents(runningEvent)});event.getBlock=(()=>{return this.provider.getBlock(log.blockHash)});event.getTransaction=(()=>{return this.provider.getTransaction(log.transactionHash)});event.getTransactionReceipt=(()=>{return this.provider.getTransactionReceipt(log.transactionHash)});runningEvent.prepareEvent(event);return event}_addEventListener(runningEvent,listener,once){if(!this.provider){logger$i.throwError(\"events require a provider or a signer with a provider\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"once\"})}runningEvent.addListener(listener,once);this._runningEvents[runningEvent.tag]=runningEvent;if(!this._wrappedEmits[runningEvent.tag]){const wrappedEmit=log=>{let event=this._wrapEvent(runningEvent,log,listener);if(event.decodeError==null){try{const args=runningEvent.getEmit(event);this.emit(runningEvent.filter,...args)}catch(error){event.decodeError=error.error}}if(runningEvent.filter!=null){this.emit(\"event\",event)}if(event.decodeError!=null){this.emit(\"error\",event.decodeError,event)}};this._wrappedEmits[runningEvent.tag]=wrappedEmit;if(runningEvent.filter!=null){this.provider.on(runningEvent.filter,wrappedEmit)}}}queryFilter(event,fromBlockOrBlockhash,toBlock){const runningEvent=this._getRunningEvent(event);const filter=shallowCopy(runningEvent.filter);if(typeof fromBlockOrBlockhash===\"string\"&&isHexString(fromBlockOrBlockhash,32)){if(toBlock!=null){logger$i.throwArgumentError(\"cannot specify toBlock with blockhash\",\"toBlock\",toBlock)}filter.blockHash=fromBlockOrBlockhash}else{filter.fromBlock=fromBlockOrBlockhash!=null?fromBlockOrBlockhash:0;filter.toBlock=toBlock!=null?toBlock:\"latest\"}return this.provider.getLogs(filter).then(logs=>{return logs.map(log=>this._wrapEvent(runningEvent,log,null))})}on(event,listener){this._addEventListener(this._getRunningEvent(event),listener,false);return this}once(event,listener){this._addEventListener(this._getRunningEvent(event),listener,true);return this}emit(eventName,...args){if(!this.provider){return false}const runningEvent=this._getRunningEvent(eventName);const result=runningEvent.run(args)>0;this._checkRunningEvents(runningEvent);return result}listenerCount(eventName){if(!this.provider){return 0}if(eventName==null){return Object.keys(this._runningEvents).reduce((accum,key)=>{return accum+this._runningEvents[key].listenerCount()},0)}return this._getRunningEvent(eventName).listenerCount()}listeners(eventName){if(!this.provider){return[]}if(eventName==null){const result=[];for(let tag in this._runningEvents){this._runningEvents[tag].listeners().forEach(listener=>{result.push(listener)})}return result}return this._getRunningEvent(eventName).listeners()}removeAllListeners(eventName){if(!this.provider){return this}if(eventName==null){for(const tag in this._runningEvents){const runningEvent=this._runningEvents[tag];runningEvent.removeAllListeners();this._checkRunningEvents(runningEvent)}return this}const runningEvent=this._getRunningEvent(eventName);runningEvent.removeAllListeners();this._checkRunningEvents(runningEvent);return this}off(eventName,listener){if(!this.provider){return this}const runningEvent=this._getRunningEvent(eventName);runningEvent.removeListener(listener);this._checkRunningEvents(runningEvent);return this}removeListener(eventName,listener){return this.off(eventName,listener)}}class Contract extends BaseContract{}class ContractFactory{constructor(contractInterface,bytecode,signer){let bytecodeHex=null;if(typeof bytecode===\"string\"){bytecodeHex=bytecode}else if(isBytes(bytecode)){bytecodeHex=hexlify(bytecode)}else if(bytecode&&typeof bytecode.object===\"string\"){bytecodeHex=bytecode.object}else{bytecodeHex=\"!\"}if(bytecodeHex.substring(0,2)!==\"0x\"){bytecodeHex=\"0x\"+bytecodeHex}if(!isHexString(bytecodeHex)||bytecodeHex.length%2){logger$i.throwArgumentError(\"invalid bytecode\",\"bytecode\",bytecode)}if(signer&&!Signer.isSigner(signer)){logger$i.throwArgumentError(\"invalid signer\",\"signer\",signer)}defineReadOnly(this,\"bytecode\",bytecodeHex);defineReadOnly(this,\"interface\",getStatic(new.target,\"getInterface\")(contractInterface));defineReadOnly(this,\"signer\",signer||null)}getDeployTransaction(...args){let tx={};if(args.length===this.interface.deploy.inputs.length+1&&typeof args[args.length-1]===\"object\"){tx=shallowCopy(args.pop());for(const key in tx){if(!allowedTransactionKeys$2[key]){throw new Error(\"unknown transaction override \"+key)}}}[\"data\",\"from\",\"to\"].forEach(key=>{if(tx[key]==null){return}logger$i.throwError(\"cannot override \"+key,Logger.errors.UNSUPPORTED_OPERATION,{operation:key})});logger$i.checkArgumentCount(args.length,this.interface.deploy.inputs.length,\" in Contract constructor\");tx.data=hexlify(concat([this.bytecode,this.interface.encodeDeploy(args)]));return tx}deploy(...args){return __awaiter$3(this,void 0,void 0,function*(){let overrides={};if(args.length===this.interface.deploy.inputs.length+1){overrides=args.pop()}logger$i.checkArgumentCount(args.length,this.interface.deploy.inputs.length,\" in Contract constructor\");const params=yield resolveAddresses(this.signer,args,this.interface.deploy.inputs);params.push(overrides);const unsignedTx=this.getDeployTransaction(...params);const tx=yield this.signer.sendTransaction(unsignedTx);const address=getStatic(this.constructor,\"getContractAddress\")(tx);const contract=getStatic(this.constructor,\"getContract\")(address,this.interface,this.signer);defineReadOnly(contract,\"deployTransaction\",tx);return contract})}attach(address){return this.constructor.getContract(address,this.interface,this.signer)}connect(signer){return new this.constructor(this.interface,this.bytecode,signer)}static fromSolidity(compilerOutput,signer){if(compilerOutput==null){logger$i.throwError(\"missing compiler output\",Logger.errors.MISSING_ARGUMENT,{argument:\"compilerOutput\"})}if(typeof compilerOutput===\"string\"){compilerOutput=JSON.parse(compilerOutput)}const abi=compilerOutput.abi;let bytecode=null;if(compilerOutput.bytecode){bytecode=compilerOutput.bytecode}else if(compilerOutput.evm&&compilerOutput.evm.bytecode){bytecode=compilerOutput.evm.bytecode}return new this(abi,bytecode,signer)}static getInterface(contractInterface){return Contract.getInterface(contractInterface)}static getContractAddress(tx){return getContractAddress(tx)}static getContract(address,contractInterface,signer){return new Contract(address,contractInterface,signer)}}class BaseX{constructor(alphabet){defineReadOnly(this,\"alphabet\",alphabet);defineReadOnly(this,\"base\",alphabet.length);defineReadOnly(this,\"_alphabetMap\",{});defineReadOnly(this,\"_leader\",alphabet.charAt(0));for(let i=0;i<alphabet.length;i++){this._alphabetMap[alphabet.charAt(i)]=i}}encode(value){let source=arrayify(value);if(source.length===0){return\"\"}let digits=[0];for(let i=0;i<source.length;++i){let carry=source[i];for(let j=0;j<digits.length;++j){carry+=digits[j]<<8;digits[j]=carry%this.base;carry=carry/this.base|0}while(carry>0){digits.push(carry%this.base);carry=carry/this.base|0}}let string=\"\";for(let k=0;source[k]===0&&k<source.length-1;++k){string+=this._leader}for(let q=digits.length-1;q>=0;--q){string+=this.alphabet[digits[q]]}return string}decode(value){if(typeof value!==\"string\"){throw new TypeError(\"Expected String\")}let bytes=[];if(value.length===0){return new Uint8Array(bytes)}bytes.push(0);for(let i=0;i<value.length;i++){let byte=this._alphabetMap[value[i]];if(byte===undefined){throw new Error(\"Non-base\"+this.base+\" character\")}let carry=byte;for(let j=0;j<bytes.length;++j){carry+=bytes[j]*this.base;bytes[j]=carry&255;carry>>=8}while(carry>0){bytes.push(carry&255);carry>>=8}}for(let k=0;value[k]===this._leader&&k<value.length-1;++k){bytes.push(0)}return arrayify(new Uint8Array(bytes.reverse()))}}const Base32=new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");const Base58=new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");var SupportedAlgorithm;(function(SupportedAlgorithm){SupportedAlgorithm[\"sha256\"]=\"sha256\";SupportedAlgorithm[\"sha512\"]=\"sha512\"})(SupportedAlgorithm||(SupportedAlgorithm={}));const version$e=\"sha2/5.1.0\";\"use strict\";const logger$j=new Logger(version$e);function ripemd160$1(data){return\"0x\"+hash_1.ripemd160().update(arrayify(data)).digest(\"hex\")}function sha256$1(data){return\"0x\"+hash_1.sha256().update(arrayify(data)).digest(\"hex\")}function sha512$1(data){return\"0x\"+hash_1.sha512().update(arrayify(data)).digest(\"hex\")}function computeHmac(algorithm,key,data){if(!SupportedAlgorithm[algorithm]){logger$j.throwError(\"unsupported algorithm \"+algorithm,Logger.errors.UNSUPPORTED_OPERATION,{operation:\"hmac\",algorithm:algorithm})}return\"0x\"+hash_1.hmac(hash_1[algorithm],arrayify(key)).update(arrayify(data)).digest(\"hex\")}\"use strict\";function pbkdf2(password,salt,iterations,keylen,hashAlgorithm){password=arrayify(password);salt=arrayify(salt);let hLen;let l=1;const DK=new Uint8Array(keylen);const block1=new Uint8Array(salt.length+4);block1.set(salt);let r;let T;for(let i=1;i<=l;i++){block1[salt.length]=i>>24&255;block1[salt.length+1]=i>>16&255;block1[salt.length+2]=i>>8&255;block1[salt.length+3]=i&255;let U=arrayify(computeHmac(hashAlgorithm,password,block1));if(!hLen){hLen=U.length;T=new Uint8Array(hLen);l=Math.ceil(keylen/hLen);r=keylen-(l-1)*hLen}T.set(U);for(let j=1;j<iterations;j++){U=arrayify(computeHmac(hashAlgorithm,password,U));for(let k=0;k<hLen;k++)T[k]^=U[k]}const destPos=(i-1)*hLen;const len=i===l?r:hLen;DK.set(arrayify(T).slice(0,len),destPos)}return hexlify(DK)}const version$f=\"wordlists/5.1.0\";\"use strict\";const exportWordlist=false;const logger$k=new Logger(version$f);class Wordlist{constructor(locale){logger$k.checkAbstract(new.target,Wordlist);defineReadOnly(this,\"locale\",locale)}split(mnemonic){return mnemonic.toLowerCase().split(/ +/g)}join(words){return words.join(\" \")}static check(wordlist){const words=[];for(let i=0;i<2048;i++){const word=wordlist.getWord(i);if(i!==wordlist.getWordIndex(word)){return\"0x\"}words.push(word)}return id(words.join(\"\\n\")+\"\\n\")}static register(lang,name){if(!name){name=lang.locale}if(exportWordlist){try{const anyGlobal=window;if(anyGlobal._ethers&&anyGlobal._ethers.wordlists){if(!anyGlobal._ethers.wordlists[name]){defineReadOnly(anyGlobal._ethers.wordlists,name,lang)}}}catch(error){}}}}\"use strict\";const words=\"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";let wordlist=null;function loadWords(lang){if(wordlist!=null){return}wordlist=words.replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \");if(Wordlist.check(lang)!==\"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\"){wordlist=null;throw new Error(\"BIP39 Wordlist for en (English) FAILED\")}}class LangCz extends Wordlist{constructor(){super(\"cz\")}getWord(index){loadWords(this);return wordlist[index]}getWordIndex(word){loadWords(this);return wordlist.indexOf(word)}}const langCz=new LangCz;Wordlist.register(langCz);\"use strict\";const words$1=\"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";let wordlist$1=null;function loadWords$1(lang){if(wordlist$1!=null){return}wordlist$1=words$1.replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \");if(Wordlist.check(lang)!==\"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\"){wordlist$1=null;throw new Error(\"BIP39 Wordlist for en (English) FAILED\")}}class LangEn extends Wordlist{constructor(){super(\"en\")}getWord(index){loadWords$1(this);return wordlist$1[index]}getWordIndex(word){loadWords$1(this);return wordlist$1.indexOf(word)}}const langEn=new LangEn;Wordlist.register(langEn);\"use strict\";const words$2=\"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";const lookup={};let wordlist$2=null;function dropDiacritic(word){logger$k.checkNormalize();return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()),c=>{return c>=65&&c<=90||c>=97&&c<=123}))}function expand(word){const output=[];Array.prototype.forEach.call(toUtf8Bytes(word),c=>{if(c===47){output.push(204);output.push(129)}else if(c===126){output.push(110);output.push(204);output.push(131)}else{output.push(c)}});return toUtf8String(output)}function loadWords$2(lang){if(wordlist$2!=null){return}wordlist$2=words$2.replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \").map(w=>expand(w));wordlist$2.forEach((word,index)=>{lookup[dropDiacritic(word)]=index});if(Wordlist.check(lang)!==\"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\"){wordlist$2=null;throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\")}}class LangEs extends Wordlist{constructor(){super(\"es\")}getWord(index){loadWords$2(this);return wordlist$2[index]}getWordIndex(word){loadWords$2(this);return lookup[dropDiacritic(word)]}}const langEs=new LangEs;Wordlist.register(langEs);\"use strict\";const words$3=\"\";let wordlist$3=null;const lookup$1={};function dropDiacritic$1(word){logger$k.checkNormalize();return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()),c=>{return c>=65&&c<=90||c>=97&&c<=123}))}function expand$1(word){const output=[];Array.prototype.forEach.call(toUtf8Bytes(word),c=>{if(c===47){output.push(204);output.push(129)}else if(c===45){output.push(204);output.push(128)}else{output.push(c)}});return toUtf8String(output)}function loadWords$3(lang){if(wordlist$3!=null){return}wordlist$3=words$3.replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \").map(w=>expand$1(w));wordlist$3.forEach((word,index)=>{lookup$1[dropDiacritic$1(word)]=index});if(Wordlist.check(lang)!==\"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\"){wordlist$3=null;throw new Error(\"BIP39 Wordlist for fr (French) FAILED\")}}class LangFr extends Wordlist{constructor(){super(\"fr\")}getWord(index){loadWords$3(this);return wordlist$3[index]}getWordIndex(word){loadWords$3(this);return lookup$1[dropDiacritic$1(word)]}}const langFr=new LangFr;Wordlist.register(langFr);\"use strict\";const data=[\"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\"IJBEJqXZJ\"];const mapping=\"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";let wordlist$4=null;function hex(word){return hexlify(toUtf8Bytes(word))}const KiYoKu=\"0xe3818de38284e3818f\";const KyoKu=\"0xe3818de38283e3818f\";function loadWords$4(lang){if(wordlist$4!==null){return}wordlist$4=[];const transform={};transform[toUtf8String([227,130,154])]=false;transform[toUtf8String([227,130,153])]=false;transform[toUtf8String([227,130,133])]=toUtf8String([227,130,134]);transform[toUtf8String([227,129,163])]=toUtf8String([227,129,164]);transform[toUtf8String([227,130,131])]=toUtf8String([227,130,132]);transform[toUtf8String([227,130,135])]=toUtf8String([227,130,136]);function normalize(word){let result=\"\";for(let i=0;i<word.length;i++){let kana=word[i];const target=transform[kana];if(target===false){continue}if(target){kana=target}result+=kana}return result}function sortJapanese(a,b){a=normalize(a);b=normalize(b);if(a<b){return-1}if(a>b){return 1}return 0}for(let length=3;length<=9;length++){const d=data[length-3];for(let offset=0;offset<d.length;offset+=length){const word=[];for(let i=0;i<length;i++){const k=mapping.indexOf(d[offset+i]);word.push(227);word.push(k&64?130:129);word.push((k&63)+128)}wordlist$4.push(toUtf8String(word))}}wordlist$4.sort(sortJapanese);if(hex(wordlist$4[442])===KiYoKu&&hex(wordlist$4[443])===KyoKu){const tmp=wordlist$4[442];wordlist$4[442]=wordlist$4[443];wordlist$4[443]=tmp}if(Wordlist.check(lang)!==\"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\"){wordlist$4=null;throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\")}}class LangJa extends Wordlist{constructor(){super(\"ja\")}getWord(index){loadWords$4(this);return wordlist$4[index]}getWordIndex(word){loadWords$4(this);return wordlist$4.indexOf(word)}split(mnemonic){logger$k.checkNormalize();return mnemonic.split(/(?:\\u3000| )+/g)}join(words){return words.join(\"　\")}}const langJa=new LangJa;Wordlist.register(langJa);\"use strict\";const data$1=[\"OYAa\",\"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"];const codes=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";function getHangul(code){if(code>=40){code=code+168-40}else if(code>=19){code=code+97-19}return toUtf8String([225,(code>>6)+132,(code&63)+128])}let wordlist$5=null;function loadWords$5(lang){if(wordlist$5!=null){return}wordlist$5=[];data$1.forEach((data,length)=>{length+=4;for(let i=0;i<data.length;i+=length){let word=\"\";for(let j=0;j<length;j++){word+=getHangul(codes.indexOf(data[i+j]))}wordlist$5.push(word)}});wordlist$5.sort();if(Wordlist.check(lang)!==\"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\"){wordlist$5=null;throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\")}}class LangKo extends Wordlist{constructor(){super(\"ko\")}getWord(index){loadWords$5(this);return wordlist$5[index]}getWordIndex(word){loadWords$5(this);return wordlist$5.indexOf(word)}}const langKo=new LangKo;Wordlist.register(langKo);\"use strict\";const words$4=\"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";let wordlist$6=null;function loadWords$6(lang){if(wordlist$6!=null){return}wordlist$6=words$4.replace(/([A-Z])/g,\" $1\").toLowerCase().substring(1).split(\" \");if(Wordlist.check(lang)!==\"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\"){wordlist$6=null;throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\")}}class LangIt extends Wordlist{constructor(){super(\"it\")}getWord(index){loadWords$6(this);return wordlist$6[index]}getWordIndex(word){loadWords$6(this);return wordlist$6.indexOf(word)}}const langIt=new LangIt;Wordlist.register(langIt);\"use strict\";const data$2=\"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";const deltaData=\"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";const wordlist$7={zh_cn:null,zh_tw:null};const Checks={zh_cn:\"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",zh_tw:\"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"};const codes$1=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";const style=\"~!@#$%^&*_-=[]{}|;:,.()<>?\";function loadWords$7(lang){if(wordlist$7[lang.locale]!==null){return}wordlist$7[lang.locale]=[];let deltaOffset=0;for(let i=0;i<2048;i++){const s=style.indexOf(data$2[i*3]);const bytes=[228+(s>>2),128+codes$1.indexOf(data$2[i*3+1]),128+codes$1.indexOf(data$2[i*3+2])];if(lang.locale===\"zh_tw\"){const common=s%4;for(let i=common;i<3;i++){bytes[i]=codes$1.indexOf(deltaData[deltaOffset++])+(i==0?228:128)}}wordlist$7[lang.locale].push(toUtf8String(bytes))}if(Wordlist.check(lang)!==Checks[lang.locale]){wordlist$7[lang.locale]=null;throw new Error(\"BIP39 Wordlist for \"+lang.locale+\" (Chinese) FAILED\")}}class LangZh extends Wordlist{constructor(country){super(\"zh_\"+country)}getWord(index){loadWords$7(this);return wordlist$7[this.locale][index]}getWordIndex(word){loadWords$7(this);return wordlist$7[this.locale].indexOf(word)}split(mnemonic){mnemonic=mnemonic.replace(/(?:\\u3000| )+/g,\"\");return mnemonic.split(\"\")}}const langZhCn=new LangZh(\"cn\");Wordlist.register(langZhCn);Wordlist.register(langZhCn,\"zh\");const langZhTw=new LangZh(\"tw\");Wordlist.register(langZhTw);const wordlists={cz:langCz,en:langEn,es:langEs,fr:langFr,it:langIt,ja:langJa,ko:langKo,zh:langZhCn,zh_cn:langZhCn,zh_tw:langZhTw};\"use strict\";const version$g=\"hdnode/5.1.0\";\"use strict\";const logger$l=new Logger(version$g);const N=BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");const MasterSecret=toUtf8Bytes(\"Bitcoin seed\");const HardenedBit=2147483648;function getUpperMask(bits){return(1<<bits)-1<<8-bits}function getLowerMask(bits){return(1<<bits)-1}function bytes32(value){return hexZeroPad(hexlify(value),32)}function base58check(data){return Base58.encode(concat([data,hexDataSlice(sha256$1(sha256$1(data)),0,4)]))}function getWordlist(wordlist){if(wordlist==null){return wordlists[\"en\"]}if(typeof wordlist===\"string\"){const words=wordlists[wordlist];if(words==null){logger$l.throwArgumentError(\"unknown locale\",\"wordlist\",wordlist)}return words}return wordlist}const _constructorGuard$3={};const defaultPath=\"m/44'/60'/0'/0/0\";class HDNode{constructor(constructorGuard,privateKey,publicKey,parentFingerprint,chainCode,index,depth,mnemonicOrPath){logger$l.checkNew(new.target,HDNode);if(constructorGuard!==_constructorGuard$3){throw new Error(\"HDNode constructor cannot be called directly\")}if(privateKey){const signingKey=new SigningKey(privateKey);defineReadOnly(this,\"privateKey\",signingKey.privateKey);defineReadOnly(this,\"publicKey\",signingKey.compressedPublicKey)}else{defineReadOnly(this,\"privateKey\",null);defineReadOnly(this,\"publicKey\",hexlify(publicKey))}defineReadOnly(this,\"parentFingerprint\",parentFingerprint);defineReadOnly(this,\"fingerprint\",hexDataSlice(ripemd160$1(sha256$1(this.publicKey)),0,4));defineReadOnly(this,\"address\",computeAddress(this.publicKey));defineReadOnly(this,\"chainCode\",chainCode);defineReadOnly(this,\"index\",index);defineReadOnly(this,\"depth\",depth);if(mnemonicOrPath==null){defineReadOnly(this,\"mnemonic\",null);defineReadOnly(this,\"path\",null)}else if(typeof mnemonicOrPath===\"string\"){defineReadOnly(this,\"mnemonic\",null);defineReadOnly(this,\"path\",mnemonicOrPath)}else{defineReadOnly(this,\"mnemonic\",mnemonicOrPath);defineReadOnly(this,\"path\",mnemonicOrPath.path)}}get extendedKey(){if(this.depth>=256){throw new Error(\"Depth too large!\")}return base58check(concat([this.privateKey!=null?\"0x0488ADE4\":\"0x0488B21E\",hexlify(this.depth),this.parentFingerprint,hexZeroPad(hexlify(this.index),4),this.chainCode,this.privateKey!=null?concat([\"0x00\",this.privateKey]):this.publicKey]))}neuter(){return new HDNode(_constructorGuard$3,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(index){if(index>4294967295){throw new Error(\"invalid index - \"+String(index))}let path=this.path;if(path){path+=\"/\"+(index&~HardenedBit)}const data=new Uint8Array(37);if(index&HardenedBit){if(!this.privateKey){throw new Error(\"cannot derive child of neutered node\")}data.set(arrayify(this.privateKey),1);if(path){path+=\"'\"}}else{data.set(arrayify(this.publicKey))}for(let i=24;i>=0;i-=8){data[33+(i>>3)]=index>>24-i&255}const I=arrayify(computeHmac(SupportedAlgorithm.sha512,this.chainCode,data));const IL=I.slice(0,32);const IR=I.slice(32);let ki=null;let Ki=null;if(this.privateKey){ki=bytes32(BigNumber.from(IL).add(this.privateKey).mod(N))}else{const ek=new SigningKey(hexlify(IL));Ki=ek._addPoint(this.publicKey)}let mnemonicOrPath=path;const srcMnemonic=this.mnemonic;if(srcMnemonic){mnemonicOrPath=Object.freeze({phrase:srcMnemonic.phrase,path:path,locale:srcMnemonic.locale||\"en\"})}return new HDNode(_constructorGuard$3,ki,Ki,this.fingerprint,bytes32(IR),index,this.depth+1,mnemonicOrPath)}derivePath(path){const components=path.split(\"/\");if(components.length===0||components[0]===\"m\"&&this.depth!==0){throw new Error(\"invalid path - \"+path)}if(components[0]===\"m\"){components.shift()}let result=this;for(let i=0;i<components.length;i++){const component=components[i];if(component.match(/^[0-9]+'$/)){const index=parseInt(component.substring(0,component.length-1));if(index>=HardenedBit){throw new Error(\"invalid path index - \"+component)}result=result._derive(HardenedBit+index)}else if(component.match(/^[0-9]+$/)){const index=parseInt(component);if(index>=HardenedBit){throw new Error(\"invalid path index - \"+component)}result=result._derive(index)}else{throw new Error(\"invalid path component - \"+component)}}return result}static _fromSeed(seed,mnemonic){const seedArray=arrayify(seed);if(seedArray.length<16||seedArray.length>64){throw new Error(\"invalid seed\")}const I=arrayify(computeHmac(SupportedAlgorithm.sha512,MasterSecret,seedArray));return new HDNode(_constructorGuard$3,bytes32(I.slice(0,32)),null,\"0x00000000\",bytes32(I.slice(32)),0,0,mnemonic)}static fromMnemonic(mnemonic,password,wordlist){wordlist=getWordlist(wordlist);mnemonic=entropyToMnemonic(mnemonicToEntropy(mnemonic,wordlist),wordlist);return HDNode._fromSeed(mnemonicToSeed(mnemonic,password),{phrase:mnemonic,path:\"m\",locale:wordlist.locale})}static fromSeed(seed){return HDNode._fromSeed(seed,null)}static fromExtendedKey(extendedKey){const bytes=Base58.decode(extendedKey);if(bytes.length!==82||base58check(bytes.slice(0,78))!==extendedKey){logger$l.throwArgumentError(\"invalid extended key\",\"extendedKey\",\"[REDACTED]\")}const depth=bytes[4];const parentFingerprint=hexlify(bytes.slice(5,9));const index=parseInt(hexlify(bytes.slice(9,13)).substring(2),16);const chainCode=hexlify(bytes.slice(13,45));const key=bytes.slice(45,78);switch(hexlify(bytes.slice(0,4))){case\"0x0488b21e\":case\"0x043587cf\":return new HDNode(_constructorGuard$3,null,hexlify(key),parentFingerprint,chainCode,index,depth,null);case\"0x0488ade4\":case\"0x04358394 \":if(key[0]!==0){break}return new HDNode(_constructorGuard$3,hexlify(key.slice(1)),null,parentFingerprint,chainCode,index,depth,null)}return logger$l.throwArgumentError(\"invalid extended key\",\"extendedKey\",\"[REDACTED]\")}}function mnemonicToSeed(mnemonic,password){if(!password){password=\"\"}const salt=toUtf8Bytes(\"mnemonic\"+password,UnicodeNormalizationForm.NFKD);return pbkdf2(toUtf8Bytes(mnemonic,UnicodeNormalizationForm.NFKD),salt,2048,64,\"sha512\")}function mnemonicToEntropy(mnemonic,wordlist){wordlist=getWordlist(wordlist);logger$l.checkNormalize();const words=wordlist.split(mnemonic);if(words.length%3!==0){throw new Error(\"invalid mnemonic\")}const entropy=arrayify(new Uint8Array(Math.ceil(11*words.length/8)));let offset=0;for(let i=0;i<words.length;i++){let index=wordlist.getWordIndex(words[i].normalize(\"NFKD\"));if(index===-1){throw new Error(\"invalid mnemonic\")}for(let bit=0;bit<11;bit++){if(index&1<<10-bit){entropy[offset>>3]|=1<<7-offset%8}offset++}}const entropyBits=32*words.length/3;const checksumBits=words.length/3;const checksumMask=getUpperMask(checksumBits);const checksum=arrayify(sha256$1(entropy.slice(0,entropyBits/8)))[0]&checksumMask;if(checksum!==(entropy[entropy.length-1]&checksumMask)){throw new Error(\"invalid checksum\")}return hexlify(entropy.slice(0,entropyBits/8))}function entropyToMnemonic(entropy,wordlist){wordlist=getWordlist(wordlist);entropy=arrayify(entropy);if(entropy.length%4!==0||entropy.length<16||entropy.length>32){throw new Error(\"invalid entropy\")}const indices=[0];let remainingBits=11;for(let i=0;i<entropy.length;i++){if(remainingBits>8){indices[indices.length-1]<<=8;indices[indices.length-1]|=entropy[i];remainingBits-=8}else{indices[indices.length-1]<<=remainingBits;indices[indices.length-1]|=entropy[i]>>8-remainingBits;indices.push(entropy[i]&getLowerMask(8-remainingBits));remainingBits+=3}}const checksumBits=entropy.length/4;const checksum=arrayify(sha256$1(entropy))[0]&getUpperMask(checksumBits);indices[indices.length-1]<<=checksumBits;indices[indices.length-1]|=checksum>>8-checksumBits;return wordlist.join(indices.map(index=>wordlist.getWord(index)))}function isValidMnemonic(mnemonic,wordlist){try{mnemonicToEntropy(mnemonic,wordlist);return true}catch(error){}return false}const version$h=\"random/5.1.0\";\"use strict\";const logger$m=new Logger(version$h);let anyGlobal=null;try{anyGlobal=window;if(anyGlobal==null){throw new Error(\"try next\")}}catch(error){try{anyGlobal=global;if(anyGlobal==null){throw new Error(\"try next\")}}catch(error){anyGlobal={}}}let crypto=anyGlobal.crypto||anyGlobal.msCrypto;if(!crypto||!crypto.getRandomValues){logger$m.warn(\"WARNING: Missing strong random number source\");crypto={getRandomValues:function(buffer){return logger$m.throwError(\"no secure random source avaialble\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"crypto.getRandomValues\"})}}}function randomBytes(length){if(length<=0||length>1024||length%1){logger$m.throwArgumentError(\"invalid length\",\"length\",length)}const result=new Uint8Array(length);crypto.getRandomValues(result);return arrayify(result)}\"use strict\";function shuffled(array){array=array.slice();for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));const tmp=array[i];array[i]=array[j];array[j]=tmp}return array}\"use strict\";var aesJs=createCommonjsModule(function(module,exports){\"use strict\";(function(root){function checkInt(value){return parseInt(value)===value}function checkInts(arrayish){if(!checkInt(arrayish.length)){return false}for(var i=0;i<arrayish.length;i++){if(!checkInt(arrayish[i])||arrayish[i]<0||arrayish[i]>255){return false}}return true}function coerceArray(arg,copy){if(arg.buffer&&ArrayBuffer.isView(arg)&&arg.name===\"Uint8Array\"){if(copy){if(arg.slice){arg=arg.slice()}else{arg=Array.prototype.slice.call(arg)}}return arg}if(Array.isArray(arg)){if(!checkInts(arg)){throw new Error(\"Array contains invalid value: \"+arg)}return new Uint8Array(arg)}if(checkInt(arg.length)&&checkInts(arg)){return new Uint8Array(arg)}throw new Error(\"unsupported array-like object\")}function createArray(length){return new Uint8Array(length)}function copyArray(sourceArray,targetArray,targetStart,sourceStart,sourceEnd){if(sourceStart!=null||sourceEnd!=null){if(sourceArray.slice){sourceArray=sourceArray.slice(sourceStart,sourceEnd)}else{sourceArray=Array.prototype.slice.call(sourceArray,sourceStart,sourceEnd)}}targetArray.set(sourceArray,targetStart)}var convertUtf8=function(){function toBytes(text){var result=[],i=0;text=encodeURI(text);while(i<text.length){var c=text.charCodeAt(i++);if(c===37){result.push(parseInt(text.substr(i,2),16));i+=2}else{result.push(c)}}return coerceArray(result)}function fromBytes(bytes){var result=[],i=0;while(i<bytes.length){var c=bytes[i];if(c<128){result.push(String.fromCharCode(c));i++}else if(c>191&&c<224){result.push(String.fromCharCode((c&31)<<6|bytes[i+1]&63));i+=2}else{result.push(String.fromCharCode((c&15)<<12|(bytes[i+1]&63)<<6|bytes[i+2]&63));i+=3}}return result.join(\"\")}return{toBytes:toBytes,fromBytes:fromBytes}}();var convertHex=function(){function toBytes(text){var result=[];for(var i=0;i<text.length;i+=2){result.push(parseInt(text.substr(i,2),16))}return result}var Hex=\"0123456789abcdef\";function fromBytes(bytes){var result=[];for(var i=0;i<bytes.length;i++){var v=bytes[i];result.push(Hex[(v&240)>>4]+Hex[v&15])}return result.join(\"\")}return{toBytes:toBytes,fromBytes:fromBytes}}();var numberOfRounds={16:10,24:12,32:14};var rcon=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145];var S=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];var Si=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125];var T1=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986];var T2=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766];var T3=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126];var T4=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436];var T5=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890];var T6=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935];var T7=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600];var T8=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480];var U1=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795];var U2=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855];var U3=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150];var U4=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function convertToInt32(bytes){var result=[];for(var i=0;i<bytes.length;i+=4){result.push(bytes[i]<<24|bytes[i+1]<<16|bytes[i+2]<<8|bytes[i+3])}return result}var AES=function(key){if(!(this instanceof AES)){throw Error(\"AES must be instanitated with `new`\")}Object.defineProperty(this,\"key\",{value:coerceArray(key,true)});this._prepare()};AES.prototype._prepare=function(){var rounds=numberOfRounds[this.key.length];if(rounds==null){throw new Error(\"invalid key size (must be 16, 24 or 32 bytes)\")}this._Ke=[];this._Kd=[];for(var i=0;i<=rounds;i++){this._Ke.push([0,0,0,0]);this._Kd.push([0,0,0,0])}var roundKeyCount=(rounds+1)*4;var KC=this.key.length/4;var tk=convertToInt32(this.key);var index;for(var i=0;i<KC;i++){index=i>>2;this._Ke[index][i%4]=tk[i];this._Kd[rounds-index][i%4]=tk[i]}var rconpointer=0;var t=KC,tt;while(t<roundKeyCount){tt=tk[KC-1];tk[0]^=S[tt>>16&255]<<24^S[tt>>8&255]<<16^S[tt&255]<<8^S[tt>>24&255]^rcon[rconpointer]<<24;rconpointer+=1;if(KC!=8){for(var i=1;i<KC;i++){tk[i]^=tk[i-1]}}else{for(var i=1;i<KC/2;i++){tk[i]^=tk[i-1]}tt=tk[KC/2-1];tk[KC/2]^=S[tt&255]^S[tt>>8&255]<<8^S[tt>>16&255]<<16^S[tt>>24&255]<<24;for(var i=KC/2+1;i<KC;i++){tk[i]^=tk[i-1]}}var i=0,r,c;while(i<KC&&t<roundKeyCount){r=t>>2;c=t%4;this._Ke[r][c]=tk[i];this._Kd[rounds-r][c]=tk[i++];t++}}for(var r=1;r<rounds;r++){for(var c=0;c<4;c++){tt=this._Kd[r][c];this._Kd[r][c]=U1[tt>>24&255]^U2[tt>>16&255]^U3[tt>>8&255]^U4[tt&255]}}};AES.prototype.encrypt=function(plaintext){if(plaintext.length!=16){throw new Error(\"invalid plaintext size (must be 16 bytes)\")}var rounds=this._Ke.length-1;var a=[0,0,0,0];var t=convertToInt32(plaintext);for(var i=0;i<4;i++){t[i]^=this._Ke[0][i]}for(var r=1;r<rounds;r++){for(var i=0;i<4;i++){a[i]=T1[t[i]>>24&255]^T2[t[(i+1)%4]>>16&255]^T3[t[(i+2)%4]>>8&255]^T4[t[(i+3)%4]&255]^this._Ke[r][i]}t=a.slice()}var result=createArray(16),tt;for(var i=0;i<4;i++){tt=this._Ke[rounds][i];result[4*i]=(S[t[i]>>24&255]^tt>>24)&255;result[4*i+1]=(S[t[(i+1)%4]>>16&255]^tt>>16)&255;result[4*i+2]=(S[t[(i+2)%4]>>8&255]^tt>>8)&255;result[4*i+3]=(S[t[(i+3)%4]&255]^tt)&255}return result};AES.prototype.decrypt=function(ciphertext){if(ciphertext.length!=16){throw new Error(\"invalid ciphertext size (must be 16 bytes)\")}var rounds=this._Kd.length-1;var a=[0,0,0,0];var t=convertToInt32(ciphertext);for(var i=0;i<4;i++){t[i]^=this._Kd[0][i]}for(var r=1;r<rounds;r++){for(var i=0;i<4;i++){a[i]=T5[t[i]>>24&255]^T6[t[(i+3)%4]>>16&255]^T7[t[(i+2)%4]>>8&255]^T8[t[(i+1)%4]&255]^this._Kd[r][i]}t=a.slice()}var result=createArray(16),tt;for(var i=0;i<4;i++){tt=this._Kd[rounds][i];result[4*i]=(Si[t[i]>>24&255]^tt>>24)&255;result[4*i+1]=(Si[t[(i+3)%4]>>16&255]^tt>>16)&255;result[4*i+2]=(Si[t[(i+2)%4]>>8&255]^tt>>8)&255;result[4*i+3]=(Si[t[(i+1)%4]&255]^tt)&255}return result};var ModeOfOperationECB=function(key){if(!(this instanceof ModeOfOperationECB)){throw Error(\"AES must be instanitated with `new`\")}this.description=\"Electronic Code Block\";this.name=\"ecb\";this._aes=new AES(key)};ModeOfOperationECB.prototype.encrypt=function(plaintext){plaintext=coerceArray(plaintext);if(plaintext.length%16!==0){throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\")}var ciphertext=createArray(plaintext.length);var block=createArray(16);for(var i=0;i<plaintext.length;i+=16){copyArray(plaintext,block,0,i,i+16);block=this._aes.encrypt(block);copyArray(block,ciphertext,i)}return ciphertext};ModeOfOperationECB.prototype.decrypt=function(ciphertext){ciphertext=coerceArray(ciphertext);if(ciphertext.length%16!==0){throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\")}var plaintext=createArray(ciphertext.length);var block=createArray(16);for(var i=0;i<ciphertext.length;i+=16){copyArray(ciphertext,block,0,i,i+16);block=this._aes.decrypt(block);copyArray(block,plaintext,i)}return plaintext};var ModeOfOperationCBC=function(key,iv){if(!(this instanceof ModeOfOperationCBC)){throw Error(\"AES must be instanitated with `new`\")}this.description=\"Cipher Block Chaining\";this.name=\"cbc\";if(!iv){iv=createArray(16)}else if(iv.length!=16){throw new Error(\"invalid initialation vector size (must be 16 bytes)\")}this._lastCipherblock=coerceArray(iv,true);this._aes=new AES(key)};ModeOfOperationCBC.prototype.encrypt=function(plaintext){plaintext=coerceArray(plaintext);if(plaintext.length%16!==0){throw new Error(\"invalid plaintext size (must be multiple of 16 bytes)\")}var ciphertext=createArray(plaintext.length);var block=createArray(16);for(var i=0;i<plaintext.length;i+=16){copyArray(plaintext,block,0,i,i+16);for(var j=0;j<16;j++){block[j]^=this._lastCipherblock[j]}this._lastCipherblock=this._aes.encrypt(block);copyArray(this._lastCipherblock,ciphertext,i)}return ciphertext};ModeOfOperationCBC.prototype.decrypt=function(ciphertext){ciphertext=coerceArray(ciphertext);if(ciphertext.length%16!==0){throw new Error(\"invalid ciphertext size (must be multiple of 16 bytes)\")}var plaintext=createArray(ciphertext.length);var block=createArray(16);for(var i=0;i<ciphertext.length;i+=16){copyArray(ciphertext,block,0,i,i+16);block=this._aes.decrypt(block);for(var j=0;j<16;j++){plaintext[i+j]=block[j]^this._lastCipherblock[j]}copyArray(ciphertext,this._lastCipherblock,0,i,i+16)}return plaintext};var ModeOfOperationCFB=function(key,iv,segmentSize){if(!(this instanceof ModeOfOperationCFB)){throw Error(\"AES must be instanitated with `new`\")}this.description=\"Cipher Feedback\";this.name=\"cfb\";if(!iv){iv=createArray(16)}else if(iv.length!=16){throw new Error(\"invalid initialation vector size (must be 16 size)\")}if(!segmentSize){segmentSize=1}this.segmentSize=segmentSize;this._shiftRegister=coerceArray(iv,true);this._aes=new AES(key)};ModeOfOperationCFB.prototype.encrypt=function(plaintext){if(plaintext.length%this.segmentSize!=0){throw new Error(\"invalid plaintext size (must be segmentSize bytes)\")}var encrypted=coerceArray(plaintext,true);var xorSegment;for(var i=0;i<encrypted.length;i+=this.segmentSize){xorSegment=this._aes.encrypt(this._shiftRegister);for(var j=0;j<this.segmentSize;j++){encrypted[i+j]^=xorSegment[j]}copyArray(this._shiftRegister,this._shiftRegister,0,this.segmentSize);copyArray(encrypted,this._shiftRegister,16-this.segmentSize,i,i+this.segmentSize)}return encrypted};ModeOfOperationCFB.prototype.decrypt=function(ciphertext){if(ciphertext.length%this.segmentSize!=0){throw new Error(\"invalid ciphertext size (must be segmentSize bytes)\")}var plaintext=coerceArray(ciphertext,true);var xorSegment;for(var i=0;i<plaintext.length;i+=this.segmentSize){xorSegment=this._aes.encrypt(this._shiftRegister);for(var j=0;j<this.segmentSize;j++){plaintext[i+j]^=xorSegment[j]}copyArray(this._shiftRegister,this._shiftRegister,0,this.segmentSize);copyArray(ciphertext,this._shiftRegister,16-this.segmentSize,i,i+this.segmentSize)}return plaintext};var ModeOfOperationOFB=function(key,iv){if(!(this instanceof ModeOfOperationOFB)){throw Error(\"AES must be instanitated with `new`\")}this.description=\"Output Feedback\";this.name=\"ofb\";if(!iv){iv=createArray(16)}else if(iv.length!=16){throw new Error(\"invalid initialation vector size (must be 16 bytes)\")}this._lastPrecipher=coerceArray(iv,true);this._lastPrecipherIndex=16;this._aes=new AES(key)};ModeOfOperationOFB.prototype.encrypt=function(plaintext){var encrypted=coerceArray(plaintext,true);for(var i=0;i<encrypted.length;i++){if(this._lastPrecipherIndex===16){this._lastPrecipher=this._aes.encrypt(this._lastPrecipher);this._lastPrecipherIndex=0}encrypted[i]^=this._lastPrecipher[this._lastPrecipherIndex++]}return encrypted};ModeOfOperationOFB.prototype.decrypt=ModeOfOperationOFB.prototype.encrypt;var Counter=function(initialValue){if(!(this instanceof Counter)){throw Error(\"Counter must be instanitated with `new`\")}if(initialValue!==0&&!initialValue){initialValue=1}if(typeof initialValue===\"number\"){this._counter=createArray(16);this.setValue(initialValue)}else{this.setBytes(initialValue)}};Counter.prototype.setValue=function(value){if(typeof value!==\"number\"||parseInt(value)!=value){throw new Error(\"invalid counter value (must be an integer)\")}for(var index=15;index>=0;--index){this._counter[index]=value%256;value=value>>8}};Counter.prototype.setBytes=function(bytes){bytes=coerceArray(bytes,true);if(bytes.length!=16){throw new Error(\"invalid counter bytes size (must be 16 bytes)\")}this._counter=bytes};Counter.prototype.increment=function(){for(var i=15;i>=0;i--){if(this._counter[i]===255){this._counter[i]=0}else{this._counter[i]++;break}}};var ModeOfOperationCTR=function(key,counter){if(!(this instanceof ModeOfOperationCTR)){throw Error(\"AES must be instanitated with `new`\")}this.description=\"Counter\";this.name=\"ctr\";if(!(counter instanceof Counter)){counter=new Counter(counter)}this._counter=counter;this._remainingCounter=null;this._remainingCounterIndex=16;this._aes=new AES(key)};ModeOfOperationCTR.prototype.encrypt=function(plaintext){var encrypted=coerceArray(plaintext,true);for(var i=0;i<encrypted.length;i++){if(this._remainingCounterIndex===16){this._remainingCounter=this._aes.encrypt(this._counter._counter);this._remainingCounterIndex=0;this._counter.increment()}encrypted[i]^=this._remainingCounter[this._remainingCounterIndex++]}return encrypted};ModeOfOperationCTR.prototype.decrypt=ModeOfOperationCTR.prototype.encrypt;function pkcs7pad(data){data=coerceArray(data,true);var padder=16-data.length%16;var result=createArray(data.length+padder);copyArray(data,result);for(var i=data.length;i<result.length;i++){result[i]=padder}return result}function pkcs7strip(data){data=coerceArray(data,true);if(data.length<16){throw new Error(\"PKCS#7 invalid length\")}var padder=data[data.length-1];if(padder>16){throw new Error(\"PKCS#7 padding byte out of range\")}var length=data.length-padder;for(var i=0;i<padder;i++){if(data[length+i]!==padder){throw new Error(\"PKCS#7 invalid padding byte\")}}var result=createArray(length);copyArray(data,result,0,0,length);return result}var aesjs={AES:AES,Counter:Counter,ModeOfOperation:{ecb:ModeOfOperationECB,cbc:ModeOfOperationCBC,cfb:ModeOfOperationCFB,ofb:ModeOfOperationOFB,ctr:ModeOfOperationCTR},utils:{hex:convertHex,utf8:convertUtf8},padding:{pkcs7:{pad:pkcs7pad,strip:pkcs7strip}},_arrayTest:{coerceArray:coerceArray,createArray:createArray,copyArray:copyArray}};if(\"object\"!==\"undefined\"){module.exports=aesjs}else if(typeof undefined===\"function\"&&undefined.amd){undefined(aesjs)}else{if(root.aesjs){aesjs._aesjs=root.aesjs}root.aesjs=aesjs}})(commonjsGlobal)});const version$i=\"json-wallets/5.1.0\";\"use strict\";function looseArrayify(hexString){if(typeof hexString===\"string\"&&hexString.substring(0,2)!==\"0x\"){hexString=\"0x\"+hexString}return arrayify(hexString)}function zpad(value,length){value=String(value);while(value.length<length){value=\"0\"+value}return value}function getPassword(password){if(typeof password===\"string\"){return toUtf8Bytes(password,UnicodeNormalizationForm.NFKC)}return arrayify(password)}function searchPath(object,path){let currentChild=object;const comps=path.toLowerCase().split(\"/\");for(let i=0;i<comps.length;i++){let matchingChild=null;for(const key in currentChild){if(key.toLowerCase()===comps[i]){matchingChild=currentChild[key];break}}if(matchingChild===null){return null}currentChild=matchingChild}return currentChild}function uuidV4(randomBytes){const bytes=arrayify(randomBytes);bytes[6]=bytes[6]&15|64;bytes[8]=bytes[8]&63|128;const value=hexlify(bytes);return[value.substring(2,10),value.substring(10,14),value.substring(14,18),value.substring(18,22),value.substring(22,34)].join(\"-\")}\"use strict\";const logger$n=new Logger(version$i);class CrowdsaleAccount extends Description{isCrowdsaleAccount(value){return!!(value&&value._isCrowdsaleAccount)}}function decrypt(json,password){const data=JSON.parse(json);password=getPassword(password);const ethaddr=getAddress(searchPath(data,\"ethaddr\"));const encseed=looseArrayify(searchPath(data,\"encseed\"));if(!encseed||encseed.length%16!==0){logger$n.throwArgumentError(\"invalid encseed\",\"json\",json)}const key=arrayify(pbkdf2(password,password,2e3,32,\"sha256\")).slice(0,16);const iv=encseed.slice(0,16);const encryptedSeed=encseed.slice(16);const aesCbc=new aesJs.ModeOfOperation.cbc(key,iv);const seed=aesJs.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));let seedHex=\"\";for(let i=0;i<seed.length;i++){seedHex+=String.fromCharCode(seed[i])}const seedHexBytes=toUtf8Bytes(seedHex);const privateKey=keccak256(seedHexBytes);return new CrowdsaleAccount({_isCrowdsaleAccount:true,address:ethaddr,privateKey:privateKey})}\"use strict\";function isCrowdsaleWallet(json){let data=null;try{data=JSON.parse(json)}catch(error){return false}return data.encseed&&data.ethaddr}function isKeystoreWallet(json){let data=null;try{data=JSON.parse(json)}catch(error){return false}if(!data.version||parseInt(data.version)!==data.version||parseInt(data.version)!==3){return false}return true}function getJsonWalletAddress(json){if(isCrowdsaleWallet(json)){try{return getAddress(JSON.parse(json).ethaddr)}catch(error){return null}}if(isKeystoreWallet(json)){try{return getAddress(JSON.parse(json).address)}catch(error){return null}}return null}var scrypt=createCommonjsModule(function(module,exports){\"use strict\";(function(root){const MAX_VALUE=2147483647;function SHA256(m){const K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let h0=1779033703,h1=3144134277,h2=1013904242,h3=2773480762;let h4=1359893119,h5=2600822924,h6=528734635,h7=1541459225;const w=new Uint32Array(64);function blocks(p){let off=0,len=p.length;while(len>=64){let a=h0,b=h1,c=h2,d=h3,e=h4,f=h5,g=h6,h=h7,u,i,j,t1,t2;for(i=0;i<16;i++){j=off+i*4;w[i]=(p[j]&255)<<24|(p[j+1]&255)<<16|(p[j+2]&255)<<8|p[j+3]&255}for(i=16;i<64;i++){u=w[i-2];t1=(u>>>17|u<<32-17)^(u>>>19|u<<32-19)^u>>>10;u=w[i-15];t2=(u>>>7|u<<32-7)^(u>>>18|u<<32-18)^u>>>3;w[i]=(t1+w[i-7]|0)+(t2+w[i-16]|0)|0}for(i=0;i<64;i++){t1=(((e>>>6|e<<32-6)^(e>>>11|e<<32-11)^(e>>>25|e<<32-25))+(e&f^~e&g)|0)+(h+(K[i]+w[i]|0)|0)|0;t2=((a>>>2|a<<32-2)^(a>>>13|a<<32-13)^(a>>>22|a<<32-22))+(a&b^a&c^b&c)|0;h=g;g=f;f=e;e=d+t1|0;d=c;c=b;b=a;a=t1+t2|0}h0=h0+a|0;h1=h1+b|0;h2=h2+c|0;h3=h3+d|0;h4=h4+e|0;h5=h5+f|0;h6=h6+g|0;h7=h7+h|0;off+=64;len-=64}}blocks(m);let i,bytesLeft=m.length%64,bitLenHi=m.length/536870912|0,bitLenLo=m.length<<3,numZeros=bytesLeft<56?56:120,p=m.slice(m.length-bytesLeft,m.length);p.push(128);for(i=bytesLeft+1;i<numZeros;i++){p.push(0)}p.push(bitLenHi>>>24&255);p.push(bitLenHi>>>16&255);p.push(bitLenHi>>>8&255);p.push(bitLenHi>>>0&255);p.push(bitLenLo>>>24&255);p.push(bitLenLo>>>16&255);p.push(bitLenLo>>>8&255);p.push(bitLenLo>>>0&255);blocks(p);return[h0>>>24&255,h0>>>16&255,h0>>>8&255,h0>>>0&255,h1>>>24&255,h1>>>16&255,h1>>>8&255,h1>>>0&255,h2>>>24&255,h2>>>16&255,h2>>>8&255,h2>>>0&255,h3>>>24&255,h3>>>16&255,h3>>>8&255,h3>>>0&255,h4>>>24&255,h4>>>16&255,h4>>>8&255,h4>>>0&255,h5>>>24&255,h5>>>16&255,h5>>>8&255,h5>>>0&255,h6>>>24&255,h6>>>16&255,h6>>>8&255,h6>>>0&255,h7>>>24&255,h7>>>16&255,h7>>>8&255,h7>>>0&255]}function PBKDF2_HMAC_SHA256_OneIter(password,salt,dkLen){password=password.length<=64?password:SHA256(password);const innerLen=64+salt.length+4;const inner=new Array(innerLen);const outerKey=new Array(64);let i;let dk=[];for(i=0;i<64;i++){inner[i]=54}for(i=0;i<password.length;i++){inner[i]^=password[i]}for(i=0;i<salt.length;i++){inner[64+i]=salt[i]}for(i=innerLen-4;i<innerLen;i++){inner[i]=0}for(i=0;i<64;i++)outerKey[i]=92;for(i=0;i<password.length;i++)outerKey[i]^=password[i];function incrementCounter(){for(let i=innerLen-1;i>=innerLen-4;i--){inner[i]++;if(inner[i]<=255)return;inner[i]=0}}while(dkLen>=32){incrementCounter();dk=dk.concat(SHA256(outerKey.concat(SHA256(inner))));dkLen-=32}if(dkLen>0){incrementCounter();dk=dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0,dkLen))}return dk}function blockmix_salsa8(BY,Yi,r,x,_X){let i;arraycopy(BY,(2*r-1)*16,_X,0,16);for(i=0;i<2*r;i++){blockxor(BY,i*16,_X,16);salsa20_8(_X,x);arraycopy(_X,0,BY,Yi+i*16,16)}for(i=0;i<r;i++){arraycopy(BY,Yi+i*2*16,BY,i*16,16)}for(i=0;i<r;i++){arraycopy(BY,Yi+(i*2+1)*16,BY,(i+r)*16,16)}}function R(a,b){return a<<b|a>>>32-b}function salsa20_8(B,x){arraycopy(B,0,x,0,16);for(let i=8;i>0;i-=2){x[4]^=R(x[0]+x[12],7);x[8]^=R(x[4]+x[0],9);x[12]^=R(x[8]+x[4],13);x[0]^=R(x[12]+x[8],18);x[9]^=R(x[5]+x[1],7);x[13]^=R(x[9]+x[5],9);x[1]^=R(x[13]+x[9],13);x[5]^=R(x[1]+x[13],18);x[14]^=R(x[10]+x[6],7);x[2]^=R(x[14]+x[10],9);x[6]^=R(x[2]+x[14],13);x[10]^=R(x[6]+x[2],18);x[3]^=R(x[15]+x[11],7);x[7]^=R(x[3]+x[15],9);x[11]^=R(x[7]+x[3],13);x[15]^=R(x[11]+x[7],18);x[1]^=R(x[0]+x[3],7);x[2]^=R(x[1]+x[0],9);x[3]^=R(x[2]+x[1],13);x[0]^=R(x[3]+x[2],18);x[6]^=R(x[5]+x[4],7);x[7]^=R(x[6]+x[5],9);x[4]^=R(x[7]+x[6],13);x[5]^=R(x[4]+x[7],18);x[11]^=R(x[10]+x[9],7);x[8]^=R(x[11]+x[10],9);x[9]^=R(x[8]+x[11],13);x[10]^=R(x[9]+x[8],18);x[12]^=R(x[15]+x[14],7);x[13]^=R(x[12]+x[15],9);x[14]^=R(x[13]+x[12],13);x[15]^=R(x[14]+x[13],18)}for(let i=0;i<16;++i){B[i]+=x[i]}}function blockxor(S,Si,D,len){for(let i=0;i<len;i++){D[i]^=S[Si+i]}}function arraycopy(src,srcPos,dest,destPos,length){while(length--){dest[destPos++]=src[srcPos++]}}function checkBufferish(o){if(!o||typeof o.length!==\"number\"){return false}for(let i=0;i<o.length;i++){const v=o[i];if(typeof v!==\"number\"||v%1||v<0||v>=256){return false}}return true}function ensureInteger(value,name){if(typeof value!==\"number\"||value%1){throw new Error(\"invalid \"+name)}return value}function _scrypt(password,salt,N,r,p,dkLen,callback){N=ensureInteger(N,\"N\");r=ensureInteger(r,\"r\");p=ensureInteger(p,\"p\");dkLen=ensureInteger(dkLen,\"dkLen\");if(N===0||(N&N-1)!==0){throw new Error(\"N must be power of 2\")}if(N>MAX_VALUE/128/r){throw new Error(\"N too large\")}if(r>MAX_VALUE/128/p){throw new Error(\"r too large\")}if(!checkBufferish(password)){throw new Error(\"password must be an array or buffer\")}password=Array.prototype.slice.call(password);if(!checkBufferish(salt)){throw new Error(\"salt must be an array or buffer\")}salt=Array.prototype.slice.call(salt);let b=PBKDF2_HMAC_SHA256_OneIter(password,salt,p*128*r);const B=new Uint32Array(p*32*r);for(let i=0;i<B.length;i++){const j=i*4;B[i]=(b[j+3]&255)<<24|(b[j+2]&255)<<16|(b[j+1]&255)<<8|(b[j+0]&255)<<0}const XY=new Uint32Array(64*r);const V=new Uint32Array(32*r*N);const Yi=32*r;const x=new Uint32Array(16);const _X=new Uint32Array(16);const totalOps=p*N*2;let currentOp=0;let lastPercent10=null;let stop=false;let state=0;let i0=0,i1;let Bi;const limit=callback?parseInt(1e3/r):4294967295;const nextTick=typeof setImmediate!==\"undefined\"?setImmediate:setTimeout;const incrementalSMix=function(){if(stop){return callback(new Error(\"cancelled\"),currentOp/totalOps)}let steps;switch(state){case 0:Bi=i0*32*r;arraycopy(B,Bi,XY,0,Yi);state=1;i1=0;case 1:steps=N-i1;if(steps>limit){steps=limit}for(let i=0;i<steps;i++){arraycopy(XY,0,V,(i1+i)*Yi,Yi);blockmix_salsa8(XY,Yi,r,x,_X)}i1+=steps;currentOp+=steps;if(callback){const percent10=parseInt(1e3*currentOp/totalOps);if(percent10!==lastPercent10){stop=callback(null,currentOp/totalOps);if(stop){break}lastPercent10=percent10}}if(i1<N){break}i1=0;state=2;case 2:steps=N-i1;if(steps>limit){steps=limit}for(let i=0;i<steps;i++){const offset=(2*r-1)*16;const j=XY[offset]&N-1;blockxor(V,j*Yi,XY,Yi);blockmix_salsa8(XY,Yi,r,x,_X)}i1+=steps;currentOp+=steps;if(callback){const percent10=parseInt(1e3*currentOp/totalOps);if(percent10!==lastPercent10){stop=callback(null,currentOp/totalOps);if(stop){break}lastPercent10=percent10}}if(i1<N){break}arraycopy(XY,0,B,Bi,Yi);i0++;if(i0<p){state=0;break}b=[];for(let i=0;i<B.length;i++){b.push(B[i]>>0&255);b.push(B[i]>>8&255);b.push(B[i]>>16&255);b.push(B[i]>>24&255)}const derivedKey=PBKDF2_HMAC_SHA256_OneIter(password,b,dkLen);if(callback){callback(null,1,derivedKey)}return derivedKey}if(callback){nextTick(incrementalSMix)}};if(!callback){while(true){const derivedKey=incrementalSMix();if(derivedKey!=undefined){return derivedKey}}}incrementalSMix()}const lib={scrypt:function(password,salt,N,r,p,dkLen,progressCallback){return new Promise(function(resolve,reject){let lastProgress=0;if(progressCallback){progressCallback(0)}_scrypt(password,salt,N,r,p,dkLen,function(error,progress,key){if(error){reject(error)}else if(key){if(progressCallback&&lastProgress!==1){progressCallback(1)}resolve(new Uint8Array(key))}else if(progressCallback&&progress!==lastProgress){lastProgress=progress;return progressCallback(progress)}})})},syncScrypt:function(password,salt,N,r,p,dkLen){return new Uint8Array(_scrypt(password,salt,N,r,p,dkLen))}};if(\"object\"!==\"undefined\"){module.exports=lib}else if(typeof undefined===\"function\"&&undefined.amd){undefined(lib)}else if(root){if(root.scrypt){root._scrypt=root.scrypt}root.scrypt=lib}})(commonjsGlobal)});\"use strict\";var __awaiter$4=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$o=new Logger(version$i);function hasMnemonic(value){return value!=null&&value.mnemonic&&value.mnemonic.phrase}class KeystoreAccount extends Description{isKeystoreAccount(value){return!!(value&&value._isKeystoreAccount)}}function _decrypt(data,key,ciphertext){const cipher=searchPath(data,\"crypto/cipher\");if(cipher===\"aes-128-ctr\"){const iv=looseArrayify(searchPath(data,\"crypto/cipherparams/iv\"));const counter=new aesJs.Counter(iv);const aesCtr=new aesJs.ModeOfOperation.ctr(key,counter);return arrayify(aesCtr.decrypt(ciphertext))}return null}function _getAccount(data,key){const ciphertext=looseArrayify(searchPath(data,\"crypto/ciphertext\"));const computedMAC=hexlify(keccak256(concat([key.slice(16,32),ciphertext]))).substring(2);if(computedMAC!==searchPath(data,\"crypto/mac\").toLowerCase()){throw new Error(\"invalid password\")}const privateKey=_decrypt(data,key.slice(0,16),ciphertext);if(!privateKey){logger$o.throwError(\"unsupported cipher\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"decrypt\"})}const mnemonicKey=key.slice(32,64);const address=computeAddress(privateKey);if(data.address){let check=data.address.toLowerCase();if(check.substring(0,2)!==\"0x\"){check=\"0x\"+check}if(getAddress(check)!==address){throw new Error(\"address mismatch\")}}const account={_isKeystoreAccount:true,address:address,privateKey:hexlify(privateKey)};if(searchPath(data,\"x-ethers/version\")===\"0.1\"){const mnemonicCiphertext=looseArrayify(searchPath(data,\"x-ethers/mnemonicCiphertext\"));const mnemonicIv=looseArrayify(searchPath(data,\"x-ethers/mnemonicCounter\"));const mnemonicCounter=new aesJs.Counter(mnemonicIv);const mnemonicAesCtr=new aesJs.ModeOfOperation.ctr(mnemonicKey,mnemonicCounter);const path=searchPath(data,\"x-ethers/path\")||defaultPath;const locale=searchPath(data,\"x-ethers/locale\")||\"en\";const entropy=arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));try{const mnemonic=entropyToMnemonic(entropy,locale);const node=HDNode.fromMnemonic(mnemonic,null,locale).derivePath(path);if(node.privateKey!=account.privateKey){throw new Error(\"mnemonic mismatch\")}account.mnemonic=node.mnemonic}catch(error){if(error.code!==Logger.errors.INVALID_ARGUMENT||error.argument!==\"wordlist\"){throw error}}}return new KeystoreAccount(account)}function pbkdf2Sync(passwordBytes,salt,count,dkLen,prfFunc){return arrayify(pbkdf2(passwordBytes,salt,count,dkLen,prfFunc))}function pbkdf2$1(passwordBytes,salt,count,dkLen,prfFunc){return Promise.resolve(pbkdf2Sync(passwordBytes,salt,count,dkLen,prfFunc))}function _computeKdfKey(data,password,pbkdf2Func,scryptFunc,progressCallback){const passwordBytes=getPassword(password);const kdf=searchPath(data,\"crypto/kdf\");if(kdf&&typeof kdf===\"string\"){const throwError=function(name,value){return logger$o.throwArgumentError(\"invalid key-derivation function parameters\",name,value)};if(kdf.toLowerCase()===\"scrypt\"){const salt=looseArrayify(searchPath(data,\"crypto/kdfparams/salt\"));const N=parseInt(searchPath(data,\"crypto/kdfparams/n\"));const r=parseInt(searchPath(data,\"crypto/kdfparams/r\"));const p=parseInt(searchPath(data,\"crypto/kdfparams/p\"));if(!N||!r||!p){throwError(\"kdf\",kdf)}if((N&N-1)!==0){throwError(\"N\",N)}const dkLen=parseInt(searchPath(data,\"crypto/kdfparams/dklen\"));if(dkLen!==32){throwError(\"dklen\",dkLen)}return scryptFunc(passwordBytes,salt,N,r,p,64,progressCallback)}else if(kdf.toLowerCase()===\"pbkdf2\"){const salt=looseArrayify(searchPath(data,\"crypto/kdfparams/salt\"));let prfFunc=null;const prf=searchPath(data,\"crypto/kdfparams/prf\");if(prf===\"hmac-sha256\"){prfFunc=\"sha256\"}else if(prf===\"hmac-sha512\"){prfFunc=\"sha512\"}else{throwError(\"prf\",prf)}const count=parseInt(searchPath(data,\"crypto/kdfparams/c\"));const dkLen=parseInt(searchPath(data,\"crypto/kdfparams/dklen\"));if(dkLen!==32){throwError(\"dklen\",dkLen)}return pbkdf2Func(passwordBytes,salt,count,dkLen,prfFunc)}}return logger$o.throwArgumentError(\"unsupported key-derivation function\",\"kdf\",kdf)}function decryptSync(json,password){const data=JSON.parse(json);const key=_computeKdfKey(data,password,pbkdf2Sync,scrypt.syncScrypt);return _getAccount(data,key)}function decrypt$1(json,password,progressCallback){return __awaiter$4(this,void 0,void 0,function*(){const data=JSON.parse(json);const key=yield _computeKdfKey(data,password,pbkdf2$1,scrypt.scrypt,progressCallback);return _getAccount(data,key)})}function encrypt(account,password,options,progressCallback){try{if(getAddress(account.address)!==computeAddress(account.privateKey)){throw new Error(\"address/privateKey mismatch\")}if(hasMnemonic(account)){const mnemonic=account.mnemonic;const node=HDNode.fromMnemonic(mnemonic.phrase,null,mnemonic.locale).derivePath(mnemonic.path||defaultPath);if(node.privateKey!=account.privateKey){throw new Error(\"mnemonic mismatch\")}}}catch(e){return Promise.reject(e)}if(typeof options===\"function\"&&!progressCallback){progressCallback=options;options={}}if(!options){options={}}const privateKey=arrayify(account.privateKey);const passwordBytes=getPassword(password);let entropy=null;let path=null;let locale=null;if(hasMnemonic(account)){const srcMnemonic=account.mnemonic;entropy=arrayify(mnemonicToEntropy(srcMnemonic.phrase,srcMnemonic.locale||\"en\"));path=srcMnemonic.path||defaultPath;locale=srcMnemonic.locale||\"en\"}let client=options.client;if(!client){client=\"ethers.js\"}let salt=null;if(options.salt){salt=arrayify(options.salt)}else{salt=randomBytes(32)}let iv=null;if(options.iv){iv=arrayify(options.iv);if(iv.length!==16){throw new Error(\"invalid iv\")}}else{iv=randomBytes(16)}let uuidRandom=null;if(options.uuid){uuidRandom=arrayify(options.uuid);if(uuidRandom.length!==16){throw new Error(\"invalid uuid\")}}else{uuidRandom=randomBytes(16)}let N=1<<17,r=8,p=1;if(options.scrypt){if(options.scrypt.N){N=options.scrypt.N}if(options.scrypt.r){r=options.scrypt.r}if(options.scrypt.p){p=options.scrypt.p}}return scrypt.scrypt(passwordBytes,salt,N,r,p,64,progressCallback).then(key=>{key=arrayify(key);const derivedKey=key.slice(0,16);const macPrefix=key.slice(16,32);const mnemonicKey=key.slice(32,64);const counter=new aesJs.Counter(iv);const aesCtr=new aesJs.ModeOfOperation.ctr(derivedKey,counter);const ciphertext=arrayify(aesCtr.encrypt(privateKey));const mac=keccak256(concat([macPrefix,ciphertext]));const data={address:account.address.substring(2).toLowerCase(),id:uuidV4(uuidRandom),version:3,Crypto:{cipher:\"aes-128-ctr\",cipherparams:{iv:hexlify(iv).substring(2)},ciphertext:hexlify(ciphertext).substring(2),kdf:\"scrypt\",kdfparams:{salt:hexlify(salt).substring(2),n:N,dklen:32,p:p,r:r},mac:mac.substring(2)}};if(entropy){const mnemonicIv=randomBytes(16);const mnemonicCounter=new aesJs.Counter(mnemonicIv);const mnemonicAesCtr=new aesJs.ModeOfOperation.ctr(mnemonicKey,mnemonicCounter);const mnemonicCiphertext=arrayify(mnemonicAesCtr.encrypt(entropy));const now=new Date;const timestamp=now.getUTCFullYear()+\"-\"+zpad(now.getUTCMonth()+1,2)+\"-\"+zpad(now.getUTCDate(),2)+\"T\"+zpad(now.getUTCHours(),2)+\"-\"+zpad(now.getUTCMinutes(),2)+\"-\"+zpad(now.getUTCSeconds(),2)+\".0Z\";data[\"x-ethers\"]={client:client,gethFilename:\"UTC--\"+timestamp+\"--\"+data.address,mnemonicCounter:hexlify(mnemonicIv).substring(2),mnemonicCiphertext:hexlify(mnemonicCiphertext).substring(2),path:path,locale:locale,version:\"0.1\"}}return JSON.stringify(data)})}\"use strict\";function decryptJsonWallet(json,password,progressCallback){if(isCrowdsaleWallet(json)){if(progressCallback){progressCallback(0)}const account=decrypt(json,password);if(progressCallback){progressCallback(1)}return Promise.resolve(account)}if(isKeystoreWallet(json)){return decrypt$1(json,password,progressCallback)}return Promise.reject(new Error(\"invalid JSON wallet\"))}function decryptJsonWalletSync(json,password){if(isCrowdsaleWallet(json)){return decrypt(json,password)}if(isKeystoreWallet(json)){return decryptSync(json,password)}throw new Error(\"invalid JSON wallet\")}const version$j=\"wallet/5.1.0\";\"use strict\";var __awaiter$5=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$p=new Logger(version$j);function isAccount(value){return value!=null&&isHexString(value.privateKey,32)&&value.address!=null}function hasMnemonic$1(value){const mnemonic=value.mnemonic;return mnemonic&&mnemonic.phrase}class Wallet extends Signer{constructor(privateKey,provider){logger$p.checkNew(new.target,Wallet);super();if(isAccount(privateKey)){const signingKey=new SigningKey(privateKey.privateKey);defineReadOnly(this,\"_signingKey\",()=>signingKey);defineReadOnly(this,\"address\",computeAddress(this.publicKey));if(this.address!==getAddress(privateKey.address)){logger$p.throwArgumentError(\"privateKey/address mismatch\",\"privateKey\",\"[REDACTED]\")}if(hasMnemonic$1(privateKey)){const srcMnemonic=privateKey.mnemonic;defineReadOnly(this,\"_mnemonic\",()=>({phrase:srcMnemonic.phrase,path:srcMnemonic.path||defaultPath,locale:srcMnemonic.locale||\"en\"}));const mnemonic=this.mnemonic;const node=HDNode.fromMnemonic(mnemonic.phrase,null,mnemonic.locale).derivePath(mnemonic.path);if(computeAddress(node.privateKey)!==this.address){logger$p.throwArgumentError(\"mnemonic/address mismatch\",\"privateKey\",\"[REDACTED]\")}}else{defineReadOnly(this,\"_mnemonic\",()=>null)}}else{if(SigningKey.isSigningKey(privateKey)){if(privateKey.curve!==\"secp256k1\"){logger$p.throwArgumentError(\"unsupported curve; must be secp256k1\",\"privateKey\",\"[REDACTED]\")}defineReadOnly(this,\"_signingKey\",()=>privateKey)}else{if(typeof privateKey===\"string\"){if(privateKey.match(/^[0-9a-f]*$/i)&&privateKey.length===64){privateKey=\"0x\"+privateKey}}const signingKey=new SigningKey(privateKey);defineReadOnly(this,\"_signingKey\",()=>signingKey)}defineReadOnly(this,\"_mnemonic\",()=>null);defineReadOnly(this,\"address\",computeAddress(this.publicKey))}if(provider&&!Provider.isProvider(provider)){logger$p.throwArgumentError(\"invalid provider\",\"provider\",provider)}defineReadOnly(this,\"provider\",provider||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(provider){return new Wallet(this,provider)}signTransaction(transaction){return resolveProperties(transaction).then(tx=>{if(tx.from!=null){if(getAddress(tx.from)!==this.address){logger$p.throwArgumentError(\"transaction from address mismatch\",\"transaction.from\",transaction.from)}delete tx.from}const signature=this._signingKey().signDigest(keccak256(serialize(tx)));return serialize(tx,signature)})}signMessage(message){return __awaiter$5(this,void 0,void 0,function*(){return joinSignature(this._signingKey().signDigest(hashMessage(message)))})}_signTypedData(domain,types,value){return __awaiter$5(this,void 0,void 0,function*(){const populated=yield TypedDataEncoder.resolveNames(domain,types,value,name=>{if(this.provider==null){logger$p.throwError(\"cannot resolve ENS names without a provider\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"resolveName\",value:name})}return this.provider.resolveName(name)});return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain,types,populated.value)))})}encrypt(password,options,progressCallback){if(typeof options===\"function\"&&!progressCallback){progressCallback=options;options={}}if(progressCallback&&typeof progressCallback!==\"function\"){throw new Error(\"invalid callback\")}if(!options){options={}}return encrypt(this,password,options,progressCallback)}static createRandom(options){let entropy=randomBytes(16);if(!options){options={}}if(options.extraEntropy){entropy=arrayify(hexDataSlice(keccak256(concat([entropy,options.extraEntropy])),0,16))}const mnemonic=entropyToMnemonic(entropy,options.locale);return Wallet.fromMnemonic(mnemonic,options.path,options.locale)}static fromEncryptedJson(json,password,progressCallback){return decryptJsonWallet(json,password,progressCallback).then(account=>{return new Wallet(account)})}static fromEncryptedJsonSync(json,password){return new Wallet(decryptJsonWalletSync(json,password))}static fromMnemonic(mnemonic,path,wordlist){if(!path){path=defaultPath}return new Wallet(HDNode.fromMnemonic(mnemonic,null,wordlist).derivePath(path))}}function verifyMessage(message,signature){return recoverAddress(hashMessage(message),signature)}function verifyTypedData(domain,types,value,signature){return recoverAddress(TypedDataEncoder.hash(domain,types,value),signature)}const version$k=\"networks/5.1.0\";\"use strict\";const logger$q=new Logger(version$k);function isRenetworkable(value){return value&&typeof value.renetwork===\"function\"}function ethDefaultProvider(network){const func=function(providers,options){if(options==null){options={}}const providerList=[];if(providers.InfuraProvider){try{providerList.push(new providers.InfuraProvider(network,options.infura))}catch(error){}}if(providers.EtherscanProvider){try{providerList.push(new providers.EtherscanProvider(network,options.etherscan))}catch(error){}}if(providers.AlchemyProvider){const skip=[\"goerli\",\"ropsten\",\"rinkeby\"];try{const provider=new providers.AlchemyProvider(network,options.alchemy);if(provider.network&&skip.indexOf(provider.network.name)===-1){providerList.push(provider)}}catch(error){}}if(providers.PocketProvider){const skip=[\"goerli\",\"ropsten\",\"rinkeby\"];try{const provider=new providers.PocketProvider(network);if(provider.network&&skip.indexOf(provider.network.name)===-1){providerList.push(provider)}}catch(error){}}if(providers.CloudflareProvider){try{providerList.push(new providers.CloudflareProvider(network))}catch(error){}}if(providerList.length===0){return null}if(providers.FallbackProvider){let quorum=1;if(options.quorum!=null){quorum=options.quorum}else if(network===\"homestead\"){quorum=2}return new providers.FallbackProvider(providerList,quorum)}return providerList[0]};func.renetwork=function(network){return ethDefaultProvider(network)};return func}function etcDefaultProvider(url,network){const func=function(providers,options){if(providers.JsonRpcProvider){return new providers.JsonRpcProvider(url,network)}return null};func.renetwork=function(network){return etcDefaultProvider(url,network)};return func}const homestead={chainId:1,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"homestead\",_defaultProvider:ethDefaultProvider(\"homestead\")};const ropsten={chainId:3,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"ropsten\",_defaultProvider:ethDefaultProvider(\"ropsten\")};const classicMordor={chainId:63,name:\"classicMordor\",_defaultProvider:etcDefaultProvider(\"https://www.ethercluster.com/mordor\",\"classicMordor\")};const networks={unspecified:{chainId:0,name:\"unspecified\"},homestead:homestead,mainnet:homestead,morden:{chainId:2,name:\"morden\"},ropsten:ropsten,testnet:ropsten,rinkeby:{chainId:4,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"rinkeby\",_defaultProvider:ethDefaultProvider(\"rinkeby\")},kovan:{chainId:42,name:\"kovan\",_defaultProvider:ethDefaultProvider(\"kovan\")},goerli:{chainId:5,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"goerli\",_defaultProvider:ethDefaultProvider(\"goerli\")},classic:{chainId:61,name:\"classic\",_defaultProvider:etcDefaultProvider(\"https://www.ethercluster.com/etc\",\"classic\")},classicMorden:{chainId:62,name:\"classicMorden\"},classicMordor:classicMordor,classicTestnet:classicMordor,classicKotti:{chainId:6,name:\"classicKotti\",_defaultProvider:etcDefaultProvider(\"https://www.ethercluster.com/kotti\",\"classicKotti\")}};function getNetwork(network){if(network==null){return null}if(typeof network===\"number\"){for(const name in networks){const standard=networks[name];if(standard.chainId===network){return{name:standard.name,chainId:standard.chainId,ensAddress:standard.ensAddress||null,_defaultProvider:standard._defaultProvider||null}}}return{chainId:network,name:\"unknown\"}}if(typeof network===\"string\"){const standard=networks[network];if(standard==null){return null}return{name:standard.name,chainId:standard.chainId,ensAddress:standard.ensAddress,_defaultProvider:standard._defaultProvider||null}}const standard=networks[network.name];if(!standard){if(typeof network.chainId!==\"number\"){logger$q.throwArgumentError(\"invalid network chainId\",\"network\",network)}return network}if(network.chainId!==0&&network.chainId!==standard.chainId){logger$q.throwArgumentError(\"network chainId mismatch\",\"network\",network)}let defaultProvider=network._defaultProvider||null;if(defaultProvider==null&&standard._defaultProvider){if(isRenetworkable(standard._defaultProvider)){defaultProvider=standard._defaultProvider.renetwork(network)}else{defaultProvider=standard._defaultProvider}}return{name:network.name,chainId:standard.chainId,ensAddress:network.ensAddress||standard.ensAddress||null,_defaultProvider:defaultProvider}}\"use strict\";function decode$1(textData){textData=atob(textData);const data=[];for(let i=0;i<textData.length;i++){data.push(textData.charCodeAt(i))}return arrayify(data)}function encode$1(data){data=arrayify(data);let textData=\"\";for(let i=0;i<data.length;i++){textData+=String.fromCharCode(data[i])}return btoa(textData)}\"use strict\";var index$2=Object.freeze({__proto__:null,decode:decode$1,encode:encode$1});const version$l=\"web/5.1.0\";\"use strict\";var __awaiter$6=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};function getUrl(href,options){return __awaiter$6(this,void 0,void 0,function*(){if(options==null){options={}}const request={method:options.method||\"GET\",headers:options.headers||{},body:options.body||undefined,mode:\"cors\",cache:\"no-cache\",credentials:\"same-origin\",redirect:\"follow\",referrer:\"client\"};const response=yield fetch(href,request);const body=yield response.arrayBuffer();const headers={};if(response.headers.forEach){response.headers.forEach((value,key)=>{headers[key.toLowerCase()]=value})}else{response.headers.keys().forEach(key=>{headers[key.toLowerCase()]=response.headers.get(key)})}return{headers:headers,statusCode:response.status,statusMessage:response.statusText,body:arrayify(new Uint8Array(body))}})}\"use strict\";var __awaiter$7=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$r=new Logger(version$l);function staller(duration){return new Promise(resolve=>{setTimeout(resolve,duration)})}function bodyify(value,type){if(value==null){return null}if(typeof value===\"string\"){return value}if(isBytesLike(value)){if(type&&(type.split(\"/\")[0]===\"text\"||type.split(\";\")[0].trim()===\"application/json\")){try{return toUtf8String(value)}catch(error){}}return hexlify(value)}return value}function _fetchData(connection,body,processFunc){const attemptLimit=typeof connection===\"object\"&&connection.throttleLimit!=null?connection.throttleLimit:12;logger$r.assertArgument(attemptLimit>0&&attemptLimit%1===0,\"invalid connection throttle limit\",\"connection.throttleLimit\",attemptLimit);const throttleCallback=typeof connection===\"object\"?connection.throttleCallback:null;const throttleSlotInterval=typeof connection===\"object\"&&typeof connection.throttleSlotInterval===\"number\"?connection.throttleSlotInterval:100;logger$r.assertArgument(throttleSlotInterval>0&&throttleSlotInterval%1===0,\"invalid connection throttle slot interval\",\"connection.throttleSlotInterval\",throttleSlotInterval);const headers={};let url=null;const options={method:\"GET\"};let allow304=false;let timeout=2*60*1e3;if(typeof connection===\"string\"){url=connection}else if(typeof connection===\"object\"){if(connection==null||connection.url==null){logger$r.throwArgumentError(\"missing URL\",\"connection.url\",connection)}url=connection.url;if(typeof connection.timeout===\"number\"&&connection.timeout>0){timeout=connection.timeout}if(connection.headers){for(const key in connection.headers){headers[key.toLowerCase()]={key:key,value:String(connection.headers[key])};if([\"if-none-match\",\"if-modified-since\"].indexOf(key.toLowerCase())>=0){allow304=true}}}options.allowGzip=!!connection.allowGzip;if(connection.user!=null&&connection.password!=null){if(url.substring(0,6)!==\"https:\"&&connection.allowInsecureAuthentication!==true){logger$r.throwError(\"basic authentication requires a secure https url\",Logger.errors.INVALID_ARGUMENT,{argument:\"url\",url:url,user:connection.user,password:\"[REDACTED]\"})}const authorization=connection.user+\":\"+connection.password;headers[\"authorization\"]={key:\"Authorization\",value:\"Basic \"+encode$1(toUtf8Bytes(authorization))}}}if(body){options.method=\"POST\";options.body=body;if(headers[\"content-type\"]==null){headers[\"content-type\"]={key:\"Content-Type\",value:\"application/octet-stream\"}}if(headers[\"content-length\"]==null){headers[\"content-length\"]={key:\"Content-Length\",value:String(body.length)}}}const flatHeaders={};Object.keys(headers).forEach(key=>{const header=headers[key];flatHeaders[header.key]=header.value});options.headers=flatHeaders;const runningTimeout=function(){let timer=null;const promise=new Promise(function(resolve,reject){if(timeout){timer=setTimeout(()=>{if(timer==null){return}timer=null;reject(logger$r.makeError(\"timeout\",Logger.errors.TIMEOUT,{requestBody:bodyify(options.body,flatHeaders[\"content-type\"]),requestMethod:options.method,timeout:timeout,url:url}))},timeout)}});const cancel=function(){if(timer==null){return}clearTimeout(timer);timer=null};return{promise:promise,cancel:cancel}}();const runningFetch=function(){return __awaiter$7(this,void 0,void 0,function*(){for(let attempt=0;attempt<attemptLimit;attempt++){let response=null;try{response=yield getUrl(url,options);if(response.statusCode===429&&attempt<attemptLimit){let tryAgain=true;if(throttleCallback){tryAgain=yield throttleCallback(attempt,url)}if(tryAgain){let stall=0;const retryAfter=response.headers[\"retry-after\"];if(typeof retryAfter===\"string\"&&retryAfter.match(/^[1-9][0-9]*$/)){stall=parseInt(retryAfter)*1e3}else{stall=throttleSlotInterval*parseInt(String(Math.random()*Math.pow(2,attempt)))}yield staller(stall);continue}}}catch(error){response=error.response;if(response==null){runningTimeout.cancel();logger$r.throwError(\"missing response\",Logger.errors.SERVER_ERROR,{requestBody:bodyify(options.body,flatHeaders[\"content-type\"]),requestMethod:options.method,serverError:error,url:url})}}let body=response.body;if(allow304&&response.statusCode===304){body=null}else if(response.statusCode<200||response.statusCode>=300){runningTimeout.cancel();logger$r.throwError(\"bad response\",Logger.errors.SERVER_ERROR,{status:response.statusCode,headers:response.headers,body:bodyify(body,response.headers?response.headers[\"content-type\"]:null),requestBody:bodyify(options.body,flatHeaders[\"content-type\"]),requestMethod:options.method,url:url})}if(processFunc){try{const result=yield processFunc(body,response);runningTimeout.cancel();return result}catch(error){if(error.throttleRetry&&attempt<attemptLimit){let tryAgain=true;if(throttleCallback){tryAgain=yield throttleCallback(attempt,url)}if(tryAgain){const timeout=throttleSlotInterval*parseInt(String(Math.random()*Math.pow(2,attempt)));yield staller(timeout);continue}}runningTimeout.cancel();logger$r.throwError(\"processing response error\",Logger.errors.SERVER_ERROR,{body:bodyify(body,response.headers?response.headers[\"content-type\"]:null),error:error,requestBody:bodyify(options.body,flatHeaders[\"content-type\"]),requestMethod:options.method,url:url})}}runningTimeout.cancel();return body}return logger$r.throwError(\"failed response\",Logger.errors.SERVER_ERROR,{requestBody:bodyify(options.body,flatHeaders[\"content-type\"]),requestMethod:options.method,url:url})})}();return Promise.race([runningTimeout.promise,runningFetch])}function fetchJson(connection,json,processFunc){let processJsonFunc=(value,response)=>{let result=null;if(value!=null){try{result=JSON.parse(toUtf8String(value))}catch(error){logger$r.throwError(\"invalid JSON\",Logger.errors.SERVER_ERROR,{body:value,error:error})}}if(processFunc){result=processFunc(result,response)}return result};let body=null;if(json!=null){body=toUtf8Bytes(json);const updated=typeof connection===\"string\"?{url:connection}:shallowCopy(connection);if(updated.headers){const hasContentType=Object.keys(updated.headers).filter(k=>k.toLowerCase()===\"content-type\").length!==0;if(!hasContentType){updated.headers=shallowCopy(updated.headers);updated.headers[\"content-type\"]=\"application/json\"}}else{updated.headers={\"content-type\":\"application/json\"}}connection=updated}return _fetchData(connection,body,processJsonFunc)}function poll(func,options){if(!options){options={}}options=shallowCopy(options);if(options.floor==null){options.floor=0}if(options.ceiling==null){options.ceiling=1e4}if(options.interval==null){options.interval=250}return new Promise(function(resolve,reject){let timer=null;let done=false;const cancel=()=>{if(done){return false}done=true;if(timer){clearTimeout(timer)}return true};if(options.timeout){timer=setTimeout(()=>{if(cancel()){reject(new Error(\"timeout\"))}},options.timeout)}const retryLimit=options.retryLimit;let attempt=0;function check(){return func().then(function(result){if(result!==undefined){if(cancel()){resolve(result)}}else if(options.oncePoll){options.oncePoll.once(\"poll\",check)}else if(options.onceBlock){options.onceBlock.once(\"block\",check)}else if(!done){attempt++;if(attempt>retryLimit){if(cancel()){reject(new Error(\"retry limit reached\"))}return}let timeout=options.interval*parseInt(String(Math.random()*Math.pow(2,attempt)));if(timeout<options.floor){timeout=options.floor}if(timeout>options.ceiling){timeout=options.ceiling}setTimeout(check,timeout)}return null},function(error){if(cancel()){reject(error)}})}check()})}\"use strict\";var ALPHABET=\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";var ALPHABET_MAP={};for(var z=0;z<ALPHABET.length;z++){var x=ALPHABET.charAt(z);if(ALPHABET_MAP[x]!==undefined)throw new TypeError(x+\" is ambiguous\");ALPHABET_MAP[x]=z}function polymodStep(pre){var b=pre>>25;return(pre&33554431)<<5^-(b>>0&1)&996825010^-(b>>1&1)&642813549^-(b>>2&1)&513874426^-(b>>3&1)&1027748829^-(b>>4&1)&705979059}function prefixChk(prefix){var chk=1;for(var i=0;i<prefix.length;++i){var c=prefix.charCodeAt(i);if(c<33||c>126)return\"Invalid prefix (\"+prefix+\")\";chk=polymodStep(chk)^c>>5}chk=polymodStep(chk);for(i=0;i<prefix.length;++i){var v=prefix.charCodeAt(i);chk=polymodStep(chk)^v&31}return chk}function encode$2(prefix,words,LIMIT){LIMIT=LIMIT||90;if(prefix.length+7+words.length>LIMIT)throw new TypeError(\"Exceeds length limit\");prefix=prefix.toLowerCase();var chk=prefixChk(prefix);if(typeof chk===\"string\")throw new Error(chk);var result=prefix+\"1\";for(var i=0;i<words.length;++i){var x=words[i];if(x>>5!==0)throw new Error(\"Non 5-bit word\");chk=polymodStep(chk)^x;result+=ALPHABET.charAt(x)}for(i=0;i<6;++i){chk=polymodStep(chk)}chk^=1;for(i=0;i<6;++i){var v=chk>>(5-i)*5&31;result+=ALPHABET.charAt(v)}return result}function __decode(str,LIMIT){LIMIT=LIMIT||90;if(str.length<8)return str+\" too short\";if(str.length>LIMIT)return\"Exceeds length limit\";var lowered=str.toLowerCase();var uppered=str.toUpperCase();if(str!==lowered&&str!==uppered)return\"Mixed-case string \"+str;str=lowered;var split=str.lastIndexOf(\"1\");if(split===-1)return\"No separator character for \"+str;if(split===0)return\"Missing prefix for \"+str;var prefix=str.slice(0,split);var wordChars=str.slice(split+1);if(wordChars.length<6)return\"Data too short\";var chk=prefixChk(prefix);if(typeof chk===\"string\")return chk;var words=[];for(var i=0;i<wordChars.length;++i){var c=wordChars.charAt(i);var v=ALPHABET_MAP[c];if(v===undefined)return\"Unknown character \"+c;chk=polymodStep(chk)^v;if(i+6>=wordChars.length)continue;words.push(v)}if(chk!==1)return\"Invalid checksum for \"+str;return{prefix:prefix,words:words}}function decodeUnsafe(){var res=__decode.apply(null,arguments);if(typeof res===\"object\")return res}function decode$2(str){var res=__decode.apply(null,arguments);if(typeof res===\"object\")return res;throw new Error(res)}function convert(data,inBits,outBits,pad){var value=0;var bits=0;var maxV=(1<<outBits)-1;var result=[];for(var i=0;i<data.length;++i){value=value<<inBits|data[i];bits+=inBits;while(bits>=outBits){bits-=outBits;result.push(value>>bits&maxV)}}if(pad){if(bits>0){result.push(value<<outBits-bits&maxV)}}else{if(bits>=inBits)return\"Excess padding\";if(value<<outBits-bits&maxV)return\"Non-zero padding\"}return result}function toWordsUnsafe(bytes){var res=convert(bytes,8,5,true);if(Array.isArray(res))return res}function toWords(bytes){var res=convert(bytes,8,5,true);if(Array.isArray(res))return res;throw new Error(res)}function fromWordsUnsafe(words){var res=convert(words,5,8,false);if(Array.isArray(res))return res}function fromWords(words){var res=convert(words,5,8,false);if(Array.isArray(res))return res;throw new Error(res)}var bech32={decodeUnsafe:decodeUnsafe,decode:decode$2,encode:encode$2,toWordsUnsafe:toWordsUnsafe,toWords:toWords,fromWordsUnsafe:fromWordsUnsafe,fromWords:fromWords};const version$m=\"providers/5.1.2\";\"use strict\";const logger$s=new Logger(version$m);class Formatter{constructor(){logger$s.checkNew(new.target,Formatter);this.formats=this.getDefaultFormats()}getDefaultFormats(){const formats={};const address=this.address.bind(this);const bigNumber=this.bigNumber.bind(this);const blockTag=this.blockTag.bind(this);const data=this.data.bind(this);const hash=this.hash.bind(this);const hex=this.hex.bind(this);const number=this.number.bind(this);const strictData=v=>{return this.data(v,true)};formats.transaction={hash:hash,type:Formatter.allowNull(number,null),accessList:Formatter.allowNull(this.accessList.bind(this),null),blockHash:Formatter.allowNull(hash,null),blockNumber:Formatter.allowNull(number,null),transactionIndex:Formatter.allowNull(number,null),confirmations:Formatter.allowNull(number,null),from:address,gasPrice:bigNumber,gasLimit:bigNumber,to:Formatter.allowNull(address,null),value:bigNumber,nonce:number,data:data,r:Formatter.allowNull(this.uint256),s:Formatter.allowNull(this.uint256),v:Formatter.allowNull(number),creates:Formatter.allowNull(address,null),raw:Formatter.allowNull(data)};formats.transactionRequest={from:Formatter.allowNull(address),nonce:Formatter.allowNull(number),gasLimit:Formatter.allowNull(bigNumber),gasPrice:Formatter.allowNull(bigNumber),to:Formatter.allowNull(address),value:Formatter.allowNull(bigNumber),data:Formatter.allowNull(strictData),type:Formatter.allowNull(number),accessList:Formatter.allowNull(this.accessList.bind(this),null)};formats.receiptLog={transactionIndex:number,blockNumber:number,transactionHash:hash,address:address,topics:Formatter.arrayOf(hash),data:data,logIndex:number,blockHash:hash};formats.receipt={to:Formatter.allowNull(this.address,null),from:Formatter.allowNull(this.address,null),contractAddress:Formatter.allowNull(address,null),transactionIndex:number,root:Formatter.allowNull(hex),gasUsed:bigNumber,logsBloom:Formatter.allowNull(data),blockHash:hash,transactionHash:hash,logs:Formatter.arrayOf(this.receiptLog.bind(this)),blockNumber:number,confirmations:Formatter.allowNull(number,null),cumulativeGasUsed:bigNumber,status:Formatter.allowNull(number)};formats.block={hash:hash,parentHash:hash,number:number,timestamp:number,nonce:Formatter.allowNull(hex),difficulty:this.difficulty.bind(this),gasLimit:bigNumber,gasUsed:bigNumber,miner:address,extraData:data,transactions:Formatter.allowNull(Formatter.arrayOf(hash))};formats.blockWithTransactions=shallowCopy(formats.block);formats.blockWithTransactions.transactions=Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));formats.filter={fromBlock:Formatter.allowNull(blockTag,undefined),toBlock:Formatter.allowNull(blockTag,undefined),blockHash:Formatter.allowNull(hash,undefined),address:Formatter.allowNull(address,undefined),topics:Formatter.allowNull(this.topics.bind(this),undefined)};formats.filterLog={blockNumber:Formatter.allowNull(number),blockHash:Formatter.allowNull(hash),transactionIndex:number,removed:Formatter.allowNull(this.boolean.bind(this)),address:address,data:Formatter.allowFalsish(data,\"0x\"),topics:Formatter.arrayOf(hash),transactionHash:hash,logIndex:number};return formats}accessList(accessList){return accessListify(accessList||[])}number(number){if(number===\"0x\"){return 0}return BigNumber.from(number).toNumber()}bigNumber(value){return BigNumber.from(value)}boolean(value){if(typeof value===\"boolean\"){return value}if(typeof value===\"string\"){value=value.toLowerCase();if(value===\"true\"){return true}if(value===\"false\"){return false}}throw new Error(\"invalid boolean - \"+value)}hex(value,strict){if(typeof value===\"string\"){if(!strict&&value.substring(0,2)!==\"0x\"){value=\"0x\"+value}if(isHexString(value)){return value.toLowerCase()}}return logger$s.throwArgumentError(\"invalid hash\",\"value\",value)}data(value,strict){const result=this.hex(value,strict);if(result.length%2!==0){throw new Error(\"invalid data; odd-length - \"+value)}return result}address(value){return getAddress(value)}callAddress(value){if(!isHexString(value,32)){return null}const address=getAddress(hexDataSlice(value,12));return address===AddressZero?null:address}contractAddress(value){return getContractAddress(value)}blockTag(blockTag){if(blockTag==null){return\"latest\"}if(blockTag===\"earliest\"){return\"0x0\"}if(blockTag===\"latest\"||blockTag===\"pending\"){return blockTag}if(typeof blockTag===\"number\"||isHexString(blockTag)){return hexValue(blockTag)}throw new Error(\"invalid blockTag\")}hash(value,strict){const result=this.hex(value,strict);if(hexDataLength(result)!==32){return logger$s.throwArgumentError(\"invalid hash\",\"value\",value)}return result}difficulty(value){if(value==null){return null}const v=BigNumber.from(value);try{return v.toNumber()}catch(error){}return null}uint256(value){if(!isHexString(value)){throw new Error(\"invalid uint256\")}return hexZeroPad(value,32)}_block(value,format){if(value.author!=null&&value.miner==null){value.miner=value.author}return Formatter.check(format,value)}block(value){return this._block(value,this.formats.block)}blockWithTransactions(value){return this._block(value,this.formats.blockWithTransactions)}transactionRequest(value){return Formatter.check(this.formats.transactionRequest,value)}transactionResponse(transaction){if(transaction.gas!=null&&transaction.gasLimit==null){transaction.gasLimit=transaction.gas}if(transaction.to&&BigNumber.from(transaction.to).isZero()){transaction.to=\"0x0000000000000000000000000000000000000000\"}if(transaction.input!=null&&transaction.data==null){transaction.data=transaction.input}if(transaction.to==null&&transaction.creates==null){transaction.creates=this.contractAddress(transaction)}if(transaction.type===1&&transaction.accessList==null){transaction.accessList=[]}const result=Formatter.check(this.formats.transaction,transaction);if(transaction.chainId!=null){let chainId=transaction.chainId;if(isHexString(chainId)){chainId=BigNumber.from(chainId).toNumber()}result.chainId=chainId}else{let chainId=transaction.networkId;if(chainId==null&&result.v==null){chainId=transaction.chainId}if(isHexString(chainId)){chainId=BigNumber.from(chainId).toNumber()}if(typeof chainId!==\"number\"&&result.v!=null){chainId=(result.v-35)/2;if(chainId<0){chainId=0}chainId=parseInt(chainId)}if(typeof chainId!==\"number\"){chainId=0}result.chainId=chainId}if(result.blockHash&&result.blockHash.replace(/0/g,\"\")===\"x\"){result.blockHash=null}return result}transaction(value){return parse(value)}receiptLog(value){return Formatter.check(this.formats.receiptLog,value)}receipt(value){const result=Formatter.check(this.formats.receipt,value);if(result.root!=null){if(result.root.length<=4){const value=BigNumber.from(result.root).toNumber();if(value===0||value===1){if(result.status!=null&&result.status!==value){logger$s.throwArgumentError(\"alt-root-status/status mismatch\",\"value\",{root:result.root,status:result.status})}result.status=value;delete result.root}else{logger$s.throwArgumentError(\"invalid alt-root-status\",\"value.root\",result.root)}}else if(result.root.length!==66){logger$s.throwArgumentError(\"invalid root hash\",\"value.root\",result.root)}}if(result.status!=null){result.byzantium=true}return result}topics(value){if(Array.isArray(value)){return value.map(v=>this.topics(v))}else if(value!=null){return this.hash(value,true)}return null}filter(value){return Formatter.check(this.formats.filter,value)}filterLog(value){return Formatter.check(this.formats.filterLog,value)}static check(format,object){const result={};for(const key in format){try{const value=format[key](object[key]);if(value!==undefined){result[key]=value}}catch(error){error.checkKey=key;error.checkValue=object[key];throw error}}return result}static allowNull(format,nullValue){return function(value){if(value==null){return nullValue}return format(value)}}static allowFalsish(format,replaceValue){return function(value){if(!value){return replaceValue}return format(value)}}static arrayOf(format){return function(array){if(!Array.isArray(array)){throw new Error(\"not an array\")}const result=[];array.forEach(function(value){result.push(format(value))});return result}}}function isCommunityResourcable(value){return value&&typeof value.isCommunityResource===\"function\"}function isCommunityResource(value){return isCommunityResourcable(value)&&value.isCommunityResource()}let throttleMessage=false;function showThrottleMessage(){if(throttleMessage){return}throttleMessage=true;console.log(\"========= NOTICE =========\");console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");console.log(\"\");console.log(\"The default API keys for each service are provided as a highly-throttled,\");console.log(\"community resource for low-traffic projects and early prototyping.\");console.log(\"\");console.log(\"While your application will continue to function, we highly recommended\");console.log(\"signing up for your own API keys to improve performance, increase your\");console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");console.log(\"\");console.log(\"For more details: https://docs.ethers.io/api-keys/\");console.log(\"==========================\")}\"use strict\";var __awaiter$8=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$t=new Logger(version$m);function checkTopic(topic){if(topic==null){return\"null\"}if(hexDataLength(topic)!==32){logger$t.throwArgumentError(\"invalid topic\",\"topic\",topic)}return topic.toLowerCase()}function serializeTopics(topics){topics=topics.slice();while(topics.length>0&&topics[topics.length-1]==null){topics.pop()}return topics.map(topic=>{if(Array.isArray(topic)){const unique={};topic.forEach(topic=>{unique[checkTopic(topic)]=true});const sorted=Object.keys(unique);sorted.sort();return sorted.join(\"|\")}else{return checkTopic(topic)}}).join(\"&\")}function deserializeTopics(data){if(data===\"\"){return[]}return data.split(/&/g).map(topic=>{if(topic===\"\"){return[]}const comps=topic.split(\"|\").map(topic=>{return topic===\"null\"?null:topic});return comps.length===1?comps[0]:comps})}function getEventTag$1(eventName){if(typeof eventName===\"string\"){eventName=eventName.toLowerCase();if(hexDataLength(eventName)===32){return\"tx:\"+eventName}if(eventName.indexOf(\":\")===-1){return eventName}}else if(Array.isArray(eventName)){return\"filter:*:\"+serializeTopics(eventName)}else if(ForkEvent.isForkEvent(eventName)){logger$t.warn(\"not implemented\");throw new Error(\"not implemented\")}else if(eventName&&typeof eventName===\"object\"){return\"filter:\"+(eventName.address||\"*\")+\":\"+serializeTopics(eventName.topics||[])}throw new Error(\"invalid event - \"+eventName)}function getTime(){return(new Date).getTime()}function stall(duration){return new Promise(resolve=>{setTimeout(resolve,duration)})}const PollableEvents=[\"block\",\"network\",\"pending\",\"poll\"];class Event{constructor(tag,listener,once){defineReadOnly(this,\"tag\",tag);defineReadOnly(this,\"listener\",listener);defineReadOnly(this,\"once\",once)}get event(){switch(this.type){case\"tx\":return this.hash;case\"filter\":return this.filter}return this.tag}get type(){return this.tag.split(\":\")[0]}get hash(){const comps=this.tag.split(\":\");if(comps[0]!==\"tx\"){return null}return comps[1]}get filter(){const comps=this.tag.split(\":\");if(comps[0]!==\"filter\"){return null}const address=comps[1];const topics=deserializeTopics(comps[2]);const filter={};if(topics.length>0){filter.topics=topics}if(address&&address!==\"*\"){filter.address=address}return filter}pollable(){return this.tag.indexOf(\":\")>=0||PollableEvents.indexOf(this.tag)>=0}}const coinInfos={0:{symbol:\"btc\",p2pkh:0,p2sh:5,prefix:\"bc\"},2:{symbol:\"ltc\",p2pkh:48,p2sh:50,prefix:\"ltc\"},3:{symbol:\"doge\",p2pkh:30,p2sh:22},60:{symbol:\"eth\",ilk:\"eth\"},61:{symbol:\"etc\",ilk:\"eth\"},700:{symbol:\"xdai\",ilk:\"eth\"}};function bytes32ify(value){return hexZeroPad(BigNumber.from(value).toHexString(),32)}function base58Encode(data){return Base58.encode(concat([data,hexDataSlice(sha256$1(sha256$1(data)),0,4)]))}class Resolver{constructor(provider,address,name){defineReadOnly(this,\"provider\",provider);defineReadOnly(this,\"name\",name);defineReadOnly(this,\"address\",provider.formatter.address(address))}_fetchBytes(selector,parameters){return __awaiter$8(this,void 0,void 0,function*(){const transaction={to:this.address,data:hexConcat([selector,namehash(this.name),parameters||\"0x\"])};const result=yield this.provider.call(transaction);if(result===\"0x\"){return null}const offset=BigNumber.from(hexDataSlice(result,0,32)).toNumber();const length=BigNumber.from(hexDataSlice(result,offset,offset+32)).toNumber();return hexDataSlice(result,offset+32,offset+32+length)})}_getAddress(coinType,hexBytes){const coinInfo=coinInfos[String(coinType)];if(coinInfo==null){logger$t.throwError(`unsupported coin type: ${coinType}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${coinType})`})}if(coinInfo.ilk===\"eth\"){return this.provider.formatter.address(hexBytes)}const bytes=arrayify(hexBytes);if(coinInfo.p2pkh!=null){const p2pkh=hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(p2pkh){const length=parseInt(p2pkh[1],16);if(p2pkh[2].length===length*2&&length>=1&&length<=75){return base58Encode(concat([[coinInfo.p2pkh],\"0x\"+p2pkh[2]]))}}}if(coinInfo.p2sh!=null){const p2sh=hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(p2sh){const length=parseInt(p2sh[1],16);if(p2sh[2].length===length*2&&length>=1&&length<=75){return base58Encode(concat([[coinInfo.p2sh],\"0x\"+p2sh[2]]))}}}if(coinInfo.prefix!=null){const length=bytes[1];let version=bytes[0];if(version===0){if(length!==20&&length!==32){version=-1}}else{version=-1}if(version>=0&&bytes.length===2+length&&length>=1&&length<=75){const words=bech32.toWords(bytes.slice(2));words.unshift(version);return bech32.encode(coinInfo.prefix,words)}}return null}getAddress(coinType){return __awaiter$8(this,void 0,void 0,function*(){if(coinType==null){coinType=60}if(coinType===60){const transaction={to:this.address,data:\"0x3b3b57de\"+namehash(this.name).substring(2)};const hexBytes=yield this.provider.call(transaction);if(hexBytes===\"0x\"||hexBytes===HashZero){return null}return this.provider.formatter.callAddress(hexBytes)}const hexBytes=yield this._fetchBytes(\"0xf1cb7e06\",bytes32ify(coinType));if(hexBytes==null||hexBytes===\"0x\"){return null}const address=this._getAddress(coinType,hexBytes);if(address==null){logger$t.throwError(`invalid or unsupported coin data`,Logger.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${coinType})`,coinType:coinType,data:hexBytes})}return address})}getContentHash(){return __awaiter$8(this,void 0,void 0,function*(){const hexBytes=yield this._fetchBytes(\"0xbc1c58d1\");if(hexBytes==null||hexBytes===\"0x\"){return null}const ipfs=hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(ipfs){const length=parseInt(ipfs[3],16);if(ipfs[4].length===length*2){return\"ipfs://\"+Base58.encode(\"0x\"+ipfs[1])}}const swarm=hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);if(swarm){if(swarm[1].length===32*2){return\"bzz://\"+swarm[1]}}return logger$t.throwError(`invalid or unsupported content hash data`,Logger.errors.UNSUPPORTED_OPERATION,{operation:\"getContentHash()\",data:hexBytes})})}getText(key){return __awaiter$8(this,void 0,void 0,function*(){let keyBytes=toUtf8Bytes(key);keyBytes=concat([bytes32ify(64),bytes32ify(keyBytes.length),keyBytes]);if(keyBytes.length%32!==0){keyBytes=concat([keyBytes,hexZeroPad(\"0x\",32-key.length%32)])}const hexBytes=yield this._fetchBytes(\"0x59d1d43c\",hexlify(keyBytes));if(hexBytes==null||hexBytes===\"0x\"){return null}return toUtf8String(hexBytes)})}}let defaultFormatter=null;let nextPollId=1;class BaseProvider extends Provider{constructor(network){logger$t.checkNew(new.target,Provider);super();this._events=[];this._emitted={block:-2};this.formatter=new.target.getFormatter();defineReadOnly(this,\"anyNetwork\",network===\"any\");if(this.anyNetwork){network=this.detectNetwork()}if(network instanceof Promise){this._networkPromise=network;network.catch(error=>{});this._ready().catch(error=>{})}else{const knownNetwork=getStatic(new.target,\"getNetwork\")(network);if(knownNetwork){defineReadOnly(this,\"_network\",knownNetwork);this.emit(\"network\",knownNetwork,null)}else{logger$t.throwArgumentError(\"invalid network\",\"network\",network)}}this._maxInternalBlockNumber=-1024;this._lastBlockNumber=-2;this._pollingInterval=4e3;this._fastQueryDate=0}_ready(){return __awaiter$8(this,void 0,void 0,function*(){if(this._network==null){let network=null;if(this._networkPromise){try{network=yield this._networkPromise}catch(error){}}if(network==null){network=yield this.detectNetwork()}if(!network){logger$t.throwError(\"no network detected\",Logger.errors.UNKNOWN_ERROR,{})}if(this._network==null){if(this.anyNetwork){this._network=network}else{defineReadOnly(this,\"_network\",network)}this.emit(\"network\",network,null)}}return this._network})}get ready(){return poll(()=>{return this._ready().then(network=>{return network},error=>{if(error.code===Logger.errors.NETWORK_ERROR&&error.event===\"noNetwork\"){return undefined}throw error})})}static getFormatter(){if(defaultFormatter==null){defaultFormatter=new Formatter}return defaultFormatter}static getNetwork(network){return getNetwork(network==null?\"homestead\":network)}_getInternalBlockNumber(maxAge){return __awaiter$8(this,void 0,void 0,function*(){yield this._ready();if(maxAge>0){while(this._internalBlockNumber){const internalBlockNumber=this._internalBlockNumber;try{const result=yield internalBlockNumber;if(getTime()-result.respTime<=maxAge){return result.blockNumber}break}catch(error){if(this._internalBlockNumber===internalBlockNumber){break}}}}const reqTime=getTime();const checkInternalBlockNumber=resolveProperties({blockNumber:this.perform(\"getBlockNumber\",{}),networkError:this.getNetwork().then(network=>null,error=>error)}).then(({blockNumber:blockNumber,networkError:networkError})=>{if(networkError){if(this._internalBlockNumber===checkInternalBlockNumber){this._internalBlockNumber=null}throw networkError}const respTime=getTime();blockNumber=BigNumber.from(blockNumber).toNumber();if(blockNumber<this._maxInternalBlockNumber){blockNumber=this._maxInternalBlockNumber}this._maxInternalBlockNumber=blockNumber;this._setFastBlockNumber(blockNumber);return{blockNumber:blockNumber,reqTime:reqTime,respTime:respTime}});this._internalBlockNumber=checkInternalBlockNumber;checkInternalBlockNumber.catch(error=>{if(this._internalBlockNumber===checkInternalBlockNumber){this._internalBlockNumber=null}});return(yield checkInternalBlockNumber).blockNumber})}poll(){return __awaiter$8(this,void 0,void 0,function*(){const pollId=nextPollId++;const runners=[];let blockNumber=null;try{blockNumber=yield this._getInternalBlockNumber(100+this.pollingInterval/2)}catch(error){this.emit(\"error\",error);return}this._setFastBlockNumber(blockNumber);this.emit(\"poll\",pollId,blockNumber);if(blockNumber===this._lastBlockNumber){this.emit(\"didPoll\",pollId);return}if(this._emitted.block===-2){this._emitted.block=blockNumber-1}if(Math.abs(this._emitted.block-blockNumber)>1e3){logger$t.warn(\"network block skew detected; skipping block events\");this.emit(\"error\",logger$t.makeError(\"network block skew detected\",Logger.errors.NETWORK_ERROR,{blockNumber:blockNumber,event:\"blockSkew\",previousBlockNumber:this._emitted.block}));this.emit(\"block\",blockNumber)}else{for(let i=this._emitted.block+1;i<=blockNumber;i++){this.emit(\"block\",i)}}if(this._emitted.block!==blockNumber){this._emitted.block=blockNumber;Object.keys(this._emitted).forEach(key=>{if(key===\"block\"){return}const eventBlockNumber=this._emitted[key];if(eventBlockNumber===\"pending\"){return}if(blockNumber-eventBlockNumber>12){delete this._emitted[key]}})}if(this._lastBlockNumber===-2){this._lastBlockNumber=blockNumber-1}this._events.forEach(event=>{switch(event.type){case\"tx\":{const hash=event.hash;let runner=this.getTransactionReceipt(hash).then(receipt=>{if(!receipt||receipt.blockNumber==null){return null}this._emitted[\"t:\"+hash]=receipt.blockNumber;this.emit(hash,receipt);return null}).catch(error=>{this.emit(\"error\",error)});runners.push(runner);break}case\"filter\":{const filter=event.filter;filter.fromBlock=this._lastBlockNumber+1;filter.toBlock=blockNumber;const runner=this.getLogs(filter).then(logs=>{if(logs.length===0){return}logs.forEach(log=>{this._emitted[\"b:\"+log.blockHash]=log.blockNumber;this._emitted[\"t:\"+log.transactionHash]=log.blockNumber;this.emit(filter,log)})}).catch(error=>{this.emit(\"error\",error)});runners.push(runner);break}}});this._lastBlockNumber=blockNumber;Promise.all(runners).then(()=>{this.emit(\"didPoll\",pollId)}).catch(error=>{this.emit(\"error\",error)});return})}resetEventsBlock(blockNumber){this._lastBlockNumber=blockNumber-1;if(this.polling){this.poll()}}get network(){return this._network}detectNetwork(){return __awaiter$8(this,void 0,void 0,function*(){return logger$t.throwError(\"provider does not support network detection\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"provider.detectNetwork\"})})}getNetwork(){return __awaiter$8(this,void 0,void 0,function*(){const network=yield this._ready();const currentNetwork=yield this.detectNetwork();if(network.chainId!==currentNetwork.chainId){if(this.anyNetwork){this._network=currentNetwork;this._lastBlockNumber=-2;this._fastBlockNumber=null;this._fastBlockNumberPromise=null;this._fastQueryDate=0;this._emitted.block=-2;this._maxInternalBlockNumber=-1024;this._internalBlockNumber=null;this.emit(\"network\",currentNetwork,network);yield stall(0);return this._network}const error=logger$t.makeError(\"underlying network changed\",Logger.errors.NETWORK_ERROR,{event:\"changed\",network:network,detectedNetwork:currentNetwork});this.emit(\"error\",error);throw error}return network})}get blockNumber(){this._getInternalBlockNumber(100+this.pollingInterval/2).then(blockNumber=>{this._setFastBlockNumber(blockNumber)},error=>{});return this._fastBlockNumber!=null?this._fastBlockNumber:-1}get polling(){return this._poller!=null}set polling(value){if(value&&!this._poller){this._poller=setInterval(()=>{this.poll()},this.pollingInterval);if(!this._bootstrapPoll){this._bootstrapPoll=setTimeout(()=>{this.poll();this._bootstrapPoll=setTimeout(()=>{if(!this._poller){this.poll()}this._bootstrapPoll=null},this.pollingInterval)},0)}}else if(!value&&this._poller){clearInterval(this._poller);this._poller=null}}get pollingInterval(){return this._pollingInterval}set pollingInterval(value){if(typeof value!==\"number\"||value<=0||parseInt(String(value))!=value){throw new Error(\"invalid polling interval\")}this._pollingInterval=value;if(this._poller){clearInterval(this._poller);this._poller=setInterval(()=>{this.poll()},this._pollingInterval)}}_getFastBlockNumber(){const now=getTime();if(now-this._fastQueryDate>2*this._pollingInterval){this._fastQueryDate=now;this._fastBlockNumberPromise=this.getBlockNumber().then(blockNumber=>{if(this._fastBlockNumber==null||blockNumber>this._fastBlockNumber){this._fastBlockNumber=blockNumber}return this._fastBlockNumber})}return this._fastBlockNumberPromise}_setFastBlockNumber(blockNumber){if(this._fastBlockNumber!=null&&blockNumber<this._fastBlockNumber){return}this._fastQueryDate=getTime();if(this._fastBlockNumber==null||blockNumber>this._fastBlockNumber){this._fastBlockNumber=blockNumber;this._fastBlockNumberPromise=Promise.resolve(blockNumber)}}waitForTransaction(transactionHash,confirmations,timeout){return __awaiter$8(this,void 0,void 0,function*(){if(confirmations==null){confirmations=1}const receipt=yield this.getTransactionReceipt(transactionHash);if((receipt?receipt.confirmations:0)>=confirmations){return receipt}return new Promise((resolve,reject)=>{let timer=null;let done=false;const handler=receipt=>{if(receipt.confirmations<confirmations){return}if(timer){clearTimeout(timer)}if(done){return}done=true;this.removeListener(transactionHash,handler);resolve(receipt)};this.on(transactionHash,handler);if(typeof timeout===\"number\"&&timeout>0){timer=setTimeout(()=>{if(done){return}timer=null;done=true;this.removeListener(transactionHash,handler);reject(logger$t.makeError(\"timeout exceeded\",Logger.errors.TIMEOUT,{timeout:timeout}))},timeout);if(timer.unref){timer.unref()}}})})}getBlockNumber(){return __awaiter$8(this,void 0,void 0,function*(){return this._getInternalBlockNumber(0)})}getGasPrice(){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const result=yield this.perform(\"getGasPrice\",{});try{return BigNumber.from(result)}catch(error){return logger$t.throwError(\"bad result from backend\",Logger.errors.SERVER_ERROR,{method:\"getGasPrice\",result:result,error:error})}})}getBalance(addressOrName,blockTag){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)});const result=yield this.perform(\"getBalance\",params);try{return BigNumber.from(result)}catch(error){return logger$t.throwError(\"bad result from backend\",Logger.errors.SERVER_ERROR,{method:\"getBalance\",params:params,result:result,error:error})}})}getTransactionCount(addressOrName,blockTag){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)});const result=yield this.perform(\"getTransactionCount\",params);try{return BigNumber.from(result).toNumber()}catch(error){return logger$t.throwError(\"bad result from backend\",Logger.errors.SERVER_ERROR,{method:\"getTransactionCount\",params:params,result:result,error:error})}})}getCode(addressOrName,blockTag){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)});const result=yield this.perform(\"getCode\",params);try{return hexlify(result)}catch(error){return logger$t.throwError(\"bad result from backend\",Logger.errors.SERVER_ERROR,{method:\"getCode\",params:params,result:result,error:error})}})}getStorageAt(addressOrName,position,blockTag){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag),position:Promise.resolve(position).then(p=>hexValue(p))});const result=yield this.perform(\"getStorageAt\",params);try{return hexlify(result)}catch(error){return logger$t.throwError(\"bad result from backend\",Logger.errors.SERVER_ERROR,{method:\"getStorageAt\",params:params,result:result,error:error})}})}_wrapTransaction(tx,hash){if(hash!=null&&hexDataLength(hash)!==32){throw new Error(\"invalid response - sendTransaction\")}const result=tx;if(hash!=null&&tx.hash!==hash){logger$t.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\",Logger.errors.UNKNOWN_ERROR,{expectedHash:tx.hash,returnedHash:hash})}result.wait=(confirmations=>__awaiter$8(this,void 0,void 0,function*(){if(confirmations!==0){this._emitted[\"t:\"+tx.hash]=\"pending\"}const receipt=yield this.waitForTransaction(tx.hash,confirmations);if(receipt==null&&confirmations===0){return null}this._emitted[\"t:\"+tx.hash]=receipt.blockNumber;if(receipt.status===0){logger$t.throwError(\"transaction failed\",Logger.errors.CALL_EXCEPTION,{transactionHash:tx.hash,transaction:tx,receipt:receipt})}return receipt}));return result}sendTransaction(signedTransaction){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const hexTx=yield Promise.resolve(signedTransaction).then(t=>hexlify(t));const tx=this.formatter.transaction(signedTransaction);try{const hash=yield this.perform(\"sendTransaction\",{signedTransaction:hexTx});return this._wrapTransaction(tx,hash)}catch(error){error.transaction=tx;error.transactionHash=tx.hash;throw error}})}_getTransactionRequest(transaction){return __awaiter$8(this,void 0,void 0,function*(){const values=yield transaction;const tx={};[\"from\",\"to\"].forEach(key=>{if(values[key]==null){return}tx[key]=Promise.resolve(values[key]).then(v=>v?this._getAddress(v):null)});[\"gasLimit\",\"gasPrice\",\"value\"].forEach(key=>{if(values[key]==null){return}tx[key]=Promise.resolve(values[key]).then(v=>v?BigNumber.from(v):null)});[\"type\"].forEach(key=>{if(values[key]==null){return}tx[key]=Promise.resolve(values[key]).then(v=>v!=null?v:null)});if(values.accessList){tx.accessList=this.formatter.accessList(values.accessList)}[\"data\"].forEach(key=>{if(values[key]==null){return}tx[key]=Promise.resolve(values[key]).then(v=>v?hexlify(v):null)});return this.formatter.transactionRequest(yield resolveProperties(tx))})}_getFilter(filter){return __awaiter$8(this,void 0,void 0,function*(){filter=yield filter;const result={};if(filter.address!=null){result.address=this._getAddress(filter.address)}[\"blockHash\",\"topics\"].forEach(key=>{if(filter[key]==null){return}result[key]=filter[key]});[\"fromBlock\",\"toBlock\"].forEach(key=>{if(filter[key]==null){return}result[key]=this._getBlockTag(filter[key])});return this.formatter.filter(yield resolveProperties(result))})}call(transaction,blockTag){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({transaction:this._getTransactionRequest(transaction),blockTag:this._getBlockTag(blockTag)});const result=yield this.perform(\"call\",params);try{return hexlify(result)}catch(error){return logger$t.throwError(\"bad result from backend\",Logger.errors.SERVER_ERROR,{method:\"call\",params:params,result:result,error:error})}})}estimateGas(transaction){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({transaction:this._getTransactionRequest(transaction)});const result=yield this.perform(\"estimateGas\",params);try{return BigNumber.from(result)}catch(error){return logger$t.throwError(\"bad result from backend\",Logger.errors.SERVER_ERROR,{method:\"estimateGas\",params:params,result:result,error:error})}})}_getAddress(addressOrName){return __awaiter$8(this,void 0,void 0,function*(){const address=yield this.resolveName(addressOrName);if(address==null){logger$t.throwError(\"ENS name not configured\",Logger.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(addressOrName)})`})}return address})}_getBlock(blockHashOrBlockTag,includeTransactions){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();blockHashOrBlockTag=yield blockHashOrBlockTag;let blockNumber=-128;const params={includeTransactions:!!includeTransactions};if(isHexString(blockHashOrBlockTag,32)){params.blockHash=blockHashOrBlockTag}else{try{params.blockTag=this.formatter.blockTag(yield this._getBlockTag(blockHashOrBlockTag));if(isHexString(params.blockTag)){blockNumber=parseInt(params.blockTag.substring(2),16)}}catch(error){logger$t.throwArgumentError(\"invalid block hash or block tag\",\"blockHashOrBlockTag\",blockHashOrBlockTag)}}return poll(()=>__awaiter$8(this,void 0,void 0,function*(){const block=yield this.perform(\"getBlock\",params);if(block==null){if(params.blockHash!=null){if(this._emitted[\"b:\"+params.blockHash]==null){return null}}if(params.blockTag!=null){if(blockNumber>this._emitted.block){return null}}return undefined}if(includeTransactions){let blockNumber=null;for(let i=0;i<block.transactions.length;i++){const tx=block.transactions[i];if(tx.blockNumber==null){tx.confirmations=0}else if(tx.confirmations==null){if(blockNumber==null){blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval)}let confirmations=blockNumber-tx.blockNumber+1;if(confirmations<=0){confirmations=1}tx.confirmations=confirmations}}return this.formatter.blockWithTransactions(block)}return this.formatter.block(block)}),{oncePoll:this})})}getBlock(blockHashOrBlockTag){return this._getBlock(blockHashOrBlockTag,false)}getBlockWithTransactions(blockHashOrBlockTag){return this._getBlock(blockHashOrBlockTag,true)}getTransaction(transactionHash){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();transactionHash=yield transactionHash;const params={transactionHash:this.formatter.hash(transactionHash,true)};return poll(()=>__awaiter$8(this,void 0,void 0,function*(){const result=yield this.perform(\"getTransaction\",params);if(result==null){if(this._emitted[\"t:\"+transactionHash]==null){return null}return undefined}const tx=this.formatter.transactionResponse(result);if(tx.blockNumber==null){tx.confirmations=0}else if(tx.confirmations==null){const blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);let confirmations=blockNumber-tx.blockNumber+1;if(confirmations<=0){confirmations=1}tx.confirmations=confirmations}return this._wrapTransaction(tx)}),{oncePoll:this})})}getTransactionReceipt(transactionHash){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();transactionHash=yield transactionHash;const params={transactionHash:this.formatter.hash(transactionHash,true)};return poll(()=>__awaiter$8(this,void 0,void 0,function*(){const result=yield this.perform(\"getTransactionReceipt\",params);if(result==null){if(this._emitted[\"t:\"+transactionHash]==null){return null}return undefined}if(result.blockHash==null){return undefined}const receipt=this.formatter.receipt(result);if(receipt.blockNumber==null){receipt.confirmations=0}else if(receipt.confirmations==null){const blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);let confirmations=blockNumber-receipt.blockNumber+1;if(confirmations<=0){confirmations=1}receipt.confirmations=confirmations}return receipt}),{oncePoll:this})})}getLogs(filter){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({filter:this._getFilter(filter)});const logs=yield this.perform(\"getLogs\",params);logs.forEach(log=>{if(log.removed==null){log.removed=false}});return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs)})}getEtherPrice(){return __awaiter$8(this,void 0,void 0,function*(){yield this.getNetwork();return this.perform(\"getEtherPrice\",{})})}_getBlockTag(blockTag){return __awaiter$8(this,void 0,void 0,function*(){blockTag=yield blockTag;if(typeof blockTag===\"number\"&&blockTag<0){if(blockTag%1){logger$t.throwArgumentError(\"invalid BlockTag\",\"blockTag\",blockTag)}let blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);blockNumber+=blockTag;if(blockNumber<0){blockNumber=0}return this.formatter.blockTag(blockNumber)}return this.formatter.blockTag(blockTag)})}getResolver(name){return __awaiter$8(this,void 0,void 0,function*(){const address=yield this._getResolver(name);if(address==null){return null}return new Resolver(this,address,name)})}_getResolver(name){return __awaiter$8(this,void 0,void 0,function*(){const network=yield this.getNetwork();if(!network.ensAddress){logger$t.throwError(\"network does not support ENS\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"ENS\",network:network.name})}const transaction={to:network.ensAddress,data:\"0x0178b8bf\"+namehash(name).substring(2)};return this.formatter.callAddress(yield this.call(transaction))})}resolveName(name){return __awaiter$8(this,void 0,void 0,function*(){name=yield name;try{return Promise.resolve(this.formatter.address(name))}catch(error){if(isHexString(name)){throw error}}if(typeof name!==\"string\"){logger$t.throwArgumentError(\"invalid ENS name\",\"name\",name)}const resolver=yield this.getResolver(name);if(!resolver){return null}return yield resolver.getAddress()})}lookupAddress(address){return __awaiter$8(this,void 0,void 0,function*(){address=yield address;address=this.formatter.address(address);const reverseName=address.substring(2).toLowerCase()+\".addr.reverse\";const resolverAddress=yield this._getResolver(reverseName);if(!resolverAddress){return null}let bytes=arrayify(yield this.call({to:resolverAddress,data:\"0x691f3431\"+namehash(reverseName).substring(2)}));if(bytes.length<32||!BigNumber.from(bytes.slice(0,32)).eq(32)){return null}bytes=bytes.slice(32);if(bytes.length<32){return null}const length=BigNumber.from(bytes.slice(0,32)).toNumber();bytes=bytes.slice(32);if(length>bytes.length){return null}const name=toUtf8String(bytes.slice(0,length));const addr=yield this.resolveName(name);if(addr!=address){return null}return name})}perform(method,params){return logger$t.throwError(method+\" not implemented\",Logger.errors.NOT_IMPLEMENTED,{operation:method})}_startEvent(event){this.polling=this._events.filter(e=>e.pollable()).length>0}_stopEvent(event){this.polling=this._events.filter(e=>e.pollable()).length>0}_addEventListener(eventName,listener,once){const event=new Event(getEventTag$1(eventName),listener,once);this._events.push(event);this._startEvent(event);return this}on(eventName,listener){return this._addEventListener(eventName,listener,false)}once(eventName,listener){return this._addEventListener(eventName,listener,true)}emit(eventName,...args){let result=false;let stopped=[];let eventTag=getEventTag$1(eventName);this._events=this._events.filter(event=>{if(event.tag!==eventTag){return true}setTimeout(()=>{event.listener.apply(this,args)},0);result=true;if(event.once){stopped.push(event);return false}return true});stopped.forEach(event=>{this._stopEvent(event)});return result}listenerCount(eventName){if(!eventName){return this._events.length}let eventTag=getEventTag$1(eventName);return this._events.filter(event=>{return event.tag===eventTag}).length}listeners(eventName){if(eventName==null){return this._events.map(event=>event.listener)}let eventTag=getEventTag$1(eventName);return this._events.filter(event=>event.tag===eventTag).map(event=>event.listener)}off(eventName,listener){if(listener==null){return this.removeAllListeners(eventName)}const stopped=[];let found=false;let eventTag=getEventTag$1(eventName);this._events=this._events.filter(event=>{if(event.tag!==eventTag||event.listener!=listener){return true}if(found){return true}found=true;stopped.push(event);return false});stopped.forEach(event=>{this._stopEvent(event)});return this}removeAllListeners(eventName){let stopped=[];if(eventName==null){stopped=this._events;this._events=[]}else{const eventTag=getEventTag$1(eventName);this._events=this._events.filter(event=>{if(event.tag!==eventTag){return true}stopped.push(event);return false})}stopped.forEach(event=>{this._stopEvent(event)});return this}}\"use strict\";var __awaiter$9=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$u=new Logger(version$m);const errorGas=[\"call\",\"estimateGas\"];function checkError(method,error,params){if(method===\"call\"&&error.code===Logger.errors.SERVER_ERROR){const e=error.error;if(e&&e.message.match(\"reverted\")&&isHexString(e.data)){return e.data}}let message=error.message;if(error.code===Logger.errors.SERVER_ERROR&&error.error&&typeof error.error.message===\"string\"){message=error.error.message}else if(typeof error.body===\"string\"){message=error.body}else if(typeof error.responseText===\"string\"){message=error.responseText}message=(message||\"\").toLowerCase();const transaction=params.transaction||params.signedTransaction;if(message.match(/insufficient funds/)){logger$u.throwError(\"insufficient funds for intrinsic transaction cost\",Logger.errors.INSUFFICIENT_FUNDS,{error:error,method:method,transaction:transaction})}if(message.match(/nonce too low/)){logger$u.throwError(\"nonce has already been used\",Logger.errors.NONCE_EXPIRED,{error:error,method:method,transaction:transaction})}if(message.match(/replacement transaction underpriced/)){logger$u.throwError(\"replacement fee too low\",Logger.errors.REPLACEMENT_UNDERPRICED,{error:error,method:method,transaction:transaction})}if(message.match(/only replay-protected/)){logger$u.throwError(\"legacy pre-eip-155 transactions not supported\",Logger.errors.UNSUPPORTED_OPERATION,{error:error,method:method,transaction:transaction})}if(errorGas.indexOf(method)>=0&&message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)){logger$u.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:error,method:method,transaction:transaction})}throw error}function timer(timeout){return new Promise(function(resolve){setTimeout(resolve,timeout)})}function getResult(payload){if(payload.error){const error=new Error(payload.error.message);error.code=payload.error.code;error.data=payload.error.data;throw error}return payload.result}function getLowerCase(value){if(value){return value.toLowerCase()}return value}const _constructorGuard$4={};class JsonRpcSigner extends Signer{constructor(constructorGuard,provider,addressOrIndex){logger$u.checkNew(new.target,JsonRpcSigner);super();if(constructorGuard!==_constructorGuard$4){throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\")}defineReadOnly(this,\"provider\",provider);if(addressOrIndex==null){addressOrIndex=0}if(typeof addressOrIndex===\"string\"){defineReadOnly(this,\"_address\",this.provider.formatter.address(addressOrIndex));defineReadOnly(this,\"_index\",null)}else if(typeof addressOrIndex===\"number\"){defineReadOnly(this,\"_index\",addressOrIndex);defineReadOnly(this,\"_address\",null)}else{logger$u.throwArgumentError(\"invalid address or index\",\"addressOrIndex\",addressOrIndex)}}connect(provider){return logger$u.throwError(\"cannot alter JSON-RPC Signer connection\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"connect\"})}connectUnchecked(){return new UncheckedJsonRpcSigner(_constructorGuard$4,this.provider,this._address||this._index)}getAddress(){if(this._address){return Promise.resolve(this._address)}return this.provider.send(\"eth_accounts\",[]).then(accounts=>{if(accounts.length<=this._index){logger$u.throwError(\"unknown account #\"+this._index,Logger.errors.UNSUPPORTED_OPERATION,{operation:\"getAddress\"})}return this.provider.formatter.address(accounts[this._index])})}sendUncheckedTransaction(transaction){transaction=shallowCopy(transaction);const fromAddress=this.getAddress().then(address=>{if(address){address=address.toLowerCase()}return address});if(transaction.gasLimit==null){const estimate=shallowCopy(transaction);estimate.from=fromAddress;transaction.gasLimit=this.provider.estimateGas(estimate)}return resolveProperties({tx:resolveProperties(transaction),sender:fromAddress}).then(({tx:tx,sender:sender})=>{if(tx.from!=null){if(tx.from.toLowerCase()!==sender){logger$u.throwArgumentError(\"from address mismatch\",\"transaction\",transaction)}}else{tx.from=sender}const hexTx=this.provider.constructor.hexlifyTransaction(tx,{from:true});return this.provider.send(\"eth_sendTransaction\",[hexTx]).then(hash=>{return hash},error=>{return checkError(\"sendTransaction\",error,hexTx)})})}signTransaction(transaction){return logger$u.throwError(\"signing transactions is unsupported\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"signTransaction\"})}sendTransaction(transaction){return this.sendUncheckedTransaction(transaction).then(hash=>{return poll(()=>{return this.provider.getTransaction(hash).then(tx=>{if(tx===null){return undefined}return this.provider._wrapTransaction(tx,hash)})},{onceBlock:this.provider}).catch(error=>{error.transactionHash=hash;throw error})})}signMessage(message){return __awaiter$9(this,void 0,void 0,function*(){const data=typeof message===\"string\"?toUtf8Bytes(message):message;const address=yield this.getAddress();return yield this.provider.send(\"eth_sign\",[address.toLowerCase(),hexlify(data)])})}_signTypedData(domain,types,value){return __awaiter$9(this,void 0,void 0,function*(){const populated=yield TypedDataEncoder.resolveNames(domain,types,value,name=>{return this.provider.resolveName(name)});const address=yield this.getAddress();return yield this.provider.send(\"eth_signTypedData_v4\",[address.toLowerCase(),JSON.stringify(TypedDataEncoder.getPayload(populated.domain,types,populated.value))])})}unlock(password){return __awaiter$9(this,void 0,void 0,function*(){const provider=this.provider;const address=yield this.getAddress();return provider.send(\"personal_unlockAccount\",[address.toLowerCase(),password,null])})}}class UncheckedJsonRpcSigner extends JsonRpcSigner{sendTransaction(transaction){return this.sendUncheckedTransaction(transaction).then(hash=>{return{hash:hash,nonce:null,gasLimit:null,gasPrice:null,data:null,value:null,chainId:null,confirmations:0,from:null,wait:confirmations=>{return this.provider.waitForTransaction(hash,confirmations)}}})}}const allowedTransactionKeys$3={chainId:true,data:true,gasLimit:true,gasPrice:true,nonce:true,to:true,value:true,type:true,accessList:true};class JsonRpcProvider extends BaseProvider{constructor(url,network){logger$u.checkNew(new.target,JsonRpcProvider);let networkOrReady=network;if(networkOrReady==null){networkOrReady=new Promise((resolve,reject)=>{setTimeout(()=>{this.detectNetwork().then(network=>{resolve(network)},error=>{reject(error)})},0)})}super(networkOrReady);if(!url){url=getStatic(this.constructor,\"defaultUrl\")()}if(typeof url===\"string\"){defineReadOnly(this,\"connection\",Object.freeze({url:url}))}else{defineReadOnly(this,\"connection\",Object.freeze(shallowCopy(url)))}this._nextId=42}get _cache(){if(this._eventLoopCache==null){this._eventLoopCache={}}return this._eventLoopCache}static defaultUrl(){return\"http://localhost:8545\"}detectNetwork(){if(!this._cache[\"detectNetwork\"]){this._cache[\"detectNetwork\"]=this._uncachedDetectNetwork();setTimeout(()=>{this._cache[\"detectNetwork\"]=null},0)}return this._cache[\"detectNetwork\"]}_uncachedDetectNetwork(){return __awaiter$9(this,void 0,void 0,function*(){yield timer(0);let chainId=null;try{chainId=yield this.send(\"eth_chainId\",[])}catch(error){try{chainId=yield this.send(\"net_version\",[])}catch(error){}}if(chainId!=null){const getNetwork=getStatic(this.constructor,\"getNetwork\");try{return getNetwork(BigNumber.from(chainId).toNumber())}catch(error){return logger$u.throwError(\"could not detect network\",Logger.errors.NETWORK_ERROR,{chainId:chainId,event:\"invalidNetwork\",serverError:error})}}return logger$u.throwError(\"could not detect network\",Logger.errors.NETWORK_ERROR,{event:\"noNetwork\"})})}getSigner(addressOrIndex){return new JsonRpcSigner(_constructorGuard$4,this,addressOrIndex)}getUncheckedSigner(addressOrIndex){return this.getSigner(addressOrIndex).connectUnchecked()}listAccounts(){return this.send(\"eth_accounts\",[]).then(accounts=>{return accounts.map(a=>this.formatter.address(a))})}send(method,params){const request={method:method,params:params,id:this._nextId++,jsonrpc:\"2.0\"};this.emit(\"debug\",{action:\"request\",request:deepCopy(request),provider:this});const cache=[\"eth_chainId\",\"eth_blockNumber\"].indexOf(method)>=0;if(cache&&this._cache[method]){return this._cache[method]}const result=fetchJson(this.connection,JSON.stringify(request),getResult).then(result=>{this.emit(\"debug\",{action:\"response\",request:request,response:result,provider:this});return result},error=>{this.emit(\"debug\",{action:\"response\",error:error,request:request,provider:this});throw error});if(cache){this._cache[method]=result;setTimeout(()=>{this._cache[method]=null},0)}return result}prepareRequest(method,params){switch(method){case\"getBlockNumber\":return[\"eth_blockNumber\",[]];case\"getGasPrice\":return[\"eth_gasPrice\",[]];case\"getBalance\":return[\"eth_getBalance\",[getLowerCase(params.address),params.blockTag]];case\"getTransactionCount\":return[\"eth_getTransactionCount\",[getLowerCase(params.address),params.blockTag]];case\"getCode\":return[\"eth_getCode\",[getLowerCase(params.address),params.blockTag]];case\"getStorageAt\":return[\"eth_getStorageAt\",[getLowerCase(params.address),params.position,params.blockTag]];case\"sendTransaction\":return[\"eth_sendRawTransaction\",[params.signedTransaction]];case\"getBlock\":if(params.blockTag){return[\"eth_getBlockByNumber\",[params.blockTag,!!params.includeTransactions]]}else if(params.blockHash){return[\"eth_getBlockByHash\",[params.blockHash,!!params.includeTransactions]]}return null;case\"getTransaction\":return[\"eth_getTransactionByHash\",[params.transactionHash]];case\"getTransactionReceipt\":return[\"eth_getTransactionReceipt\",[params.transactionHash]];case\"call\":{const hexlifyTransaction=getStatic(this.constructor,\"hexlifyTransaction\");return[\"eth_call\",[hexlifyTransaction(params.transaction,{from:true}),params.blockTag]]}case\"estimateGas\":{const hexlifyTransaction=getStatic(this.constructor,\"hexlifyTransaction\");return[\"eth_estimateGas\",[hexlifyTransaction(params.transaction,{from:true})]]}case\"getLogs\":if(params.filter&&params.filter.address!=null){params.filter.address=getLowerCase(params.filter.address)}return[\"eth_getLogs\",[params.filter]];default:break}return null}perform(method,params){return __awaiter$9(this,void 0,void 0,function*(){const args=this.prepareRequest(method,params);if(args==null){logger$u.throwError(method+\" not implemented\",Logger.errors.NOT_IMPLEMENTED,{operation:method})}try{return yield this.send(args[0],args[1])}catch(error){return checkError(method,error,params)}})}_startEvent(event){if(event.tag===\"pending\"){this._startPending()}super._startEvent(event)}_startPending(){if(this._pendingFilter!=null){return}const self=this;const pendingFilter=this.send(\"eth_newPendingTransactionFilter\",[]);this._pendingFilter=pendingFilter;pendingFilter.then(function(filterId){function poll(){self.send(\"eth_getFilterChanges\",[filterId]).then(function(hashes){if(self._pendingFilter!=pendingFilter){return null}let seq=Promise.resolve();hashes.forEach(function(hash){self._emitted[\"t:\"+hash.toLowerCase()]=\"pending\";seq=seq.then(function(){return self.getTransaction(hash).then(function(tx){self.emit(\"pending\",tx);return null})})});return seq.then(function(){return timer(1e3)})}).then(function(){if(self._pendingFilter!=pendingFilter){self.send(\"eth_uninstallFilter\",[filterId]);return}setTimeout(function(){poll()},0);return null}).catch(error=>{})}poll();return filterId}).catch(error=>{})}_stopEvent(event){if(event.tag===\"pending\"&&this.listenerCount(\"pending\")===0){this._pendingFilter=null}super._stopEvent(event)}static hexlifyTransaction(transaction,allowExtra){const allowed=shallowCopy(allowedTransactionKeys$3);if(allowExtra){for(const key in allowExtra){if(allowExtra[key]){allowed[key]=true}}}checkProperties(transaction,allowed);const result={};[\"gasLimit\",\"gasPrice\",\"type\",\"nonce\",\"value\"].forEach(function(key){if(transaction[key]==null){return}const value=hexValue(transaction[key]);if(key===\"gasLimit\"){key=\"gas\"}result[key]=value});[\"from\",\"to\",\"data\"].forEach(function(key){if(transaction[key]==null){return}result[key]=hexlify(transaction[key])});if(transaction.accessList){result[\"accessList\"]=accessListify(transaction.accessList)}return result}}\"use strict\";let WS=null;try{WS=WebSocket;if(WS==null){throw new Error(\"inject please\")}}catch(error){const logger=new Logger(version$m);WS=function(){logger.throwError(\"WebSockets not supported in this environment\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"new WebSocket()\"})}}\"use strict\";var __awaiter$a=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$v=new Logger(version$m);let NextId=1;class WebSocketProvider extends JsonRpcProvider{constructor(url,network){if(network===\"any\"){logger$v.throwError(\"WebSocketProvider does not support 'any' network yet\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"network:any\"})}super(url,network);this._pollingInterval=-1;this._wsReady=false;defineReadOnly(this,\"_websocket\",new WS(this.connection.url));defineReadOnly(this,\"_requests\",{});defineReadOnly(this,\"_subs\",{});defineReadOnly(this,\"_subIds\",{});defineReadOnly(this,\"_detectNetwork\",super.detectNetwork());this._websocket.onopen=(()=>{this._wsReady=true;Object.keys(this._requests).forEach(id=>{this._websocket.send(this._requests[id].payload)})});this._websocket.onmessage=(messageEvent=>{const data=messageEvent.data;const result=JSON.parse(data);if(result.id!=null){const id=String(result.id);const request=this._requests[id];delete this._requests[id];if(result.result!==undefined){request.callback(null,result.result);this.emit(\"debug\",{action:\"response\",request:JSON.parse(request.payload),response:result.result,provider:this})}else{let error=null;if(result.error){error=new Error(result.error.message||\"unknown error\");defineReadOnly(error,\"code\",result.error.code||null);defineReadOnly(error,\"response\",data)}else{error=new Error(\"unknown error\")}request.callback(error,undefined);this.emit(\"debug\",{action:\"response\",error:error,request:JSON.parse(request.payload),provider:this})}}else if(result.method===\"eth_subscription\"){const sub=this._subs[result.params.subscription];if(sub){sub.processFunc(result.params.result)}}else{console.warn(\"this should not happen\")}});const fauxPoll=setInterval(()=>{this.emit(\"poll\")},1e3);if(fauxPoll.unref){fauxPoll.unref()}}detectNetwork(){return this._detectNetwork}get pollingInterval(){return 0}resetEventsBlock(blockNumber){logger$v.throwError(\"cannot reset events block on WebSocketProvider\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"resetEventBlock\"})}set pollingInterval(value){logger$v.throwError(\"cannot set polling interval on WebSocketProvider\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"setPollingInterval\"})}poll(){return __awaiter$a(this,void 0,void 0,function*(){return null})}set polling(value){if(!value){return}logger$v.throwError(\"cannot set polling on WebSocketProvider\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"setPolling\"})}send(method,params){const rid=NextId++;return new Promise((resolve,reject)=>{function callback(error,result){if(error){return reject(error)}return resolve(result)}const payload=JSON.stringify({method:method,params:params,id:rid,jsonrpc:\"2.0\"});this.emit(\"debug\",{action:\"request\",request:JSON.parse(payload),provider:this});this._requests[String(rid)]={callback:callback,payload:payload};if(this._wsReady){this._websocket.send(payload)}})}static defaultUrl(){return\"ws://localhost:8546\"}_subscribe(tag,param,processFunc){return __awaiter$a(this,void 0,void 0,function*(){let subIdPromise=this._subIds[tag];if(subIdPromise==null){subIdPromise=Promise.all(param).then(param=>{return this.send(\"eth_subscribe\",param)});this._subIds[tag]=subIdPromise}const subId=yield subIdPromise;this._subs[subId]={tag:tag,processFunc:processFunc}})}_startEvent(event){switch(event.type){case\"block\":this._subscribe(\"block\",[\"newHeads\"],result=>{const blockNumber=BigNumber.from(result.number).toNumber();this._emitted.block=blockNumber;this.emit(\"block\",blockNumber)});break;case\"pending\":this._subscribe(\"pending\",[\"newPendingTransactions\"],result=>{this.emit(\"pending\",result)});break;case\"filter\":this._subscribe(event.tag,[\"logs\",this._getFilter(event.filter)],result=>{if(result.removed==null){result.removed=false}this.emit(event.filter,this.formatter.filterLog(result))});break;case\"tx\":{const emitReceipt=event=>{const hash=event.hash;this.getTransactionReceipt(hash).then(receipt=>{if(!receipt){return}this.emit(hash,receipt)})};emitReceipt(event);this._subscribe(\"tx\",[\"newHeads\"],result=>{this._events.filter(e=>e.type===\"tx\").forEach(emitReceipt)});break}case\"debug\":case\"poll\":case\"willPoll\":case\"didPoll\":case\"error\":break;default:console.log(\"unhandled:\",event);break}}_stopEvent(event){let tag=event.tag;if(event.type===\"tx\"){if(this._events.filter(e=>e.type===\"tx\").length){return}tag=\"tx\"}else if(this.listenerCount(event.event)){return}const subId=this._subIds[tag];if(!subId){return}delete this._subIds[tag];subId.then(subId=>{if(!this._subs[subId]){return}delete this._subs[subId];this.send(\"eth_unsubscribe\",[subId])})}destroy(){return __awaiter$a(this,void 0,void 0,function*(){if(this._websocket.readyState===WS.CONNECTING){yield new Promise(resolve=>{this._websocket.onopen=function(){resolve(true)};this._websocket.onerror=function(){resolve(false)}})}this._websocket.close(1e3)})}}\"use strict\";var __awaiter$b=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$w=new Logger(version$m);class StaticJsonRpcProvider extends JsonRpcProvider{detectNetwork(){const _super=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return __awaiter$b(this,void 0,void 0,function*(){let network=this.network;if(network==null){network=yield _super.detectNetwork.call(this);if(!network){logger$w.throwError(\"no network detected\",Logger.errors.UNKNOWN_ERROR,{})}if(this._network==null){defineReadOnly(this,\"_network\",network);this.emit(\"network\",network,null)}}return network})}}class UrlJsonRpcProvider extends StaticJsonRpcProvider{constructor(network,apiKey){logger$w.checkAbstract(new.target,UrlJsonRpcProvider);network=getStatic(new.target,\"getNetwork\")(network);apiKey=getStatic(new.target,\"getApiKey\")(apiKey);const connection=getStatic(new.target,\"getUrl\")(network,apiKey);super(connection,network);if(typeof apiKey===\"string\"){defineReadOnly(this,\"apiKey\",apiKey)}else if(apiKey!=null){Object.keys(apiKey).forEach(key=>{defineReadOnly(this,key,apiKey[key])})}}_startPending(){logger$w.warn(\"WARNING: API provider does not support pending filters\")}isCommunityResource(){return false}getSigner(address){return logger$w.throwError(\"API provider does not support signing\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"getSigner\"})}listAccounts(){return Promise.resolve([])}static getApiKey(apiKey){return apiKey}static getUrl(network,apiKey){return logger$w.throwError(\"not implemented; sub-classes must override getUrl\",Logger.errors.NOT_IMPLEMENTED,{operation:\"getUrl\"})}}\"use strict\";const logger$x=new Logger(version$m);const defaultApiKey=\"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";class AlchemyWebSocketProvider extends WebSocketProvider{constructor(network,apiKey){const provider=new AlchemyProvider(network,apiKey);const url=provider.connection.url.replace(/^http/i,\"ws\").replace(\".alchemyapi.\",\".ws.alchemyapi.\");super(url,provider.network);defineReadOnly(this,\"apiKey\",provider.apiKey)}isCommunityResource(){return this.apiKey===defaultApiKey}}class AlchemyProvider extends UrlJsonRpcProvider{static getWebSocketProvider(network,apiKey){return new AlchemyWebSocketProvider(network,apiKey)}static getApiKey(apiKey){if(apiKey==null){return defaultApiKey}if(apiKey&&typeof apiKey!==\"string\"){logger$x.throwArgumentError(\"invalid apiKey\",\"apiKey\",apiKey)}return apiKey}static getUrl(network,apiKey){let host=null;switch(network.name){case\"homestead\":host=\"eth-mainnet.alchemyapi.io/v2/\";break;case\"ropsten\":host=\"eth-ropsten.alchemyapi.io/v2/\";break;case\"rinkeby\":host=\"eth-rinkeby.alchemyapi.io/v2/\";break;case\"goerli\":host=\"eth-goerli.alchemyapi.io/v2/\";break;case\"kovan\":host=\"eth-kovan.alchemyapi.io/v2/\";break;default:logger$x.throwArgumentError(\"unsupported network\",\"network\",arguments[0])}return{allowGzip:true,url:\"https:/\"+\"/\"+host+apiKey,throttleCallback:(attempt,url)=>{if(apiKey===defaultApiKey){showThrottleMessage()}return Promise.resolve(true)}}}isCommunityResource(){return this.apiKey===defaultApiKey}}\"use strict\";var __awaiter$c=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$y=new Logger(version$m);class CloudflareProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){if(apiKey!=null){logger$y.throwArgumentError(\"apiKey not supported for cloudflare\",\"apiKey\",apiKey)}return null}static getUrl(network,apiKey){let host=null;switch(network.name){case\"homestead\":host=\"https://cloudflare-eth.com/\";break;default:logger$y.throwArgumentError(\"unsupported network\",\"network\",arguments[0])}return host}perform(method,params){const _super=Object.create(null,{perform:{get:()=>super.perform}});return __awaiter$c(this,void 0,void 0,function*(){if(method===\"getBlockNumber\"){const block=yield _super.perform.call(this,\"getBlock\",{blockTag:\"latest\"});return block.number}return _super.perform.call(this,method,params)})}}\"use strict\";var __awaiter$d=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$z=new Logger(version$m);function getTransactionPostData(transaction){const result={};for(let key in transaction){if(transaction[key]==null){continue}let value=transaction[key];if({type:true,gasLimit:true,gasPrice:true,nonce:true,value:true}[key]){value=hexValue(hexlify(value))}else if(key===\"accessList\"){const sets=accessListify(value);value=\"[\"+sets.map(set=>{return`{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`}).join(\",\")+\"]\"}else{value=hexlify(value)}result[key]=value}return result}function getResult$1(result){if(result.status==0&&(result.message===\"No records found\"||result.message===\"No transactions found\")){return result.result}if(result.status!=1||result.message!=\"OK\"){const error=new Error(\"invalid response\");error.result=JSON.stringify(result);if((result.result||\"\").toLowerCase().indexOf(\"rate limit\")>=0){error.throttleRetry=true}throw error}return result.result}function getJsonResult(result){if(result&&result.status==0&&result.message==\"NOTOK\"&&(result.result||\"\").toLowerCase().indexOf(\"rate limit\")>=0){const error=new Error(\"throttled response\");error.result=JSON.stringify(result);error.throttleRetry=true;throw error}if(result.jsonrpc!=\"2.0\"){const error=new Error(\"invalid response\");error.result=JSON.stringify(result);throw error}if(result.error){const error=new Error(result.error.message||\"unknown error\");if(result.error.code){error.code=result.error.code}if(result.error.data){error.data=result.error.data}throw error}return result.result}function checkLogTag(blockTag){if(blockTag===\"pending\"){throw new Error(\"pending not supported\")}if(blockTag===\"latest\"){return blockTag}return parseInt(blockTag.substring(2),16)}const defaultApiKey$1=\"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";function checkError$1(method,error,transaction){if(method===\"call\"&&error.code===Logger.errors.SERVER_ERROR){const e=error.error;if(e&&e.message.match(\"reverted\")&&isHexString(e.data)){return e.data}}let message=error.message;if(error.code===Logger.errors.SERVER_ERROR){if(error.error&&typeof error.error.message===\"string\"){message=error.error.message}else if(typeof error.body===\"string\"){message=error.body}else if(typeof error.responseText===\"string\"){message=error.responseText}}message=(message||\"\").toLowerCase();if(message.match(/insufficient funds/)){logger$z.throwError(\"insufficient funds for intrinsic transaction cost\",Logger.errors.INSUFFICIENT_FUNDS,{error:error,method:method,transaction:transaction})}if(message.match(/same hash was already imported|transaction nonce is too low/)){logger$z.throwError(\"nonce has already been used\",Logger.errors.NONCE_EXPIRED,{error:error,method:method,transaction:transaction})}if(message.match(/another transaction with same nonce/)){logger$z.throwError(\"replacement fee too low\",Logger.errors.REPLACEMENT_UNDERPRICED,{error:error,method:method,transaction:transaction})}if(message.match(/execution failed due to an exception/)){logger$z.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:error,method:method,transaction:transaction})}throw error}class EtherscanProvider extends BaseProvider{constructor(network,apiKey){logger$z.checkNew(new.target,EtherscanProvider);super(network);let name=\"invalid\";if(this.network){name=this.network.name}let baseUrl=null;switch(name){case\"homestead\":baseUrl=\"https://api.etherscan.io\";break;case\"ropsten\":baseUrl=\"https://api-ropsten.etherscan.io\";break;case\"rinkeby\":baseUrl=\"https://api-rinkeby.etherscan.io\";break;case\"kovan\":baseUrl=\"https://api-kovan.etherscan.io\";break;case\"goerli\":baseUrl=\"https://api-goerli.etherscan.io\";break;default:throw new Error(\"unsupported network\")}defineReadOnly(this,\"baseUrl\",baseUrl);defineReadOnly(this,\"apiKey\",apiKey||defaultApiKey$1)}detectNetwork(){return __awaiter$d(this,void 0,void 0,function*(){return this.network})}perform(method,params){const _super=Object.create(null,{perform:{get:()=>super.perform}});return __awaiter$d(this,void 0,void 0,function*(){let url=this.baseUrl+\"/api\";let apiKey=\"\";if(this.apiKey){apiKey+=\"&apikey=\"+this.apiKey}const get=(url,payload,procFunc)=>__awaiter$d(this,void 0,void 0,function*(){this.emit(\"debug\",{action:\"request\",request:url,provider:this});const connection={url:url,throttleSlotInterval:1e3,throttleCallback:(attempt,url)=>{if(this.isCommunityResource()){showThrottleMessage()}return Promise.resolve(true)}};let payloadStr=null;if(payload){connection.headers={\"content-type\":\"application/x-www-form-urlencoded; charset=UTF-8\"};payloadStr=Object.keys(payload).map(key=>{return`${key}=${payload[key]}`}).join(\"&\")}const result=yield fetchJson(connection,payloadStr,procFunc||getJsonResult);this.emit(\"debug\",{action:\"response\",request:url,response:deepCopy(result),provider:this});return result});switch(method){case\"getBlockNumber\":url+=\"?module=proxy&action=eth_blockNumber\"+apiKey;return get(url,null);case\"getGasPrice\":url+=\"?module=proxy&action=eth_gasPrice\"+apiKey;return get(url,null);case\"getBalance\":url+=\"?module=account&action=balance&address=\"+params.address;url+=\"&tag=\"+params.blockTag+apiKey;return get(url,null,getResult$1);case\"getTransactionCount\":url+=\"?module=proxy&action=eth_getTransactionCount&address=\"+params.address;url+=\"&tag=\"+params.blockTag+apiKey;return get(url,null);case\"getCode\":url+=\"?module=proxy&action=eth_getCode&address=\"+params.address;url+=\"&tag=\"+params.blockTag+apiKey;return get(url,null);case\"getStorageAt\":url+=\"?module=proxy&action=eth_getStorageAt&address=\"+params.address;url+=\"&position=\"+params.position;url+=\"&tag=\"+params.blockTag+apiKey;return get(url,null);case\"sendTransaction\":return get(url,{module:\"proxy\",action:\"eth_sendRawTransaction\",hex:params.signedTransaction,apikey:this.apiKey}).catch(error=>{return checkError$1(\"sendTransaction\",error,params.signedTransaction)});case\"getBlock\":if(params.blockTag){url+=\"?module=proxy&action=eth_getBlockByNumber&tag=\"+params.blockTag;if(params.includeTransactions){url+=\"&boolean=true\"}else{url+=\"&boolean=false\"}url+=apiKey;return get(url,null)}throw new Error(\"getBlock by blockHash not implemented\");case\"getTransaction\":url+=\"?module=proxy&action=eth_getTransactionByHash&txhash=\"+params.transactionHash;url+=apiKey;return get(url,null);case\"getTransactionReceipt\":url+=\"?module=proxy&action=eth_getTransactionReceipt&txhash=\"+params.transactionHash;url+=apiKey;return get(url,null);case\"call\":{if(params.blockTag!==\"latest\"){throw new Error(\"EtherscanProvider does not support blockTag for call\")}const postData=getTransactionPostData(params.transaction);postData.module=\"proxy\";postData.action=\"eth_call\";postData.apikey=this.apiKey;try{return yield get(url,postData)}catch(error){return checkError$1(\"call\",error,params.transaction)}}case\"estimateGas\":{const postData=getTransactionPostData(params.transaction);postData.module=\"proxy\";postData.action=\"eth_estimateGas\";postData.apikey=this.apiKey;try{return yield get(url,postData)}catch(error){return checkError$1(\"estimateGas\",error,params.transaction)}}case\"getLogs\":{url+=\"?module=logs&action=getLogs\";if(params.filter.fromBlock){url+=\"&fromBlock=\"+checkLogTag(params.filter.fromBlock)}if(params.filter.toBlock){url+=\"&toBlock=\"+checkLogTag(params.filter.toBlock)}if(params.filter.address){url+=\"&address=\"+params.filter.address}if(params.filter.topics&&params.filter.topics.length>0){if(params.filter.topics.length>1){logger$z.throwError(\"unsupported topic count\",Logger.errors.UNSUPPORTED_OPERATION,{topics:params.filter.topics})}if(params.filter.topics.length===1){const topic0=params.filter.topics[0];if(typeof topic0!==\"string\"||topic0.length!==66){logger$z.throwError(\"unsupported topic format\",Logger.errors.UNSUPPORTED_OPERATION,{topic0:topic0})}url+=\"&topic0=\"+topic0}}url+=apiKey;const logs=yield get(url,null,getResult$1);let blocks={};for(let i=0;i<logs.length;i++){const log=logs[i];if(log.blockHash!=null){continue}if(blocks[log.blockNumber]==null){const block=yield this.getBlock(log.blockNumber);if(block){blocks[log.blockNumber]=block.hash}}log.blockHash=blocks[log.blockNumber]}return logs}case\"getEtherPrice\":if(this.network.name!==\"homestead\"){return 0}url+=\"?module=stats&action=ethprice\";url+=apiKey;return parseFloat((yield get(url,null,getResult$1)).ethusd);default:break}return _super.perform.call(this,method,params)})}getHistory(addressOrName,startBlock,endBlock){let url=this.baseUrl;let apiKey=\"\";if(this.apiKey){apiKey+=\"&apikey=\"+this.apiKey}if(startBlock==null){startBlock=0}if(endBlock==null){endBlock=99999999}return this.resolveName(addressOrName).then(address=>{url+=\"/api?module=account&action=txlist&address=\"+address;url+=\"&startblock=\"+startBlock;url+=\"&endblock=\"+endBlock;url+=\"&sort=asc\"+apiKey;this.emit(\"debug\",{action:\"request\",request:url,provider:this});const connection={url:url,throttleSlotInterval:1e3,throttleCallback:(attempt,url)=>{if(this.apiKey===defaultApiKey$1){showThrottleMessage()}return Promise.resolve(true)}};return fetchJson(connection,null,getResult$1).then(result=>{this.emit(\"debug\",{action:\"response\",request:url,response:deepCopy(result),provider:this});let output=[];result.forEach(tx=>{[\"contractAddress\",\"to\"].forEach(function(key){if(tx[key]==\"\"){delete tx[key]}});if(tx.creates==null&&tx.contractAddress!=null){tx.creates=tx.contractAddress}let item=this.formatter.transactionResponse(tx);if(tx.timeStamp){item.timestamp=parseInt(tx.timeStamp)}output.push(item)});return output})})}isCommunityResource(){return this.apiKey===defaultApiKey$1}}\"use strict\";var __awaiter$e=window&&window.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator[\"throw\"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$A=new Logger(version$m);function now(){return(new Date).getTime()}function checkNetworks(networks){let result=null;for(let i=0;i<networks.length;i++){const network=networks[i];if(network==null){return null}if(result){if(!(result.name===network.name&&result.chainId===network.chainId&&(result.ensAddress===network.ensAddress||result.ensAddress==null&&network.ensAddress==null))){logger$A.throwArgumentError(\"provider mismatch\",\"networks\",networks)}}else{result=network}}return result}function median(values,maxDelta){values=values.slice().sort();const middle=Math.floor(values.length/2);if(values.length%2){return values[middle]}const a=values[middle-1],b=values[middle];if(maxDelta!=null&&Math.abs(a-b)>maxDelta){return null}return(a+b)/2}function serialize$1(value){if(value===null){return\"null\"}else if(typeof value===\"number\"||typeof value===\"boolean\"){return JSON.stringify(value)}else if(typeof value===\"string\"){return value}else if(BigNumber.isBigNumber(value)){return value.toString()}else if(Array.isArray(value)){return JSON.stringify(value.map(i=>serialize$1(i)))}else if(typeof value===\"object\"){const keys=Object.keys(value);keys.sort();return\"{\"+keys.map(key=>{let v=value[key];if(typeof v===\"function\"){v=\"[function]\"}else{v=serialize$1(v)}return JSON.stringify(key)+\":\"+v}).join(\",\")+\"}\"}throw new Error(\"unknown value type: \"+typeof value)}let nextRid=1;function stall$1(duration){let cancel=null;let timer=null;let promise=new Promise(resolve=>{cancel=function(){if(timer){clearTimeout(timer);timer=null}resolve()};timer=setTimeout(cancel,duration)});const wait=func=>{promise=promise.then(func);return promise};function getPromise(){return promise}return{cancel:cancel,getPromise:getPromise,wait:wait}}const ForwardErrors=[Logger.errors.CALL_EXCEPTION,Logger.errors.INSUFFICIENT_FUNDS,Logger.errors.NONCE_EXPIRED,Logger.errors.REPLACEMENT_UNDERPRICED,Logger.errors.UNPREDICTABLE_GAS_LIMIT];const ForwardProperties=[\"address\",\"args\",\"errorArgs\",\"errorSignature\",\"method\",\"transaction\"];function exposeDebugConfig(config,now){const result={weight:config.weight};Object.defineProperty(result,\"provider\",{get:()=>config.provider});if(config.start){result.start=config.start}if(now){result.duration=now-config.start}if(config.done){if(config.error){result.error=config.error}else{result.result=config.result||null}}return result}function normalizedTally(normalize,quorum){return function(configs){const tally={};configs.forEach(c=>{const value=normalize(c.result);if(!tally[value]){tally[value]={count:0,result:c.result}}tally[value].count++});const keys=Object.keys(tally);for(let i=0;i<keys.length;i++){const check=tally[keys[i]];if(check.count>=quorum){return check.result}}return undefined}}function getProcessFunc(provider,method,params){let normalize=serialize$1;switch(method){case\"getBlockNumber\":return function(configs){const values=configs.map(c=>c.result);let blockNumber=median(configs.map(c=>c.result),2);if(blockNumber==null){return undefined}blockNumber=Math.ceil(blockNumber);if(values.indexOf(blockNumber+1)>=0){blockNumber++}if(blockNumber>=provider._highestBlockNumber){provider._highestBlockNumber=blockNumber}return provider._highestBlockNumber};case\"getGasPrice\":return function(configs){const values=configs.map(c=>c.result);values.sort();return values[Math.floor(values.length/2)]};case\"getEtherPrice\":return function(configs){return median(configs.map(c=>c.result))};case\"getBalance\":case\"getTransactionCount\":case\"getCode\":case\"getStorageAt\":case\"call\":case\"estimateGas\":case\"getLogs\":break;case\"getTransaction\":case\"getTransactionReceipt\":normalize=function(tx){if(tx==null){return null}tx=shallowCopy(tx);tx.confirmations=-1;return serialize$1(tx)};break;case\"getBlock\":if(params.includeTransactions){normalize=function(block){if(block==null){return null}block=shallowCopy(block);block.transactions=block.transactions.map(tx=>{tx=shallowCopy(tx);tx.confirmations=-1;return tx});return serialize$1(block)}}else{normalize=function(block){if(block==null){return null}return serialize$1(block)}}break;default:throw new Error(\"unknown method: \"+method)}return normalizedTally(normalize,provider.quorum)}function waitForSync(config,blockNumber){return __awaiter$e(this,void 0,void 0,function*(){const provider=config.provider;if(provider.blockNumber!=null&&provider.blockNumber>=blockNumber||blockNumber===-1){return provider}return poll(()=>{return new Promise((resolve,reject)=>{setTimeout(function(){if(provider.blockNumber>=blockNumber){return resolve(provider)}if(config.cancelled){return resolve(null)}return resolve(undefined)},0)})},{oncePoll:provider})})}function getRunner(config,currentBlockNumber,method,params){return __awaiter$e(this,void 0,void 0,function*(){let provider=config.provider;switch(method){case\"getBlockNumber\":case\"getGasPrice\":return provider[method]();case\"getEtherPrice\":if(provider.getEtherPrice){return provider.getEtherPrice()}break;case\"getBalance\":case\"getTransactionCount\":case\"getCode\":if(params.blockTag&&isHexString(params.blockTag)){provider=yield waitForSync(config,currentBlockNumber)}return provider[method](params.address,params.blockTag||\"latest\");case\"getStorageAt\":if(params.blockTag&&isHexString(params.blockTag)){provider=yield waitForSync(config,currentBlockNumber)}return provider.getStorageAt(params.address,params.position,params.blockTag||\"latest\");case\"getBlock\":if(params.blockTag&&isHexString(params.blockTag)){provider=yield waitForSync(config,currentBlockNumber)}return provider[params.includeTransactions?\"getBlockWithTransactions\":\"getBlock\"](params.blockTag||params.blockHash);case\"call\":case\"estimateGas\":if(params.blockTag&&isHexString(params.blockTag)){provider=yield waitForSync(config,currentBlockNumber)}return provider[method](params.transaction);case\"getTransaction\":case\"getTransactionReceipt\":return provider[method](params.transactionHash);case\"getLogs\":{let filter=params.filter;if(filter.fromBlock&&isHexString(filter.fromBlock)||filter.toBlock&&isHexString(filter.toBlock)){provider=yield waitForSync(config,currentBlockNumber)}return provider.getLogs(filter)}}return logger$A.throwError(\"unknown method error\",Logger.errors.UNKNOWN_ERROR,{method:method,params:params})})}class FallbackProvider extends BaseProvider{constructor(providers,quorum){logger$A.checkNew(new.target,FallbackProvider);if(providers.length===0){logger$A.throwArgumentError(\"missing providers\",\"providers\",providers)}const providerConfigs=providers.map((configOrProvider,index)=>{if(Provider.isProvider(configOrProvider)){const stallTimeout=isCommunityResource(configOrProvider)?2e3:750;const priority=1;return Object.freeze({provider:configOrProvider,weight:1,stallTimeout:stallTimeout,priority:priority})}const config=shallowCopy(configOrProvider);if(config.priority==null){config.priority=1}if(config.stallTimeout==null){config.stallTimeout=isCommunityResource(configOrProvider)?2e3:750}if(config.weight==null){config.weight=1}const weight=config.weight;if(weight%1||weight>512||weight<1){logger$A.throwArgumentError(\"invalid weight; must be integer in [1, 512]\",`providers[${index}].weight`,weight)}return Object.freeze(config)});const total=providerConfigs.reduce((accum,c)=>accum+c.weight,0);if(quorum==null){quorum=total/2}else if(quorum>total){logger$A.throwArgumentError(\"quorum will always fail; larger than total weight\",\"quorum\",quorum)}let networkOrReady=checkNetworks(providerConfigs.map(c=>c.provider.network));if(networkOrReady==null){networkOrReady=new Promise((resolve,reject)=>{setTimeout(()=>{this.detectNetwork().then(resolve,reject)},0)})}super(networkOrReady);defineReadOnly(this,\"providerConfigs\",Object.freeze(providerConfigs));defineReadOnly(this,\"quorum\",quorum);this._highestBlockNumber=-1}detectNetwork(){return __awaiter$e(this,void 0,void 0,function*(){const networks=yield Promise.all(this.providerConfigs.map(c=>c.provider.getNetwork()));return checkNetworks(networks)})}perform(method,params){return __awaiter$e(this,void 0,void 0,function*(){if(method===\"sendTransaction\"){const results=yield Promise.all(this.providerConfigs.map(c=>{return c.provider.sendTransaction(params.signedTransaction).then(result=>{return result.hash},error=>{return error})}));for(let i=0;i<results.length;i++){const result=results[i];if(typeof result===\"string\"){return result}}throw results[0]}if(this._highestBlockNumber===-1&&method!==\"getBlockNumber\"){yield this.getBlockNumber()}const processFunc=getProcessFunc(this,method,params);const configs=shuffled(this.providerConfigs.map(shallowCopy));configs.sort((a,b)=>a.priority-b.priority);const currentBlockNumber=this._highestBlockNumber;let i=0;let first=true;while(true){const t0=now();let inflightWeight=configs.filter(c=>c.runner&&t0-c.start<c.stallTimeout).reduce((accum,c)=>accum+c.weight,0);while(inflightWeight<this.quorum&&i<configs.length){const config=configs[i++];const rid=nextRid++;config.start=now();config.staller=stall$1(config.stallTimeout);config.staller.wait(()=>{config.staller=null});config.runner=getRunner(config,currentBlockNumber,method,params).then(result=>{config.done=true;config.result=result;if(this.listenerCount(\"debug\")){this.emit(\"debug\",{action:\"request\",rid:rid,backend:exposeDebugConfig(config,now()),request:{method:method,params:deepCopy(params)},provider:this})}},error=>{config.done=true;config.error=error;if(this.listenerCount(\"debug\")){this.emit(\"debug\",{action:\"request\",rid:rid,backend:exposeDebugConfig(config,now()),request:{method:method,params:deepCopy(params)},provider:this})}});if(this.listenerCount(\"debug\")){this.emit(\"debug\",{action:\"request\",rid:rid,backend:exposeDebugConfig(config,null),request:{method:method,params:deepCopy(params)},provider:this})}inflightWeight+=config.weight}const waiting=[];configs.forEach(c=>{if(c.done||!c.runner){return}waiting.push(c.runner);if(c.staller){waiting.push(c.staller.getPromise())}});if(waiting.length){yield Promise.race(waiting)}const results=configs.filter(c=>c.done&&c.error==null);if(results.length>=this.quorum){const result=processFunc(results);if(result!==undefined){configs.forEach(c=>{if(c.staller){c.staller.cancel()}c.cancelled=true});return result}if(!first){yield stall$1(100).getPromise()}first=false}const errors=configs.reduce((accum,c)=>{if(!c.done||c.error==null){return accum}const code=c.error.code;if(ForwardErrors.indexOf(code)>=0){if(!accum[code]){accum[code]={error:c.error,weight:0}}accum[code].weight+=c.weight}return accum},{});Object.keys(errors).forEach(errorCode=>{const tally=errors[errorCode];if(tally.weight<this.quorum){return}configs.forEach(c=>{if(c.staller){c.staller.cancel()}c.cancelled=true});const e=tally.error;const props={};ForwardProperties.forEach(name=>{if(e[name]==null){return}props[name]=e[name]});logger$A.throwError(e.reason||e.message,errorCode,props)});if(configs.filter(c=>!c.done).length===0){break}}configs.forEach(c=>{if(c.staller){c.staller.cancel()}c.cancelled=true});return logger$A.throwError(\"failed to meet quorum\",Logger.errors.SERVER_ERROR,{method:method,params:params,results:configs.map(c=>exposeDebugConfig(c)),provider:this})})}}\"use strict\";const IpcProvider=null;\"use strict\";const logger$B=new Logger(version$m);const defaultProjectId=\"84842078b09946638c03157f83405213\";class InfuraWebSocketProvider extends WebSocketProvider{constructor(network,apiKey){const provider=new InfuraProvider(network,apiKey);const connection=provider.connection;if(connection.password){logger$B.throwError(\"INFURA WebSocket project secrets unsupported\",Logger.errors.UNSUPPORTED_OPERATION,{operation:\"InfuraProvider.getWebSocketProvider()\"})}const url=connection.url.replace(/^http/i,\"ws\").replace(\"/v3/\",\"/ws/v3/\");super(url,network);defineReadOnly(this,\"apiKey\",provider.projectId);defineReadOnly(this,\"projectId\",provider.projectId);defineReadOnly(this,\"projectSecret\",provider.projectSecret)}isCommunityResource(){return this.projectId===defaultProjectId}}class InfuraProvider extends UrlJsonRpcProvider{static getWebSocketProvider(network,apiKey){return new InfuraWebSocketProvider(network,apiKey)}static getApiKey(apiKey){const apiKeyObj={apiKey:defaultProjectId,projectId:defaultProjectId,projectSecret:null};if(apiKey==null){return apiKeyObj}if(typeof apiKey===\"string\"){apiKeyObj.projectId=apiKey}else if(apiKey.projectSecret!=null){logger$B.assertArgument(typeof apiKey.projectId===\"string\",\"projectSecret requires a projectId\",\"projectId\",apiKey.projectId);logger$B.assertArgument(typeof apiKey.projectSecret===\"string\",\"invalid projectSecret\",\"projectSecret\",\"[REDACTED]\");apiKeyObj.projectId=apiKey.projectId;apiKeyObj.projectSecret=apiKey.projectSecret}else if(apiKey.projectId){apiKeyObj.projectId=apiKey.projectId}apiKeyObj.apiKey=apiKeyObj.projectId;return apiKeyObj}static getUrl(network,apiKey){let host=null;switch(network?network.name:\"unknown\"){case\"homestead\":host=\"mainnet.infura.io\";break;case\"ropsten\":host=\"ropsten.infura.io\";break;case\"rinkeby\":host=\"rinkeby.infura.io\";break;case\"kovan\":host=\"kovan.infura.io\";break;case\"goerli\":host=\"goerli.infura.io\";break;default:logger$B.throwError(\"unsupported network\",Logger.errors.INVALID_ARGUMENT,{argument:\"network\",value:network})}const connection={allowGzip:true,url:\"https:/\"+\"/\"+host+\"/v3/\"+apiKey.projectId,throttleCallback:(attempt,url)=>{if(apiKey.projectId===defaultProjectId){showThrottleMessage()}return Promise.resolve(true)}};if(apiKey.projectSecret!=null){connection.user=\"\";connection.password=apiKey.projectSecret}return connection}isCommunityResource(){return this.projectId===defaultProjectId}}class JsonRpcBatchProvider extends JsonRpcProvider{send(method,params){const request={method:method,params:params,id:this._nextId++,jsonrpc:\"2.0\"};if(this._pendingBatch==null){this._pendingBatch=[]}const inflightRequest={request:request,resolve:null,reject:null};const promise=new Promise((resolve,reject)=>{inflightRequest.resolve=resolve;inflightRequest.reject=reject});this._pendingBatch.push(inflightRequest);if(!this._pendingBatchAggregator){this._pendingBatchAggregator=setTimeout(()=>{const batch=this._pendingBatch;this._pendingBatch=null;this._pendingBatchAggregator=null;const request=batch.map(inflight=>inflight.request);this.emit(\"debug\",{action:\"requestBatch\",request:deepCopy(request),provider:this});return fetchJson(this.connection,JSON.stringify(request)).then(result=>{this.emit(\"debug\",{action:\"response\",request:request,response:result,provider:this});batch.forEach((inflightRequest,index)=>{const payload=result[index];if(payload.error){const error=new Error(payload.error.message);error.code=payload.error.code;error.data=payload.error.data;inflightRequest.reject(error)}else{inflightRequest.resolve(payload.result)}})},error=>{this.emit(\"debug\",{action:\"response\",error:error,request:request,provider:this});batch.forEach(inflightRequest=>{inflightRequest.reject(error)})})},10)}return promise}}\"use strict\";const logger$C=new Logger(version$m);const defaultApiKey$2=\"ETHERS_JS_SHARED\";class NodesmithProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){if(apiKey&&typeof apiKey!==\"string\"){logger$C.throwArgumentError(\"invalid apiKey\",\"apiKey\",apiKey)}return apiKey||defaultApiKey$2}static getUrl(network,apiKey){logger$C.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");let host=null;switch(network.name){case\"homestead\":host=\"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";break;case\"ropsten\":host=\"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";break;case\"rinkeby\":host=\"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";break;case\"goerli\":host=\"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";break;case\"kovan\":host=\"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";break;default:logger$C.throwArgumentError(\"unsupported network\",\"network\",arguments[0])}return host+\"?apiKey=\"+apiKey}}\"use strict\";const logger$D=new Logger(version$m);const defaultApplicationIds={homestead:\"6004bcd10040261633ade990\",ropsten:\"6004bd4d0040261633ade991\",rinkeby:\"6004bda20040261633ade994\",goerli:\"6004bd860040261633ade992\"};class PocketProvider extends UrlJsonRpcProvider{constructor(network,apiKey){if(apiKey==null){const n=getStatic(new.target,\"getNetwork\")(network);if(n){const applicationId=defaultApplicationIds[n.name];if(applicationId){apiKey={applicationId:applicationId,loadBalancer:true}}}if(apiKey==null){logger$D.throwError(\"unsupported network\",Logger.errors.INVALID_ARGUMENT,{argument:\"network\",value:network})}}super(network,apiKey)}static getApiKey(apiKey){if(apiKey==null){logger$D.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\",\"apiKey\",apiKey)}const apiKeyObj={applicationId:null,loadBalancer:false,applicationSecretKey:null};if(typeof apiKey===\"string\"){apiKeyObj.applicationId=apiKey}else if(apiKey.applicationSecretKey!=null){logger$D.assertArgument(typeof apiKey.applicationId===\"string\",\"applicationSecretKey requires an applicationId\",\"applicationId\",apiKey.applicationId);logger$D.assertArgument(typeof apiKey.applicationSecretKey===\"string\",\"invalid applicationSecretKey\",\"applicationSecretKey\",\"[REDACTED]\");apiKeyObj.applicationId=apiKey.applicationId;apiKeyObj.applicationSecretKey=apiKey.applicationSecretKey;apiKeyObj.loadBalancer=!!apiKey.loadBalancer}else if(apiKey.applicationId){logger$D.assertArgument(typeof apiKey.applicationId===\"string\",\"apiKey.applicationId must be a string\",\"apiKey.applicationId\",apiKey.applicationId);apiKeyObj.applicationId=apiKey.applicationId;apiKeyObj.loadBalancer=!!apiKey.loadBalancer}else{logger$D.throwArgumentError(\"unsupported PocketProvider apiKey\",\"apiKey\",apiKey)}return apiKeyObj}static getUrl(network,apiKey){let host=null;switch(network?network.name:\"unknown\"){case\"homestead\":host=\"eth-mainnet.gateway.pokt.network\";break;case\"ropsten\":host=\"eth-ropsten.gateway.pokt.network\";break;case\"rinkeby\":host=\"eth-rinkeby.gateway.pokt.network\";break;case\"goerli\":host=\"eth-goerli.gateway.pokt.network\";break;default:logger$D.throwError(\"unsupported network\",Logger.errors.INVALID_ARGUMENT,{argument:\"network\",value:network})}let url=null;if(apiKey.loadBalancer){url=`https://${host}/v1/lb/${apiKey.applicationId}`}else{url=`https://${host}/v1/${apiKey.applicationId}`}const connection={url:url};connection.headers={};if(apiKey.applicationSecretKey!=null){connection.user=\"\";connection.password=apiKey.applicationSecretKey}return connection}isCommunityResource(){return this.applicationId===defaultApplicationIds[this.network.name]}}\"use strict\";const logger$E=new Logger(version$m);let _nextId=1;function buildWeb3LegacyFetcher(provider,sendFunc){return function(method,params){if(method==\"eth_sign\"&&(provider.isMetaMask||provider.isStatus)){method=\"personal_sign\";params=[params[1],params[0]]}const request={method:method,params:params,id:_nextId++,jsonrpc:\"2.0\"};return new Promise((resolve,reject)=>{sendFunc(request,function(error,result){if(error){return reject(error)}if(result.error){const error=new Error(result.error.message);error.code=result.error.code;error.data=result.error.data;return reject(error)}resolve(result.result)})})}}function buildEip1193Fetcher(provider){return function(method,params){if(params==null){params=[]}if(method==\"eth_sign\"&&(provider.isMetaMask||provider.isStatus)){method=\"personal_sign\";params=[params[1],params[0]]}return provider.request({method:method,params:params})}}class Web3Provider extends JsonRpcProvider{constructor(provider,network){logger$E.checkNew(new.target,Web3Provider);if(provider==null){logger$E.throwArgumentError(\"missing provider\",\"provider\",provider)}let path=null;let jsonRpcFetchFunc=null;let subprovider=null;if(typeof provider===\"function\"){path=\"unknown:\";jsonRpcFetchFunc=provider}else{path=provider.host||provider.path||\"\";if(!path&&provider.isMetaMask){path=\"metamask\"}subprovider=provider;if(provider.request){if(path===\"\"){path=\"eip-1193:\"}jsonRpcFetchFunc=buildEip1193Fetcher(provider)}else if(provider.sendAsync){jsonRpcFetchFunc=buildWeb3LegacyFetcher(provider,provider.sendAsync.bind(provider))}else if(provider.send){jsonRpcFetchFunc=buildWeb3LegacyFetcher(provider,provider.send.bind(provider))}else{logger$E.throwArgumentError(\"unsupported provider\",\"provider\",provider)}if(!path){path=\"unknown:\"}}super(path,network);defineReadOnly(this,\"jsonRpcFetchFunc\",jsonRpcFetchFunc);defineReadOnly(this,\"provider\",subprovider)}send(method,params){return this.jsonRpcFetchFunc(method,params)}}\"use strict\";const logger$F=new Logger(version$m);function getDefaultProvider(network,options){if(network==null){network=\"homestead\"}if(typeof network===\"string\"){const match=network.match(/^(ws|http)s?:/i);if(match){switch(match[1]){case\"http\":return new JsonRpcProvider(network);case\"ws\":return new WebSocketProvider(network);default:logger$F.throwArgumentError(\"unsupported URL scheme\",\"network\",network)}}}const n=getNetwork(network);if(!n||!n._defaultProvider){logger$F.throwError(\"unsupported getDefaultProvider network\",Logger.errors.NETWORK_ERROR,{operation:\"getDefaultProvider\",network:network})}return n._defaultProvider({FallbackProvider:FallbackProvider,AlchemyProvider:AlchemyProvider,CloudflareProvider:CloudflareProvider,EtherscanProvider:EtherscanProvider,InfuraProvider:InfuraProvider,JsonRpcProvider:JsonRpcProvider,NodesmithProvider:NodesmithProvider,PocketProvider:PocketProvider,Web3Provider:Web3Provider,IpcProvider:IpcProvider},options)}var index$3=Object.freeze({__proto__:null,Provider:Provider,BaseProvider:BaseProvider,Resolver:Resolver,UrlJsonRpcProvider:UrlJsonRpcProvider,FallbackProvider:FallbackProvider,AlchemyProvider:AlchemyProvider,AlchemyWebSocketProvider:AlchemyWebSocketProvider,CloudflareProvider:CloudflareProvider,EtherscanProvider:EtherscanProvider,InfuraProvider:InfuraProvider,InfuraWebSocketProvider:InfuraWebSocketProvider,JsonRpcProvider:JsonRpcProvider,JsonRpcBatchProvider:JsonRpcBatchProvider,NodesmithProvider:NodesmithProvider,PocketProvider:PocketProvider,StaticJsonRpcProvider:StaticJsonRpcProvider,Web3Provider:Web3Provider,WebSocketProvider:WebSocketProvider,IpcProvider:IpcProvider,JsonRpcSigner:JsonRpcSigner,getDefaultProvider:getDefaultProvider,getNetwork:getNetwork,isCommunityResource:isCommunityResource,isCommunityResourcable:isCommunityResourcable,showThrottleMessage:showThrottleMessage,Formatter:Formatter});\"use strict\";const regexBytes=new RegExp(\"^bytes([0-9]+)$\");const regexNumber=new RegExp(\"^(u?int)([0-9]*)$\");const regexArray=new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");const Zeros$1=\"0000000000000000000000000000000000000000000000000000000000000000\";function _pack(type,value,isArray){switch(type){case\"address\":if(isArray){return zeroPad(value,32)}return arrayify(value);case\"string\":return toUtf8Bytes(value);case\"bytes\":return arrayify(value);case\"bool\":value=value?\"0x01\":\"0x00\";if(isArray){return zeroPad(value,32)}return arrayify(value)}let match=type.match(regexNumber);if(match){let size=parseInt(match[2]||\"256\");if(match[2]&&String(size)!==match[2]||size%8!==0||size===0||size>256){throw new Error(\"invalid number type - \"+type)}if(isArray){size=256}value=BigNumber.from(value).toTwos(size);return zeroPad(value,size/8)}match=type.match(regexBytes);if(match){const size=parseInt(match[1]);if(String(size)!==match[1]||size===0||size>32){throw new Error(\"invalid bytes type - \"+type)}if(arrayify(value).byteLength!==size){throw new Error(\"invalid value for \"+type)}if(isArray){return arrayify((value+Zeros$1).substring(0,66))}return value}match=type.match(regexArray);if(match&&Array.isArray(value)){const baseType=match[1];const count=parseInt(match[2]||String(value.length));if(count!=value.length){throw new Error(\"invalid value for \"+type)}const result=[];value.forEach(function(value){result.push(_pack(baseType,value,true))});return concat(result)}throw new Error(\"invalid type - \"+type)}function pack$1(types,values){if(types.length!=values.length){throw new Error(\"type/value count mismatch\")}const tight=[];types.forEach(function(type,index){tight.push(_pack(type,values[index]))});return hexlify(concat(tight))}function keccak256$1(types,values){return keccak256(pack$1(types,values))}function sha256$2(types,values){return sha256$1(pack$1(types,values))}const version$n=\"units/5.1.0\";\"use strict\";const logger$G=new Logger(version$n);const names=[\"wei\",\"kwei\",\"mwei\",\"gwei\",\"szabo\",\"finney\",\"ether\"];function commify(value){const comps=String(value).split(\".\");if(comps.length>2||!comps[0].match(/^-?[0-9]*$/)||comps[1]&&!comps[1].match(/^[0-9]*$/)||value===\".\"||value===\"-.\"){logger$G.throwArgumentError(\"invalid value\",\"value\",value)}let whole=comps[0];let negative=\"\";if(whole.substring(0,1)===\"-\"){negative=\"-\";whole=whole.substring(1)}while(whole.substring(0,1)===\"0\"){whole=whole.substring(1)}if(whole===\"\"){whole=\"0\"}let suffix=\"\";if(comps.length===2){suffix=\".\"+(comps[1]||\"0\")}while(suffix.length>2&&suffix[suffix.length-1]===\"0\"){suffix=suffix.substring(0,suffix.length-1)}const formatted=[];while(whole.length){if(whole.length<=3){formatted.unshift(whole);break}else{const index=whole.length-3;formatted.unshift(whole.substring(index));whole=whole.substring(0,index)}}return negative+formatted.join(\",\")+suffix}function formatUnits(value,unitName){if(typeof unitName===\"string\"){const index=names.indexOf(unitName);if(index!==-1){unitName=3*index}}return formatFixed(value,unitName!=null?unitName:18)}function parseUnits(value,unitName){if(typeof value!==\"string\"){logger$G.throwArgumentError(\"value must be a string\",\"value\",value)}if(typeof unitName===\"string\"){const index=names.indexOf(unitName);if(index!==-1){unitName=3*index}}return parseFixed(value,unitName!=null?unitName:18)}function formatEther(wei){return formatUnits(wei,18)}function parseEther(ether){return parseUnits(ether,18)}\"use strict\";var utils$1=Object.freeze({__proto__:null,AbiCoder:AbiCoder,defaultAbiCoder:defaultAbiCoder,Fragment:Fragment,EventFragment:EventFragment,FunctionFragment:FunctionFragment,ParamType:ParamType,FormatTypes:FormatTypes,checkResultErrors:checkResultErrors,Logger:Logger,RLP:index,_fetchData:_fetchData,fetchJson:fetchJson,poll:poll,checkProperties:checkProperties,deepCopy:deepCopy,defineReadOnly:defineReadOnly,getStatic:getStatic,resolveProperties:resolveProperties,shallowCopy:shallowCopy,arrayify:arrayify,concat:concat,stripZeros:stripZeros,zeroPad:zeroPad,isBytes:isBytes,isBytesLike:isBytesLike,defaultPath:defaultPath,HDNode:HDNode,SigningKey:SigningKey,Interface:Interface,LogDescription:LogDescription,TransactionDescription:TransactionDescription,base58:Base58,base64:index$2,hexlify:hexlify,isHexString:isHexString,hexConcat:hexConcat,hexStripZeros:hexStripZeros,hexValue:hexValue,hexZeroPad:hexZeroPad,hexDataLength:hexDataLength,hexDataSlice:hexDataSlice,nameprep:nameprep,_toEscapedUtf8String:_toEscapedUtf8String,toUtf8Bytes:toUtf8Bytes,toUtf8CodePoints:toUtf8CodePoints,toUtf8String:toUtf8String,Utf8ErrorFuncs:Utf8ErrorFuncs,formatBytes32String:formatBytes32String,parseBytes32String:parseBytes32String,hashMessage:hashMessage,namehash:namehash,isValidName:isValidName,id:id,_TypedDataEncoder:TypedDataEncoder,getAddress:getAddress,getIcapAddress:getIcapAddress,getContractAddress:getContractAddress,getCreate2Address:getCreate2Address,isAddress:isAddress,formatEther:formatEther,parseEther:parseEther,formatUnits:formatUnits,parseUnits:parseUnits,commify:commify,computeHmac:computeHmac,keccak256:keccak256,ripemd160:ripemd160$1,sha256:sha256$1,sha512:sha512$1,randomBytes:randomBytes,shuffled:shuffled,solidityPack:pack$1,solidityKeccak256:keccak256$1,soliditySha256:sha256$2,splitSignature:splitSignature,joinSignature:joinSignature,accessListify:accessListify,parseTransaction:parse,serializeTransaction:serialize,getJsonWalletAddress:getJsonWalletAddress,computeAddress:computeAddress,recoverAddress:recoverAddress,computePublicKey:computePublicKey,recoverPublicKey:recoverPublicKey,verifyMessage:verifyMessage,verifyTypedData:verifyTypedData,mnemonicToEntropy:mnemonicToEntropy,entropyToMnemonic:entropyToMnemonic,isValidMnemonic:isValidMnemonic,mnemonicToSeed:mnemonicToSeed,get SupportedAlgorithm(){return SupportedAlgorithm},get UnicodeNormalizationForm(){return UnicodeNormalizationForm},get Utf8ErrorReason(){return Utf8ErrorReason},Indexed:Indexed});const version$o=\"ethers/5.1.4\";\"use strict\";const logger$H=new Logger(version$o);var ethers=Object.freeze({__proto__:null,Signer:Signer,Wallet:Wallet,VoidSigner:VoidSigner,getDefaultProvider:getDefaultProvider,providers:index$3,BaseContract:BaseContract,Contract:Contract,ContractFactory:ContractFactory,BigNumber:BigNumber,FixedNumber:FixedNumber,constants:index$1,get errors(){return ErrorCode},logger:logger$H,utils:utils$1,wordlists:wordlists,version:version$o,Wordlist:Wordlist});\"use strict\";try{const anyGlobal=window;if(anyGlobal._ethers==null){anyGlobal._ethers=ethers}}catch(error){}export{BaseContract,BigNumber,Contract,ContractFactory,FixedNumber,Signer,VoidSigner,Wallet,Wordlist,index$1 as constants,ErrorCode as errors,ethers,getDefaultProvider,logger$H as logger,index$3 as providers,utils$1 as utils,version$o as version,wordlists};"]},"metadata":{},"sourceType":"module"}